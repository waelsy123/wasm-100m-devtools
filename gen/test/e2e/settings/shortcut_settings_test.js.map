{"version":3,"file":"shortcut_settings_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/settings/shortcut_settings_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {enableExperiment, getBrowserAndPages, timeout, waitFor, waitForFunction, waitForNoElementsWithTextContent} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {getSelectedItemText, QUICK_OPEN_SELECTOR} from '../helpers/quick_open-helpers.js';\nimport {openSettingsTab} from '../helpers/settings-helpers.js';\nimport {ADD_SHORTCUT_LINK_TEXT, clickAddShortcutLink, clickShortcutCancelButton, clickShortcutConfirmButton, clickShortcutDeleteButton, clickShortcutResetButton, CONSOLE_SHORTCUT_DISPLAY_TEXT, CONSOLE_SHORTCUT_INPUT_TEXT, CONTROL_1_CONTROL_2_CHORD_DISPLAY_TEXT, CONTROL_1_CONTROL_2_CHORD_INPUT_TEXT, CONTROL_1_CONTROL_2_SHORTCUT_DISPLAY_TEXT, CONTROL_1_CONTROL_2_SHORTCUT_INPUTS_TEXT, CONTROL_2_SHORTCUT_DISPLAY_TEXT, CONTROL_2_SHORTCUT_INPUT_TEXT, CONTROL_ALT_C_SHORTCUT_INPUT_TEXT, editShortcutListItem, selectKeyboardShortcutPreset, SHORTCUT_CHORD_TIMEOUT, shortcutInputValues, shortcutsForAction, VS_CODE_PAUSE_SHORTCUTS, VS_CODE_SETTINGS_SHORTCUTS, VS_CODE_SHORTCUTS_QUICK_OPEN_TEXT, VS_CODE_SHORTCUTS_SHORTCUTS, waitForEmptyShortcutInput, waitForVSCodeShortcutPreset} from '../helpers/settings-shortcuts-helpers.js';\n\ndescribe('Shortcuts Settings tab', async () => {\n  it('should update when the shortcuts preset is changed ', async () => {\n    await openSettingsTab('Shortcuts');\n    await selectKeyboardShortcutPreset('vsCode');\n\n    await waitForVSCodeShortcutPreset();\n\n    const shortcutsShortcuts = await shortcutsForAction('Shortcuts');\n    const settingsShortcuts = await shortcutsForAction('Settings');\n    const pauseShortcuts = await shortcutsForAction('Pause script execution');\n    assert.deepStrictEqual(shortcutsShortcuts, VS_CODE_SHORTCUTS_SHORTCUTS);\n    assert.deepStrictEqual(settingsShortcuts, VS_CODE_SETTINGS_SHORTCUTS);\n    assert.deepStrictEqual(pauseShortcuts, VS_CODE_PAUSE_SHORTCUTS);\n  });\n\n  it('should apply new shortcuts when the preset is changed', async () => {\n    const {frontend} = getBrowserAndPages();\n    await openSettingsTab('Shortcuts');\n    await selectKeyboardShortcutPreset('vsCode');\n\n    await waitForVSCodeShortcutPreset();\n\n    // close the settings dialog\n    await frontend.keyboard.press('Escape');\n\n    // use a newly-enabled shortcut to open the command menu\n    await frontend.keyboard.press('F1');\n    await waitFor(QUICK_OPEN_SELECTOR);\n\n    // make sure the command menu reflects the new shortcuts\n    await frontend.keyboard.type('Shortcuts');\n    const shortcutsItemText = await getSelectedItemText();\n\n    assert.strictEqual(shortcutsItemText, VS_CODE_SHORTCUTS_QUICK_OPEN_TEXT);\n  });\n\n  it('should allow users to open the shortcut editor and view the current shortcut', async () => {\n    await enableExperiment('keyboardShortcutEditor');\n\n    await openSettingsTab('Shortcuts');\n    await editShortcutListItem('Show Console');\n\n    const shortcutInputsText = await shortcutInputValues();\n    assert.deepStrictEqual(shortcutInputsText, CONSOLE_SHORTCUT_INPUT_TEXT);\n  });\n\n  it('should allow users to open the shortcut editor and change and add shortcuts', async () => {\n    const {frontend} = getBrowserAndPages();\n    await enableExperiment('keyboardShortcutEditor');\n\n    await openSettingsTab('Shortcuts');\n    await editShortcutListItem('Show Console');\n\n    await frontend.keyboard.down('Control');\n    await frontend.keyboard.press('1');\n    await frontend.keyboard.up('Control');\n\n    await clickAddShortcutLink();\n    await waitForEmptyShortcutInput();\n    await frontend.keyboard.down('Control');\n    await frontend.keyboard.press('2');\n    await frontend.keyboard.up('Control');\n\n    const shortcutInputsText = await shortcutInputValues();\n    assert.deepStrictEqual(shortcutInputsText, CONTROL_1_CONTROL_2_SHORTCUT_INPUTS_TEXT);\n    await clickShortcutConfirmButton();\n    await waitForNoElementsWithTextContent(ADD_SHORTCUT_LINK_TEXT);\n\n    const shortcuts = await shortcutsForAction('Show Console');\n    assert.deepStrictEqual(shortcuts, CONTROL_1_CONTROL_2_SHORTCUT_DISPLAY_TEXT);\n  });\n\n  it('should allow users to open the shortcut editor and delete and reset shortcuts', async () => {\n    const {frontend} = getBrowserAndPages();\n    await enableExperiment('keyboardShortcutEditor');\n\n    await openSettingsTab('Shortcuts');\n    await editShortcutListItem('Show Console');\n\n    await frontend.keyboard.down('Control');\n    await frontend.keyboard.press('1');\n    await frontend.keyboard.up('Control');\n\n    await clickAddShortcutLink();\n    await waitForEmptyShortcutInput();\n    await frontend.keyboard.down('Control');\n    await frontend.keyboard.press('2');\n    await frontend.keyboard.up('Control');\n\n    const shortcutInputsText = await shortcutInputValues();\n    assert.deepStrictEqual(shortcutInputsText, CONTROL_1_CONTROL_2_SHORTCUT_INPUTS_TEXT);\n\n    await clickShortcutDeleteButton(0);\n    let shortcutInputTextAfterDeletion;\n    await waitForFunction(async () => {\n      shortcutInputTextAfterDeletion = await shortcutInputValues();\n      return shortcutInputTextAfterDeletion.length === 1;\n    });\n    assert.deepStrictEqual(shortcutInputTextAfterDeletion, CONTROL_2_SHORTCUT_INPUT_TEXT);\n\n    await clickShortcutResetButton();\n    const shortcutInputTextAfterReset = await shortcutInputValues();\n    assert.deepStrictEqual(shortcutInputTextAfterReset, CONSOLE_SHORTCUT_INPUT_TEXT);\n\n    await clickShortcutConfirmButton();\n    await waitForNoElementsWithTextContent(ADD_SHORTCUT_LINK_TEXT);\n\n    const shortcuts = await shortcutsForAction('Show Console');\n    assert.deepStrictEqual(shortcuts, CONSOLE_SHORTCUT_DISPLAY_TEXT);\n  });\n\n  it('should allow users to cancel an edit and discard their changes to shortcuts', async () => {\n    const {frontend} = getBrowserAndPages();\n    await enableExperiment('keyboardShortcutEditor');\n\n    await openSettingsTab('Shortcuts');\n    await editShortcutListItem('Show Console');\n\n    await frontend.keyboard.down('Control');\n    await frontend.keyboard.press('1');\n    await frontend.keyboard.up('Control');\n\n    await clickAddShortcutLink();\n    await waitForEmptyShortcutInput();\n    await frontend.keyboard.down('Control');\n    await frontend.keyboard.press('2');\n    await frontend.keyboard.up('Control');\n\n    const shortcutInputsText = await shortcutInputValues();\n    assert.deepStrictEqual(shortcutInputsText, CONTROL_1_CONTROL_2_SHORTCUT_INPUTS_TEXT);\n    await clickShortcutCancelButton();\n    await waitForNoElementsWithTextContent(ADD_SHORTCUT_LINK_TEXT);\n\n    const shortcuts = await shortcutsForAction('Show Console');\n    assert.deepStrictEqual(shortcuts, CONSOLE_SHORTCUT_DISPLAY_TEXT);\n  });\n\n  it('should allow users to set a multi-keypress shortcut (chord)', async () => {\n    const {frontend} = getBrowserAndPages();\n    await enableExperiment('keyboardShortcutEditor');\n\n    await openSettingsTab('Shortcuts');\n    await editShortcutListItem('Show Console');\n\n    await frontend.keyboard.down('Control');\n    await frontend.keyboard.press('1');\n    await frontend.keyboard.up('Control');\n    await frontend.keyboard.down('Control');\n    await frontend.keyboard.press('2');\n    await frontend.keyboard.up('Control');\n\n    const shortcutInputsText = await shortcutInputValues();\n    assert.deepStrictEqual(shortcutInputsText, CONTROL_1_CONTROL_2_CHORD_INPUT_TEXT);\n    await clickShortcutConfirmButton();\n    await waitForNoElementsWithTextContent(ADD_SHORTCUT_LINK_TEXT);\n\n    const shortcuts = await shortcutsForAction('Show Console');\n    assert.deepStrictEqual(shortcuts, CONTROL_1_CONTROL_2_CHORD_DISPLAY_TEXT);\n  });\n\n  it('should display the physical key that is pressed rather than special characters', async () => {\n    const {frontend} = getBrowserAndPages();\n    await enableExperiment('keyboardShortcutEditor');\n\n    await openSettingsTab('Shortcuts');\n    await editShortcutListItem('Show Console');\n\n    await frontend.keyboard.down('Control');\n    await frontend.keyboard.down('Alt');\n    await frontend.keyboard.press('c');\n    await frontend.keyboard.up('Alt');\n    await frontend.keyboard.up('Control');\n\n    const shortcutInputsText = await shortcutInputValues();\n    assert.deepStrictEqual(shortcutInputsText, CONTROL_ALT_C_SHORTCUT_INPUT_TEXT);\n  });\n\n  // Flaky test\n  it.skip('[crbug.com/1149346]: should allow users to set a new shortcut after the chord timeout', async () => {\n    const {frontend} = getBrowserAndPages();\n    await enableExperiment('keyboardShortcutEditor');\n\n    await openSettingsTab('Shortcuts');\n    await editShortcutListItem('Show Console');\n\n    await frontend.keyboard.down('Control');\n    await frontend.keyboard.press('1');\n    await frontend.keyboard.up('Control');\n    await timeout(SHORTCUT_CHORD_TIMEOUT);\n    await frontend.keyboard.down('Control');\n    await frontend.keyboard.press('2');\n    await frontend.keyboard.up('Control');\n\n    const shortcutInputsText = await shortcutInputValues();\n    assert.deepStrictEqual(shortcutInputsText, CONTROL_2_SHORTCUT_INPUT_TEXT);\n    await clickShortcutConfirmButton();\n    await waitForNoElementsWithTextContent(ADD_SHORTCUT_LINK_TEXT);\n\n    const shortcuts = await shortcutsForAction('Show Console');\n    assert.deepStrictEqual(shortcuts, CONTROL_2_SHORTCUT_DISPLAY_TEXT);\n  });\n});\n"]}