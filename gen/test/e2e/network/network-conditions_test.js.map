{"version":3,"file":"network-conditions_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/network/network-conditions_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\nimport type {ElementHandle, Page} from 'puppeteer';\nimport {getBrowserAndPages, pressKey, typeText, waitFor, waitForAria, tabForward} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {navigateToNetworkTab} from '../helpers/network-helpers.js';\nimport type * as Protocol from '../../../front_end/generated/protocol.js';\n\ninterface MetaData extends Protocol.Emulation.UserAgentMetadata {\n  getHighEntropyValues: (metaDataKeys: string[]) => Promise<string[]>;\n}\ninterface NavigatorWithUserAgentData extends Navigator {\n  userAgentData: MetaData;\n}\n\ndescribe('The Network Tab', async function() {\n  beforeEach(async () => {\n    await navigateToNetworkTab('empty.html');\n  });\n\n  async function openNetworkConditions(sectionClassName: string) {\n    const networkConditionsButton = await waitForAria('More network conditions…');\n    await networkConditionsButton.click();\n    return await waitFor(sectionClassName);\n  }\n\n  async function assertDisabled(checkbox: ElementHandle<HTMLInputElement>, expected: boolean) {\n    const disabled = await checkbox.evaluate(el => el.disabled);\n    assert.strictEqual(disabled, expected);\n  }\n\n  async function assertChecked(checkbox: ElementHandle<HTMLInputElement>, expected: boolean) {\n    const checked = await checkbox.evaluate(el => el.checked);\n    assert.strictEqual(checked, expected);\n  }\n\n  async function getUserAgentMetadataFromTarget(target: Page) {\n    const getUserAgentMetaData = async () => {\n      const nav = <NavigatorWithUserAgentData>navigator;\n      return {\n        brands: nav.userAgentData.brands,\n        mobile: nav.userAgentData.mobile,\n        ...(await nav.userAgentData.getHighEntropyValues([\n          'uaFullVersion',\n          'architecture',\n          'model',\n          'platform',\n          'platformVersion',\n        ])),\n      };\n    };\n    const getUserAgentMetaDataStr = `(${getUserAgentMetaData.toString()})()`;\n    return await target.evaluate(getUserAgentMetaDataStr);\n  }\n\n  it('can change accepted content encodings', async () => {\n    const section = await openNetworkConditions('.network-config-accepted-encoding');\n    const autoCheckbox = await waitForAria('Use browser default', section);\n    const deflateCheckbox = await waitForAria('deflate', section);\n    const gzipCheckbox = await waitForAria('gzip', section);\n    const brotliCheckbox = await waitForAria('br', section);\n    await brotliCheckbox.evaluate(el => el.scrollIntoView(true));\n    await assertChecked(autoCheckbox, true);\n    await assertChecked(deflateCheckbox, true);\n    await assertChecked(gzipCheckbox, true);\n    await assertChecked(brotliCheckbox, true);\n    await assertDisabled(autoCheckbox, false);\n    await assertDisabled(deflateCheckbox, true);\n    await assertDisabled(gzipCheckbox, true);\n    await assertDisabled(brotliCheckbox, true);\n    await autoCheckbox.click();\n    await assertChecked(autoCheckbox, false);\n    await assertChecked(deflateCheckbox, true);\n    await assertChecked(gzipCheckbox, true);\n    await assertChecked(brotliCheckbox, true);\n    await assertDisabled(autoCheckbox, false);\n    await assertDisabled(deflateCheckbox, false);\n    await assertDisabled(gzipCheckbox, false);\n    await assertDisabled(brotliCheckbox, false);\n    await brotliCheckbox.click();\n    await assertChecked(autoCheckbox, false);\n    await assertChecked(deflateCheckbox, true);\n    await assertChecked(gzipCheckbox, true);\n    await assertChecked(brotliCheckbox, false);\n    await assertDisabled(autoCheckbox, false);\n    await assertDisabled(deflateCheckbox, false);\n    await assertDisabled(gzipCheckbox, false);\n    await assertDisabled(brotliCheckbox, false);\n    await autoCheckbox.click();\n    await assertChecked(autoCheckbox, true);\n    await assertChecked(deflateCheckbox, true);\n    await assertChecked(gzipCheckbox, true);\n    await assertChecked(brotliCheckbox, false);\n    await assertDisabled(autoCheckbox, false);\n    await assertDisabled(deflateCheckbox, true);\n    await assertDisabled(gzipCheckbox, true);\n    await assertDisabled(brotliCheckbox, true);\n  });\n\n  it('can override userAgentMetadata', async () => {\n    const {target, browser} = getBrowserAndPages();\n    const fullVersion = (await browser.version()).split('/')[1];\n    const majorVersion = fullVersion.split('.', 1)[0];\n    const fixedVersionUAValue =\n        'Mozilla/5.0 (Linux; U; Android 4.0.2; en-us; Galaxy Nexus Build/ICL53F) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30';\n    const dynamicVersionUAValue =\n        'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/%s Safari/537.36'.replace(\n            '%s', fullVersion);\n    const noMetadataVersionUAValue = 'Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko';\n\n    const fixedVersionUserAgentMetadataExpected = {\n      'brands': [\n        {'brand': 'Not A;Brand', 'version': '99'},\n        {'brand': 'Chromium', 'version': majorVersion},\n        {'brand': 'Google Chrome', 'version': majorVersion},\n      ],\n      'uaFullVersion': fullVersion,\n      'platform': 'Android',\n      'platformVersion': '4.0.2',\n      'architecture': '',\n      'model': 'Galaxy Nexus',\n      'mobile': true,\n    };\n    const dynamicVersionUserAgentMetadataExpected = {\n      'brands': [\n        {'brand': 'Not A;Brand', 'version': '99'},\n        {'brand': 'Chromium', 'version': majorVersion},\n        {'brand': 'Google Chrome', 'version': majorVersion},\n      ],\n      'uaFullVersion': fullVersion,\n      'platform': 'Windows',\n      'platformVersion': '10.0',\n      'architecture': 'x86',\n      'model': '',\n      'mobile': false,\n    };\n    const noMetadataVersionUserAgentMetadataExpected = {\n      'brands': [],\n      'mobile': false,\n      'uaFullVersion': '',\n      'platform': '',\n      'platformVersion': '',\n      'architecture': '',\n      'model': '',\n    };\n    const section = await openNetworkConditions('.network-config-ua');\n    const autoCheckbox = await waitForAria('Use browser default', section);\n    const uaDropdown = await waitForAria('User agent', section);\n    await assertChecked(autoCheckbox, true);\n    await autoCheckbox.click();\n    await assertChecked(autoCheckbox, false);\n\n    await uaDropdown.click();\n    await uaDropdown.select(fixedVersionUAValue);\n    await uaDropdown.click();\n    const fixedVersionUserAgentMetadata = await getUserAgentMetadataFromTarget(target);\n    assert.deepEqual(fixedVersionUserAgentMetadata, fixedVersionUserAgentMetadataExpected);\n\n    await uaDropdown.click();\n    await uaDropdown.select(dynamicVersionUAValue);\n    await uaDropdown.click();\n    const dynamicVersionUserAgentMetadata = await getUserAgentMetadataFromTarget(target);\n    assert.deepEqual(dynamicVersionUserAgentMetadata, dynamicVersionUserAgentMetadataExpected);\n\n    await uaDropdown.click();\n    await uaDropdown.select(noMetadataVersionUAValue);\n    await uaDropdown.click();\n    const noMetadataVersionUserAgentMetadata = await getUserAgentMetadataFromTarget(target);\n    assert.deepEqual(noMetadataVersionUserAgentMetadata, noMetadataVersionUserAgentMetadataExpected);\n  });\n\n  it('restores default userAgentMetadata', async () => {\n    const {target, browser} = getBrowserAndPages();\n    const fullVersion = (await browser.version()).split('/')[1];\n    const customUAValue =\n        `Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/${\n            fullVersion} Mobile Safari/537.36`;\n    const section = await openNetworkConditions('.network-config-ua');\n    const autoCheckbox = await waitForAria('Use browser default', section);\n    const uaDropdown = await waitForAria('User agent', section);\n    await assertChecked(autoCheckbox, true);\n\n    const defaultUserAgentMetadata = await getUserAgentMetadataFromTarget(target);\n    await autoCheckbox.click();\n    await assertChecked(autoCheckbox, false);\n\n    await uaDropdown.click();\n    await uaDropdown.select(customUAValue);\n    await uaDropdown.click();\n    const customUserAgentMetadata = await getUserAgentMetadataFromTarget(target);\n    assert.notDeepEqual(defaultUserAgentMetadata, customUserAgentMetadata);\n\n    await autoCheckbox.click();\n    await assertChecked(autoCheckbox, true);\n    const restoredUserAgentMetadata = await getUserAgentMetadataFromTarget(target);\n    assert.deepEqual(defaultUserAgentMetadata, restoredUserAgentMetadata);\n  });\n\n  it('can apply customized userAgentMetadata', async () => {\n    const {target} = getBrowserAndPages();\n    const section = await openNetworkConditions('.network-config-ua');\n    const autoCheckbox = await waitForAria('Use browser default', section);\n    const uaDropdown = await waitForAria('User agent', section);\n    await assertChecked(autoCheckbox, true);\n\n    await autoCheckbox.click();\n    await assertChecked(autoCheckbox, false);\n\n    // Choose \"Custom...\" UA, Move focus to UA string and enter test value\n    await uaDropdown.select('custom');\n    const userAgent = await waitForAria('Enter a custom user agent');\n    await userAgent.click();\n    await userAgent.type('Test User Agent String');\n    await tabForward();          // focus help button\n    await pressKey('Space');     // open client hints section\n    await tabForward();          // focus help link\n    await tabForward();          // focus brand name\n    await typeText('Test Brand 1');\n    await tabForward();  // focus brand version\n    await typeText('99');\n    await tabForward();          // focus delete brand button\n    await tabForward();          // focus add brand button\n    await pressKey('Enter');     // add a second brand\n\n    await typeText('Test Brand 2');\n    await tabForward();  // focus brand version\n    await typeText('100');\n    await tabForward();          // focus delete brand button\n    await tabForward();          // focus add brand button\n    await pressKey('Enter');     // add a third brand\n\n    await typeText('Test Brand 3');\n    await tabForward();  // focus brand version\n    await typeText('101');\n    await tabForward();  // focus delete brand button\n    await tabForward();  // focus add brand button\n    await tabForward();  // focus browser full version\n    await typeText('99.99');\n    await tabForward();  // focus platform name\n    await typeText('Test Platform');\n    await tabForward();  // focus platform version\n    await typeText('10');\n    await tabForward();  // focus architecture\n    await typeText('Test Architecture');\n    await tabForward();  // focus device model\n    await typeText('Test Model');\n    await tabForward();  // focus mobile checkbox\n    await pressKey('Space');\n    await tabForward();  // focus update button\n    await pressKey('Enter');\n    const userAgentMetadata = await getUserAgentMetadataFromTarget(target);\n    assert.deepEqual(userAgentMetadata, {\n      'brands': [\n        {'brand': 'Test Brand 1', 'version': '99'},\n        {'brand': 'Test Brand 2', 'version': '100'},\n        {'brand': 'Test Brand 3', 'version': '101'},\n      ],\n      'uaFullVersion': '99.99',\n      'platform': 'Test Platform',\n      'platformVersion': '10',\n      'architecture': 'Test Architecture',\n      'model': 'Test Model',\n      'mobile': true,\n    });\n\n    // Delete a brand\n    const brand = await waitForAria('Brand 1', section);  // move focus back to first brand\n    await brand.click();\n    await tabForward();  // focus brand version\n    await tabForward();  // focus delete brand button\n    await pressKey('Enter');\n\n    // Edit a value\n    const platformVersion = await waitForAria('Platform version', section);\n    await platformVersion.click();\n    await typeText('11');\n\n    // Update\n    await tabForward();  // focus architecture\n    await tabForward();  // focus device model\n    await tabForward();  // focus mobile checkbox\n    await tabForward();  // focus update button\n    await pressKey('Enter');\n    const updatedUserAgentMetadata = await getUserAgentMetadataFromTarget(target);\n    assert.deepEqual(updatedUserAgentMetadata, {\n      'brands': [\n        {'brand': 'Test Brand 2', 'version': '100'},\n        {'brand': 'Test Brand 3', 'version': '101'},\n      ],\n      'uaFullVersion': '99.99',\n      'platform': 'Test Platform',\n      'platformVersion': '1011',\n      'architecture': 'Test Architecture',\n      'model': 'Test Model',\n      'mobile': true,\n    });\n  });\n});\n"]}