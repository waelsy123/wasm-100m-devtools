{"version":3,"file":"network-datagrid_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/network/network-datagrid_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {click, getBrowserAndPages, pressKey, step, waitFor, waitForAria, waitForElementWithTextContent, waitForFunction} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {getAllRequestNames, navigateToNetworkTab, selectRequestByName, setCacheDisabled, setPersistLog, waitForSelectedRequestChange, waitForSomeRequestsToAppear} from '../helpers/network-helpers.js';\n\ndescribe('The Network Tab', async function() {\n  if (this.timeout() !== 0.0) {\n    // These tests take some time on slow windows machines.\n    this.timeout(10000);\n  }\n  const formatByteSize = (value: number) => {\n    return `${value}\\xA0B`;\n  };\n\n  beforeEach(async () => {\n    await navigateToNetworkTab('empty.html');\n    await setCacheDisabled(true);\n    await setPersistLog(false);\n  });\n\n  it('can click on checkbox label to toggle checkbox', async () => {\n    await navigateToNetworkTab('resources-from-cache.html');\n\n    // Click the label next to the checkbox input element\n    await click('[aria-label=\"Disable cache\"] + label');\n\n    const checkbox = await waitFor('[aria-label=\"Disable cache\"]');\n    const checked = await checkbox.evaluate(box => (box as HTMLInputElement).checked);\n\n    assert.strictEqual(checked, false, 'The disable cache checkbox should be unchecked');\n  });\n\n  it('shows Last-Modified', async () => {\n    const {target, frontend} = getBrowserAndPages();\n    await navigateToNetworkTab('last-modified.html');\n\n    // Reload to populate network request table\n    await target.reload({waitUntil: 'networkidle0'});\n\n    await step('Wait for the column to show up and populate its values', async () => {\n      await waitForSomeRequestsToAppear(2);\n    });\n\n    await step('Open the contextmenu for all network column', async () => {\n      await click('.name-column', {clickOptions: {button: 'right'}});\n    });\n\n    await step('Click \"Response Headers\" submenu', async () => {\n      const responseHeaders = await waitForAria('Response Headers');\n      await click(responseHeaders);\n    });\n\n    await step('Enable the Last-Modified column in the network datagrid', async () => {\n      const lastModified = await waitForAria('Last-Modified, unchecked');\n      await click(lastModified);\n    });\n\n    await step('Wait for the \"Last-Modified\" column to have the expected values', async () => {\n      const expectedValues = JSON.stringify(['Last-Modified', '', 'Sun, 26 Sep 2010 22:04:35 GMT']);\n      await waitForFunction(async () => {\n        const lastModifiedColumnValues = await frontend.$$eval(\n            'pierce/.last-modified-column',\n            cells => cells.map(element => element.textContent),\n        );\n        return JSON.stringify(lastModifiedColumnValues) === expectedValues;\n      });\n    });\n  });\n\n  it('the HTML response including cyrillic characters with utf-8 encoding', async () => {\n    const {target} = getBrowserAndPages();\n    await navigateToNetworkTab('utf-8.rawresponse');\n\n    // Reload to populate network request table\n    await target.reload({waitUntil: 'networkidle0'});\n\n    // Wait for the column to show up and populate its values\n    await waitForSomeRequestsToAppear(1);\n\n    // Open the HTML file that was loaded\n    await click('td.name-column');\n    // Wait for the detailed network information pane to show up\n    await waitFor('[aria-label=\"Response\"]');\n    // Open the raw response HTML\n    await click('[aria-label=\"Response\"]');\n    // Wait for the raw response editor to show up\n    const codeMirrorEditor = await waitFor('[aria-label=\"Code editor\"]');\n\n    const htmlRawResponse = await codeMirrorEditor.evaluate(editor => editor.textContent);\n\n    assert.strictEqual(\n        htmlRawResponse,\n        '<html><body>The following word is written using cyrillic letters and should look like \"SUCCESS\": SU\\u0421\\u0421\\u0415SS.</body></html>');\n  });\n\n  it('the correct MIME type when resources came from HTTP cache', async () => {\n    const {target, frontend} = getBrowserAndPages();\n\n    await navigateToNetworkTab('resources-from-cache.html');\n\n    // Reload the page without a cache, to force a fresh load of the network resources\n    await setCacheDisabled(true);\n    await target.reload({waitUntil: 'networkidle0'});\n\n    // Wait for the column to show up and populate its values\n    await waitForSomeRequestsToAppear(2);\n\n    // Get the size of the first two network request responses (excluding header and favicon.ico).\n    const getNetworkRequestSize = () => frontend.evaluate(() => {\n      return Array.from(document.querySelectorAll('.size-column')).slice(1, 3).map(node => node.textContent);\n    });\n    const getNetworkRequestMimeTypes = () => frontend.evaluate(() => {\n      return Array.from(document.querySelectorAll('.type-column')).slice(1, 3).map(node => node.textContent);\n    });\n\n    assert.deepEqual(await getNetworkRequestSize(), [\n      `${formatByteSize(404)}${formatByteSize(219)}`,\n      `${formatByteSize(376)}${formatByteSize(28)}`,\n    ]);\n    assert.deepEqual(await getNetworkRequestMimeTypes(), [\n      'document',\n      'script',\n    ]);\n\n    // Allow resources from the cache again and reload the page to load from cache\n    await setCacheDisabled(false);\n    await target.reload({waitUntil: 'networkidle0'});\n    // Wait for the column to show up and populate its values\n    await waitForSomeRequestsToAppear(2);\n\n    assert.deepEqual(await getNetworkRequestSize(), [\n      `${formatByteSize(404)}${formatByteSize(219)}`,\n      `(memory cache)${formatByteSize(28)}`,\n    ]);\n\n    assert.deepEqual(await getNetworkRequestMimeTypes(), [\n      'document',\n      'script',\n    ]);\n  });\n\n  it('shows the correct initiator address space', async () => {\n    const {target, frontend} = getBrowserAndPages();\n\n    await navigateToNetworkTab('fetch.html');\n\n    // Reload to populate network request table\n    await target.reload({waitUntil: 'networkidle0'});\n\n    await waitForSomeRequestsToAppear(2);\n\n    await step('Open the contextmenu for all network column', async () => {\n      await click('.name-column', {clickOptions: {button: 'right'}});\n    });\n\n    await step('Enable the Initiator Address Space column in the network datagrid', async () => {\n      const initiatorAddressSpace = await waitForAria('Initiator Address Space, unchecked');\n      await click(initiatorAddressSpace);\n    });\n\n    await step('Wait for the Initiator Address Space column to have the expected values', async () => {\n      const expectedValues = JSON.stringify(['Initiator Address Space', '', 'Local']);\n      await waitForFunction(async () => {\n        const initiatorAddressSpaceValues = await frontend.$$eval(\n            'pierce/.initiator-address-space-column',\n            cells => cells.map(element => element.textContent),\n        );\n        return JSON.stringify(initiatorAddressSpaceValues) === expectedValues;\n      });\n    });\n  });\n\n  it('shows the correct remote address space', async () => {\n    const {target, frontend} = getBrowserAndPages();\n\n    await navigateToNetworkTab('fetch.html');\n\n    // Reload to populate network request table\n    await target.reload({waitUntil: 'networkidle0'});\n\n    await waitForSomeRequestsToAppear(2);\n\n    await step('Open the contextmenu for all network column', async () => {\n      await click('.name-column', {clickOptions: {button: 'right'}});\n    });\n\n    await step('Enable the Remote Address Space column in the network datagrid', async () => {\n      const remoteAddressSpace = await waitForAria('Remote Address Space, unchecked');\n      await click(remoteAddressSpace);\n    });\n\n    await step('Wait for the Remote Address Space column to have the expected values', async () => {\n      const expectedValues = JSON.stringify(['Remote Address Space', 'Local', 'Local']);\n      await waitForFunction(async () => {\n        const remoteAddressSpaceValues = await frontend.$$eval(\n            'pierce/.remoteaddress-space-column',\n            cells => cells.map(element => element.textContent),\n        );\n        return JSON.stringify(remoteAddressSpaceValues) === expectedValues;\n      });\n    });\n  });\n\n  it('indicates resources from the web bundle in the size column', async () => {\n    const {target, frontend} = getBrowserAndPages();\n\n    await navigateToNetworkTab('resources-from-webbundle.html');\n\n    await target.reload({waitUntil: 'networkidle0'});\n\n    await waitForSomeRequestsToAppear(3);\n    await waitForElementWithTextContent(`(Web Bundle)${formatByteSize(27)}`);\n\n    const getNetworkRequestSize = () => frontend.evaluate(() => {\n      return Array.from(document.querySelectorAll('.size-column')).slice(2, 4).map(node => node.textContent);\n    });\n\n    assert.sameMembers(await getNetworkRequestSize(), [\n      `${formatByteSize(653)}${formatByteSize(0)}`,\n      `(Web Bundle)${formatByteSize(27)}`,\n    ]);\n  });\n\n  it('shows web bundle metadata error in the status column', async () => {\n    const {target, frontend} = getBrowserAndPages();\n\n    await navigateToNetworkTab('resources-from-webbundle-with-bad-metadata.html');\n\n    await target.reload({waitUntil: 'networkidle0'});\n\n    await waitForSomeRequestsToAppear(3);\n    await waitForElementWithTextContent('Web Bundle error');\n\n    const getNetworkRequestStatus = () => frontend.evaluate(() => {\n      return Array.from(document.querySelectorAll('.status-column')).slice(2, 4).map(node => node.textContent);\n    });\n\n    assert.sameMembers(await getNetworkRequestStatus(), ['Web Bundle error', '(failed)net::ERR_INVALID_WEB_BUNDLE']);\n  });\n\n  it('shows web bundle inner request error in the status column', async () => {\n    const {target, frontend} = getBrowserAndPages();\n\n    await navigateToNetworkTab('resources-from-webbundle-with-bad-inner-request.html');\n\n    await target.reload({waitUntil: 'networkidle0'});\n\n    await waitForSomeRequestsToAppear(3);\n    await waitForElementWithTextContent('Web Bundle error');\n\n    const getNetworkRequestSize = () => frontend.evaluate(() => {\n      return Array.from(document.querySelectorAll('.status-column')).slice(2, 4).map(node => node.textContent);\n    });\n\n    assert.sameMembers(await getNetworkRequestSize(), ['200OK', 'Web Bundle error']);\n  });\n\n  it('shows web bundle icons', async () => {\n    const {target, frontend} = getBrowserAndPages();\n\n    await navigateToNetworkTab('resources-from-webbundle.html');\n\n    await setCacheDisabled(true);\n    await target.reload({waitUntil: 'networkidle0'});\n\n    await waitForSomeRequestsToAppear(3);\n    await waitFor('.name-column > [role=\"link\"] > .icon');\n\n    const getNetworkRequestIcons = () => frontend.evaluate(() => {\n      return Array.from(document.querySelectorAll('.name-column > .icon'))\n          .slice(1, 4)\n          .map(node => (node as HTMLImageElement).alt);\n    });\n    assert.sameMembers(await getNetworkRequestIcons(), [\n      'Script',\n      'WebBundle',\n    ]);\n    const getFromWebBundleIcons = () => frontend.evaluate(() => {\n      return Array.from(document.querySelectorAll('.name-column > [role=\"link\"] > .icon'))\n          .map(node => (node as HTMLImageElement).alt);\n    });\n    assert.sameMembers(await getFromWebBundleIcons(), [\n      'Served from Web Bundle',\n    ]);\n  });\n\n  it('shows preserved pending requests as unknown', async () => {\n    const {target, frontend} = getBrowserAndPages();\n\n    await navigateToNetworkTab('send_beacon_on_unload.html');\n\n    await setCacheDisabled(true);\n    await target.reload({waitUntil: 'networkidle0'});\n\n    await waitForSomeRequestsToAppear(1);\n\n    await setPersistLog(true);\n\n    await navigateToNetworkTab('fetch.html');\n    await waitForSomeRequestsToAppear(1);\n\n    async function getStatusAndTime(name: string) {\n      const statusColumn = await frontend.evaluate(() => {\n        return Array.from(document.querySelectorAll('.status-column')).map(node => node.textContent);\n      });\n      const timeColumn = await frontend.evaluate(() => {\n        return Array.from(document.querySelectorAll('.time-column')).map(node => node.textContent);\n      });\n      const nameColumn = await frontend.evaluate(() => {\n        return Array.from(document.querySelectorAll('.name-column')).map(node => node.textContent);\n      });\n      const index = nameColumn.findIndex(x => x === name);\n      return {status: statusColumn[index], time: timeColumn[index]};\n    }\n\n    // We need to wait for the network log to update.\n    await waitForFunction(async () => {\n      const {status, time} = await getStatusAndTime('sendBeacon');\n      // Depending on timing of the reporting, the status infomation (404) might reach DevTools in time.\n      return (status === '(unknown)' || status === '404') && time === '(unknown)';\n    });\n  });\n\n  it('repeats xhr request on \"r\" shortcut when the request is focused', async () => {\n    const {target} = getBrowserAndPages();\n\n    await navigateToNetworkTab('xhr.html');\n    await target.reload({waitUntil: 'networkidle0'});\n    await waitForSomeRequestsToAppear(2);\n\n    await selectRequestByName('image.svg');\n    await waitForSelectedRequestChange(null);\n    await pressKey('r');\n    await waitForSomeRequestsToAppear(3);\n\n    const updatedRequestNames = await getAllRequestNames();\n    assert.deepStrictEqual(updatedRequestNames, ['xhr.html', 'image.svg', 'image.svg']);\n  });\n\n  it('shows the request panel when clicked during a websocket message (https://crbug.com/1222382)', async () => {\n    await navigateToNetworkTab('websocket.html?infiniteMessages=true');\n\n    await waitForSomeRequestsToAppear(2);\n\n    // WebSocket messages get sent every 100 milliseconds, so holding the mouse\n    // down for 300 milliseconds should suffice.\n    await selectRequestByName('localhost', {delay: 300});\n\n    await waitFor('.network-item-view');\n  });\n});\n"]}