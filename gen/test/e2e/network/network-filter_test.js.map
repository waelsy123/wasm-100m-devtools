{"version":3,"file":"network-filter_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/network/network-filter_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {expect} from 'chai';\nimport type {ElementHandle} from 'puppeteer';\n\nimport {click, reloadDevTools, typeText, waitFor, waitForAria, waitForMany, waitForNone, getTestServerPort} from '../../shared/helper.js';\n\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {navigateToNetworkTab, setPersistLog} from '../helpers/network-helpers.js';\n\nconst SIMPLE_PAGE_REQUEST_NUMBER = 10;\nconst SIMPLE_PAGE_URL = `requests.html?num=${SIMPLE_PAGE_REQUEST_NUMBER}`;\n\nconst RESULTS = [\n  `requests.html?num=${SIMPLE_PAGE_REQUEST_NUMBER}/test/e2e/resources/network`,\n  ...Array.from({length: SIMPLE_PAGE_REQUEST_NUMBER}, (_, i) => `image.svg?id=${i}/test/e2e/resources/network`),\n];\n\nasync function elementTextContent(element: ElementHandle): Promise<string> {\n  return await element.evaluate(node => node.textContent || '');\n}\n\nasync function checkboxIsChecked(element: ElementHandle<HTMLInputElement>): Promise<boolean> {\n  return await element.evaluate(node => node.checked);\n}\n\nasync function clearFilter() {\n  await click(await waitFor('.filter-input-clear-button'));\n}\n\ndescribe('The Network Tab', async function() {\n  // One of these tests reloads panels repeatedly, which can take a longer time.\n  this.timeout(20_000);\n\n  beforeEach(async () => {\n    await navigateToNetworkTab(SIMPLE_PAGE_URL);\n  });\n\n  it('can filter by text in the log view', async () => {\n    await typeText('9');\n    const nodes = await waitForMany('.data-grid-data-grid-node > .name-column', 1);\n    expect(nodes.length).to.equal(1);\n    expect(await elementTextContent(nodes[0])).to.equal(RESULTS[10]);\n  });\n\n  it('can match multiple requests by text in the log view', async () => {\n    await typeText('svg');\n    const nodes = await waitForMany('.data-grid-data-grid-node > .name-column', 1);\n    expect(nodes.length).to.equal(10);\n  });\n\n  it('can filter by regex in the log view', async () => {\n    await typeText('/8/');\n    const nodes = await waitForMany('.data-grid-data-grid-node > .name-column', 1);\n    expect(nodes.length).to.equal(1);\n    expect(await elementTextContent(nodes[0])).to.equal(RESULTS[9]);\n  });\n\n  it('can match multiple requests by regex in the log view', async () => {\n    await typeText('/.*/');\n    let nodes = await waitForMany('.data-grid-data-grid-node > .name-column', 1);\n    expect(nodes.length).to.equal(11);\n\n    await clearFilter();\n    await typeText('/.*\\\\..*/');\n    nodes = await waitForMany('.data-grid-data-grid-node > .name-column', 1);\n    expect(nodes.length).to.equal(11);\n\n    await clearFilter();\n    await typeText('/.*\\\\.svg/');\n    nodes = await waitForMany('.data-grid-data-grid-node > .name-column', 1);\n    expect(nodes.length).to.equal(10);\n  });\n\n  it('can match no requests by regex in the log view', async () => {\n    await typeText('/NOTHINGTOMATCH/');\n    await waitForNone('.data-grid-data-grid-node > .name-column');\n\n    await clearFilter();\n    await typeText('//');\n    await waitForNone('.data-grid-data-grid-node > .name-column');\n  });\n\n  // Mac doesn't consistently respect force-cache\n  it.skipOnPlatforms(['mac'], '[crbug.com/1297070] can filter by cache status in the log view', async () => {\n    await navigateToNetworkTab(`requests.html?num=5&cache=no-store&nocache=${Math.random()}`);\n    await setPersistLog(true);\n    await navigateToNetworkTab(`requests.html?num=3&cache=force-cache&nocache=${Math.random()}`);\n    await typeText('-is:from-cache');\n    let nodes = await waitForMany('.data-grid-data-grid-node > .name-column', 1);\n    expect(nodes.length).to.equal(7);\n\n    await clearFilter();\n    await typeText('is:from-cache');\n    nodes = await waitForMany('.data-grid-data-grid-node > .name-column', 1);\n    expect(nodes.length).to.equal(3);\n    await setPersistLog(false);\n  });\n\n  it('require operator to filter by scheme', async () => {\n    await typeText('http');\n    await waitForNone('.data-grid-data-grid-node > .name-column');\n\n    await typeText('s');\n    await waitForNone('.data-grid-data-grid-node > .name-column');\n\n    await typeText('://');\n    await waitForNone('.data-grid-data-grid-node > .name-column');\n\n    await clearFilter();\n    await typeText('scheme:https');\n    const nodes = await waitForMany('.data-grid-data-grid-node > .name-column', 1);\n    expect(nodes.length).to.equal(11);\n  });\n\n  it('require operator to filter by scheme', async () => {\n    await typeText('localhost');\n    await waitForNone('.data-grid-data-grid-node > .name-column');\n\n    await clearFilter();\n    await typeText('domain:localhost');\n    const nodes = await waitForMany('.data-grid-data-grid-node > .name-column', 1);\n    expect(nodes.length).to.equal(11);\n  });\n\n  it('can filter by partial URL in the log view', async () => {\n    await clearFilter();\n    await typeText(`https://localhost:${getTestServerPort()}//`);\n    const nodes = await waitForMany('.data-grid-data-grid-node > .name-column', 1);\n    expect(nodes.length).to.equal(11);\n  });\n\n  it('can reverse filter text in the log view', async () => {\n    await typeText('-7');\n    const nodes = await waitForMany('.data-grid-data-grid-node > .name-column', 10);\n    const output = [...RESULTS];\n    output.splice(8, 1);\n    expect(nodes.length).to.equal(output.length);\n    for (let i = 0; i < 10; i++) {\n      expect(await elementTextContent(nodes[i])).to.equal(output[i]);\n    }\n  });\n\n  it('can reverse filter regex in the log view', async () => {\n    await typeText('-/6/');\n    const nodes = await waitForMany('.data-grid-data-grid-node > .name-column', 10);\n    const output = [...RESULTS];\n    output.splice(7, 1);\n    expect(nodes.length).to.equal(output.length);\n    for (let i = 0; i < 10; i++) {\n      expect(await elementTextContent(nodes[i])).to.equal(output[i]);\n    }\n  });\n\n  it('can invert text filters', async () => {\n    const invertCheckbox = await waitForAria('Invert');\n    expect(await checkboxIsChecked(invertCheckbox)).to.equal(false);\n    await typeText('5');\n    await click(invertCheckbox);\n    expect(await checkboxIsChecked(invertCheckbox)).to.equal(true);\n    const nodes = await waitForMany('.data-grid-data-grid-node > .name-column', 10);\n    const output = [...RESULTS];\n    output.splice(6, 1);\n    expect(nodes.length).to.equal(output.length);\n    for (let i = 0; i < 10; i++) {\n      expect(await elementTextContent(nodes[i])).to.equal(output[i]);\n    }\n    // Cleanup\n    await click(invertCheckbox);\n    expect(await checkboxIsChecked(invertCheckbox)).to.equal(false);\n  });\n\n  it('can invert regex filters', async () => {\n    const invertCheckbox = await waitForAria('Invert');\n    expect(await checkboxIsChecked(invertCheckbox)).to.equal(false);\n    await typeText('/4/');\n    await click(invertCheckbox);\n    expect(await checkboxIsChecked(invertCheckbox)).to.equal(true);\n    const nodes = await waitForMany('.data-grid-data-grid-node > .name-column', 10);\n    const output = [...RESULTS];\n    output.splice(5, 1);\n    expect(nodes.length).to.equal(output.length);\n    for (let i = 0; i < 10; i++) {\n      expect(await elementTextContent(nodes[i])).to.equal(output[i]);\n    }\n    // Cleanup\n    await click(invertCheckbox);\n    expect(await checkboxIsChecked(invertCheckbox)).to.equal(false);\n  });\n\n  it('can invert negated text filters', async () => {\n    const invertCheckbox = await waitForAria('Invert');\n    expect(await checkboxIsChecked(invertCheckbox)).to.equal(false);\n    await typeText('-10');\n    await click(invertCheckbox);\n    expect(await checkboxIsChecked(invertCheckbox)).to.equal(true);\n    const nodes = await waitForMany('.data-grid-data-grid-node > .name-column', 1);\n    expect(nodes.length).to.equal(1);\n    expect(await elementTextContent(nodes[0])).to.equal(RESULTS[0]);\n    // Cleanup\n    await click(invertCheckbox);\n    expect(await checkboxIsChecked(invertCheckbox)).to.equal(false);\n  });\n\n  it('can invert negated regex filters', async () => {\n    const invertCheckbox = await waitForAria('Invert');\n    expect(await checkboxIsChecked(invertCheckbox)).to.equal(false);\n    await typeText('-/10/');\n    await click(invertCheckbox);\n    expect(await checkboxIsChecked(invertCheckbox)).to.equal(true);\n    const nodes = await waitForMany('.data-grid-data-grid-node > .name-column', 1);\n    expect(nodes.length).to.equal(1);\n    expect(await elementTextContent(nodes[0])).to.equal(RESULTS[0]);\n    // Cleanup\n    await click(invertCheckbox);\n    expect(await checkboxIsChecked(invertCheckbox)).to.equal(false);\n  });\n\n  it('can persist the invert checkbox', async () => {\n    // Start with invert disabled, then enable it.\n    {\n      const invertCheckbox = await waitForAria('Invert');\n      expect(await checkboxIsChecked(invertCheckbox)).to.equal(false);\n      await click(invertCheckbox);\n      expect(await checkboxIsChecked(invertCheckbox)).to.equal(true);\n    }\n    // Verify persistence when enabled.\n    await reloadDevTools({queryParams: {panel: 'network'}});\n    {\n      const invertCheckbox = await waitForAria('Invert');\n      expect(await checkboxIsChecked(invertCheckbox)).to.equal(true);\n      await click(invertCheckbox);\n      expect(await checkboxIsChecked(invertCheckbox)).to.equal(false);\n    }\n    // Verify persistence when disabled.\n    await reloadDevTools({queryParams: {panel: 'network'}});\n    {\n      const invertCheckbox = await waitForAria('Invert');\n      expect(await checkboxIsChecked(invertCheckbox)).to.equal(false);\n    }\n  });\n});\n"]}