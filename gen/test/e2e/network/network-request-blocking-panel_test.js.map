{"version":3,"file":"network-request-blocking-panel_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/network/network-request-blocking-panel_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\nimport {expect} from 'chai';\nimport type {ElementHandle} from 'puppeteer';\n\nimport {openPanelViaMoreTools} from '../helpers/settings-helpers.js';\nimport {getBrowserAndPages, waitFor, waitForAria, waitForAriaNone, waitForElementWithTextContent, waitForFunction} from '../../shared/helper.js';\n\nasync function navigateToNetworkRequestBlockingTab() {\n  await openPanelViaMoreTools('Network request blocking');\n}\n\nasync function checkboxIsChecked(element: ElementHandle<HTMLInputElement>): Promise<boolean> {\n  return await element.evaluate(node => node.checked);\n}\n\nasync function isVisible(\n    element: ElementHandle<HTMLInputElement>, container: ElementHandle<HTMLInputElement>): Promise<boolean> {\n  const elementBox = JSON.parse(await element.evaluate(e => JSON.stringify(e.getBoundingClientRect())));\n  const containerBox = JSON.parse(await container.evaluate(e => JSON.stringify(e.getBoundingClientRect())));\n\n  return elementBox.top <= containerBox.top ? containerBox.top - elementBox.top <= elementBox.height :\n                                              elementBox.bottom - containerBox.bottom <= elementBox.height;\n}\n\nasync function disableNetworkRequestBlocking() {\n  const networkRequestBlockingCheckbox = await waitForAria('Enable network request blocking');\n  expect(await checkboxIsChecked(networkRequestBlockingCheckbox)).to.equal(true);\n  await networkRequestBlockingCheckbox.click();\n  expect(await checkboxIsChecked(networkRequestBlockingCheckbox)).to.equal(false);\n}\n\n// Flakey in the beforeEach step on Mac bot.\ndescribe.skip('[crbug.com/1259120] Network request blocking panel', async () => {\n  beforeEach(async () => {\n    await navigateToNetworkRequestBlockingTab();\n    for (let i = 0; i < 20; i++) {\n      const plusButton = await waitForAria('Add pattern');\n      await plusButton.click();\n      const inputField = await waitFor('.blocked-url-edit-value > input');\n      await inputField.type(i.toString());\n      const addButton = await waitForAria('Add');\n      await addButton.click();\n    }\n  });\n\n  it('pattern list inactive when blocking disabled', async () => {\n    await disableNetworkRequestBlocking();\n\n    await waitForAriaNone('Edit');\n    await waitForAriaNone('Remove');\n\n    const firstListItem = await waitFor('.blocked-url');\n    const firstCheckbox = await waitFor('.widget > .list > .list-item > .blocked-url > .blocked-url-checkbox');\n    expect(await checkboxIsChecked(firstCheckbox)).to.equal(true);\n    await firstListItem.click();\n    expect(await checkboxIsChecked(firstCheckbox)).to.equal(true);\n  });\n\n  it('pattern scrollable when blocking disabled', async () => {\n    await disableNetworkRequestBlocking();\n\n    const list = await waitFor('.list');\n    const listBB = await list.boundingBox();\n    if (listBB) {\n      const {frontend} = getBrowserAndPages();\n      // +20 to move from the top left point so we are definitely scrolling\n      // within the container\n      await frontend.mouse.move(listBB.x + 20, listBB.y + 20);\n      await frontend.mouse.wheel({deltaY: 450});\n    } else {\n      assert.fail('Could not obtain a bounding box for the pattern list.');\n    }\n\n    const lastListItem = await waitForElementWithTextContent('19');\n    await waitForFunction(() => isVisible(lastListItem, list));\n  });\n});\n"]}