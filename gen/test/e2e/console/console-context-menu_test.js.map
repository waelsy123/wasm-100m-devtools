{"version":3,"file":"console-context-menu_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/console/console-context-menu_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {click, getBrowserAndPages, typeText} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {clickOnContextMenu, CONSOLE_TAB_SELECTOR, focusConsolePrompt} from '../helpers/console-helpers.js';\n\ndescribe('The Console Tab', async function() {\n  beforeEach(async () => {\n    const {frontend} = getBrowserAndPages();\n    await frontend.evaluate('{ navigator.clipboard.writeText = (data) => { globalThis._clipboardData = data; }};');\n  });\n\n  const RESULT_SELECTOR = '.console-message-text';\n\n  it('can copy contents for strings', async () => {\n    const {frontend} = getBrowserAndPages();\n    await click(CONSOLE_TAB_SELECTOR);\n    await focusConsolePrompt();\n    await typeText('\\'string\\\\ncontent\\'\\n');\n    await clickOnContextMenu(RESULT_SELECTOR, 'Copy string contents');\n    const copiedContent = await frontend.evaluate('globalThis._clipboardData');\n    assert.deepEqual(copiedContent, 'string\\ncontent');\n  });\n\n  it('can copy strings as JS literals', async () => {\n    const {frontend} = getBrowserAndPages();\n    await click(CONSOLE_TAB_SELECTOR);\n    await focusConsolePrompt();\n    await typeText('\\'string\\\\ncontent\\'\\n');\n    await clickOnContextMenu(RESULT_SELECTOR, 'Copy string as JavaScript literal');\n    const copiedContent = await frontend.evaluate('globalThis._clipboardData');\n    assert.deepEqual(copiedContent, '\\'string\\\\ncontent\\'');\n  });\n\n  it('can copy strings as JSON literals', async () => {\n    const {frontend} = getBrowserAndPages();\n    await click(CONSOLE_TAB_SELECTOR);\n    await focusConsolePrompt();\n    await typeText('\\'string\\\\ncontent\\'\\n');\n    await clickOnContextMenu(RESULT_SELECTOR, 'Copy string as JSON literal');\n    const copiedContent = await frontend.evaluate('globalThis._clipboardData');\n    assert.deepEqual(copiedContent, '\"string\\\\ncontent\"');\n  });\n\n  it('can copy numbers', async () => {\n    const {frontend} = getBrowserAndPages();\n    await click(CONSOLE_TAB_SELECTOR);\n    await focusConsolePrompt();\n    await typeText('500\\n');\n    await clickOnContextMenu(RESULT_SELECTOR, 'Copy number');\n    const copiedContent = await frontend.evaluate('globalThis._clipboardData');\n    assert.deepEqual(copiedContent, '500');\n  });\n\n  it('can copy bigints', async () => {\n    const {frontend} = getBrowserAndPages();\n    await click(CONSOLE_TAB_SELECTOR);\n    await focusConsolePrompt();\n    await typeText('500n\\n');\n    await clickOnContextMenu(RESULT_SELECTOR, 'Copy bigint');\n    const copiedContent = await frontend.evaluate('globalThis._clipboardData');\n    assert.deepEqual(copiedContent, '500n');\n  });\n\n  it('can copy booleans', async () => {\n    const {frontend} = getBrowserAndPages();\n    await click(CONSOLE_TAB_SELECTOR);\n    await focusConsolePrompt();\n    await typeText('true\\n');\n    await clickOnContextMenu(RESULT_SELECTOR, 'Copy boolean');\n    const copiedContent = await frontend.evaluate('globalThis._clipboardData');\n    assert.deepEqual(copiedContent, 'true');\n  });\n\n  it('can copy undefined', async () => {\n    const {frontend} = getBrowserAndPages();\n    await click(CONSOLE_TAB_SELECTOR);\n    await focusConsolePrompt();\n    await typeText('undefined\\n');\n    await clickOnContextMenu(RESULT_SELECTOR, 'Copy undefined');\n    const copiedContent = await frontend.evaluate('globalThis._clipboardData');\n    assert.deepEqual(copiedContent, 'undefined');\n  });\n});\n"]}