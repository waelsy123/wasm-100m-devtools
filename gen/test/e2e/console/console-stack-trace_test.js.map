{"version":3,"file":"console-stack-trace_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/console/console-stack-trace_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {$, click, getBrowserAndPages, goToResource, typeText, waitForFunction} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {CONSOLE_TAB_SELECTOR, focusConsolePrompt, STACK_PREVIEW_CONTAINER} from '../helpers/console-helpers.js';\nimport {openSettingsTab} from '../helpers/settings-helpers.js';\n\nconst CONSOLE_MESSAGE_WRAPPER = '.console-message-stack-trace-wrapper';\nconst ADD_FILENAME_PATTERN_BUTTON = 'button[aria-label=\"Add filename pattern\"]';\nconst ADD_BUTTON = '.editor-buttons .primary-button';\nconst CLOSE_SETTINGS_BUTTON = '.close-button[aria-label=\"Close\"]';\nconst SHOW_MORE_LINK = '.show-all-link .link';\n\ndescribe('The Console Tab', async () => {\n  it('shows messages with stack traces', async () => {\n    const {frontend} = getBrowserAndPages();\n    await click(CONSOLE_TAB_SELECTOR);\n    await focusConsolePrompt();\n    await goToResource('console/stack-trace.html');\n\n    await frontend.waitForSelector(CONSOLE_MESSAGE_WRAPPER);\n    await click(CONSOLE_MESSAGE_WRAPPER);\n    const stack = await $(STACK_PREVIEW_CONTAINER);\n\n    const expected = [\n      {text: '\\nshown3 @ showMe.js:10', classes: {}},\n      {text: '\\nshown2 @ showMe.js:6', classes: {}},\n      {text: '\\nshown1 @ showMe.js:2', classes: {}},\n      {text: '\\n(anonymous) @ ignoreMe.js:21', classes: {}},\n      {text: '\\nPromise.then (async)', classes: {}},\n      {text: '\\nignoreListed4 @ ignoreMe.js:20', classes: {}},\n      {text: '\\nignoreListed3 @ ignoreMe.js:16', classes: {}},\n      {text: '\\nignoreListed2 @ ignoreMe.js:12', classes: {}},\n      {text: '\\nignoreListed1 @ ignoreMe.js:8', classes: {}},\n      {text: '\\n(anonymous) @ ignoreMe.js:5', classes: {}},\n    ];\n\n    await waitForFunction(async () => {\n      const stackTraceRows = await frontend.evaluate((stack: Element) => {\n        return Array.from(stack.querySelectorAll('tr'))\n            .map(node => ({text: node.textContent, classes: node.classList}));\n      }, stack);\n      return JSON.stringify(stackTraceRows) === JSON.stringify(expected);\n    });\n  });\n\n  it('shows messages with stack traces containing ignore-listed frames', async () => {\n    const {frontend} = getBrowserAndPages();\n    await openSettingsTab('Ignore List');\n    await click(ADD_FILENAME_PATTERN_BUTTON);\n    await typeText('ignoreMe.js');\n    await click(ADD_BUTTON);\n    await click(CLOSE_SETTINGS_BUTTON);\n\n    await goToResource('console/stack-trace.html');\n    await click(CONSOLE_TAB_SELECTOR);\n\n    await frontend.waitForSelector(CONSOLE_MESSAGE_WRAPPER);\n    await click(CONSOLE_MESSAGE_WRAPPER);\n    const stack = await $(STACK_PREVIEW_CONTAINER);\n\n    const expected = [\n      {text: '\\nshown3 @ showMe.js:10', classes: {}},\n      {text: '\\nshown2 @ showMe.js:6', classes: {}},\n      {text: '\\nshown1 @ showMe.js:2', classes: {}},\n      {text: '\\n(anonymous) @ ignoreMe.js:21', classes: {'0': 'hidden-row'}},\n      {text: '\\nPromise.then (async)', classes: {'0': 'hidden-row'}},\n      {text: '\\nignoreListed4 @ ignoreMe.js:20', classes: {'0': 'hidden-row'}},\n      {text: '\\nignoreListed3 @ ignoreMe.js:16', classes: {'0': 'hidden-row'}},\n      {text: '\\nignoreListed2 @ ignoreMe.js:12', classes: {'0': 'hidden-row'}},\n      {text: '\\nignoreListed1 @ ignoreMe.js:8', classes: {'0': 'hidden-row'}},\n      {text: '\\n(anonymous) @ ignoreMe.js:5', classes: {'0': 'hidden-row'}},\n      {text: '\\nShow 6 more frames', classes: {'0': 'show-all-link'}},\n    ];\n\n    await waitForFunction(async () => {\n      const stackTraceRows = await frontend.evaluate((stack: Element) => {\n        return Array.from(stack.querySelectorAll('tr'))\n            .map(node => ({text: node.textContent, classes: node.classList}));\n      }, stack);\n      return JSON.stringify(stackTraceRows) === JSON.stringify(expected);\n    });\n\n    // assert that hidden rows are not shown initially\n    let showHidden = stack ? await stack.evaluate(x => x.classList.contains('show-hidden-rows')) : null;\n    assert.strictEqual(showHidden, false);\n\n    // assert that after clicking 'show all'-button, hidden rows are shown\n    await click(SHOW_MORE_LINK);\n    showHidden = stack ? await stack.evaluate(x => x.classList.contains('show-hidden-rows')) : null;\n    assert.strictEqual(showHidden, true);\n  });\n});\n"]}