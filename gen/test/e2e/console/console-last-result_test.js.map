{"version":3,"file":"console-last-result_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/console/console-last-result_test.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;;AAE7B,+BAA4B;AAE5B,sDAAgE;AAChE,0EAA8D;AAC9D,sEAAqK;AAErK,IAAA,8BAAQ,EAAC,iBAAiB,EAAE,KAAK,IAAI,EAAE;IACrC,IAAA,wBAAE,EAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;QACtD,MAAM,EAAC,QAAQ,EAAC,GAAG,IAAA,8BAAkB,GAAE,CAAC;QAExC,MAAM,IAAA,gBAAI,EAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;YAC5D,MAAM,IAAA,yCAAoB,GAAE,CAAC;YAC7B,MAAM,IAAA,+CAA0B,GAAE,CAAC;YACnC,MAAM,IAAA,uCAAkB,GAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,MAAM,IAAA,gBAAI,EAAC,wBAAwB,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,IAAA,oDAA+B,EAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC;QAEH,MAAM,IAAA,gBAAI,EAAC,uBAAuB,EAAE,KAAK,IAAI,EAAE;YAC7C,MAAM,IAAA,oDAA+B,EAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC;QAEH,MAAM,IAAA,gBAAI,EAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;YACjE,MAAM,eAAe,GAAG,MAAM,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE;gBACnD,OAAO,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,8BAA8B,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC7G,CAAC,CAAC,CAAC;YACH,aAAM,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,6CAA6C,CAAC,CAAC;QAC/F,CAAC,CAAC,CAAC;QAEH,MAAM,IAAA,gBAAI,EAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;YAC1D,MAAM,IAAA,oCAAe,EAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;QAEH,MAAM,IAAA,gBAAI,EAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;YAC1D,MAAM,QAAQ,CAAC,eAAe,CAAC,GAAG,EAAE;gBAClC,OAAO,QAAQ,CAAC,gBAAgB,CAAC,8BAA8B,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC;YAChF,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,MAAM,IAAA,gBAAI,EAAC,uBAAuB,EAAE,KAAK,IAAI,EAAE;YAC7C,MAAM,IAAA,oDAA+B,EAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC;QAEH,MAAM,IAAA,gBAAI,EAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;YACjE,MAAM,eAAe,GAAG,MAAM,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE;gBACnD,OAAO,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,8BAA8B,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC7G,CAAC,CAAC,CAAC;YACH,aAAM,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,EAAE,6CAA6C,CAAC,CAAC;QAC/G,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {getBrowserAndPages, step} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {focusConsolePrompt, navigateToConsoleTab, turnOffHistoryAutocomplete, typeIntoConsole, typeIntoConsoleAndWaitForResult} from '../helpers/console-helpers.js';\n\ndescribe('The Console Tab', async () => {\n  it('exposes the last evaluation using \"$_\"', async () => {\n    const {frontend} = getBrowserAndPages();\n\n    await step('turn off \"Autocomplete from history\"', async () => {\n      await navigateToConsoleTab();\n      await turnOffHistoryAutocomplete();\n      await focusConsolePrompt();\n    });\n\n    await step('enter \"1+1\" in console', async () => {\n      await typeIntoConsoleAndWaitForResult(frontend, '1+1');\n    });\n\n    await step('enter \"$_\" in console', async () => {\n      await typeIntoConsoleAndWaitForResult(frontend, '$_');\n    });\n\n    await step('check the evaluation results from console', async () => {\n      const evaluateResults = await frontend.evaluate(() => {\n        return Array.from(document.querySelectorAll('.console-user-command-result')).map(node => node.textContent);\n      });\n      assert.deepEqual(evaluateResults, ['2', '2'], 'did not find expected output in the console');\n    });\n\n    await step('enter \"console.clear()\" in console', async () => {\n      await typeIntoConsole(frontend, 'console.clear();');\n    });\n\n    await step('wait for the console to be cleared', async () => {\n      await frontend.waitForFunction(() => {\n        return document.querySelectorAll('.console-user-command-result').length === 1;\n      });\n    });\n\n    await step('enter \"$_\" in console', async () => {\n      await typeIntoConsoleAndWaitForResult(frontend, '$_');\n    });\n\n    await step('check the evaluation results from console', async () => {\n      const evaluateResults = await frontend.evaluate(() => {\n        return Array.from(document.querySelectorAll('.console-user-command-result')).map(node => node.textContent);\n      });\n      assert.deepEqual(evaluateResults, ['undefined', 'undefined'], 'did not find expected output in the console');\n    });\n  });\n});\n"]}