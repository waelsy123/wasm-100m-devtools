{"version":3,"file":"console-message-format_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/console/console-message-format_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {getTestServerPort} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {getConsoleMessages, showVerboseMessages, waitForConsoleMessagesToBeNonEmpty} from '../helpers/console-helpers.js';\n\ndescribe('The Console Tab', async () => {\n  it('shows BigInts formatted', async () => {\n    const messages = await getConsoleMessages('big-int', false, () => waitForConsoleMessagesToBeNonEmpty(5));\n\n    assert.deepEqual(messages, [\n      '1n',\n      'BigInt\\xA0{2n}',\n      '[1n]',\n      '[BigInt]',\n      'null 1n BigInt\\xA0{2n}',\n    ]);\n  });\n\n  it('shows uncaught promises', async () => {\n    const messages = await getConsoleMessages('uncaught-promise', false, () => waitForConsoleMessagesToBeNonEmpty(2));\n\n    assert.deepEqual(messages, [\n      `Uncaught (in promise) Error: err1\n    at uncaught-promise.html:7:18`,\n      `Uncaught (in promise) Error: err2\n    at uncaught-promise.html:25:10`,\n      `Uncaught (in promise) DOMException: Failed to execute 'removeChild' on 'Node': The node to be removed is not a child of this node.\n    at throwDOMException (https://localhost:${\n          getTestServerPort()}/test/e2e/resources/console/uncaught-promise.html:40:7)\n    at catcher (https://localhost:${getTestServerPort()}/test/e2e/resources/console/uncaught-promise.html:33:5)`,\n    ]);\n  });\n\n  it('shows structured objects', async () => {\n    const messages = await getConsoleMessages('structured-objects', false, () => waitForConsoleMessagesToBeNonEmpty(9));\n\n    assert.deepEqual(messages, [\n      '{}',\n      'ƒ Object() { [native code] }',\n      '{constructor: ƒ, __defineGetter__: ƒ, __defineSetter__: ƒ, hasOwnProperty: ƒ, __lookupGetter__: ƒ,\\xA0…}',\n      '{foo: \\'foo\\'}',\n      '{bar: \\'bar\\'}',\n      '[\\'test\\']',\n      '(10)\\xA0[\\'test\\', \\'test2\\', empty × 2, \\'test4\\', empty × 5, foo: {…}]',\n      '(200)\\xA0[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …]',\n      '(2)\\xA0[1, Array(2)]',\n    ]);\n  });\n\n  it('escapes and substitutes correctly', async () => {\n    const messages = await getConsoleMessages('escaping', false, () => waitForConsoleMessagesToBeNonEmpty(9));\n\n    assert.deepEqual(messages, [\n      'Test for zero \"0\" in formatter',\n      '% self-escape1 dummy',\n      '%s self-escape2 dummy',\n      '%ss self-escape3 dummy',\n      '%sdummy%s self-escape4',\n      '%%% self-escape5 dummy',\n      '%dummy self-escape6',\n      '(2)\\xA0[\\'test\\', \\'test2\\']',\n      'Array(2)',\n    ]);\n  });\n\n  it('shows built-in objects', async () => {\n    const messages = await getConsoleMessages('built-ins', false, () => waitForConsoleMessagesToBeNonEmpty(29));\n\n    assert.deepEqual(messages, [\n      '/^url\\\\(\\\\s*(?:(?:\\\"(?:[^\\\\\\\\\\\\\\\"]|(?:\\\\\\\\[\\\\da-f]{1,6}\\\\s?|\\\\.))*\\\"|\\'(?:[^\\\\\\\\\\\\\\']|(?:\\\\\\\\[\\\\da-f]{1,6}\\\\s?|\\\\.))*\\')|(?:[!#$%&*-~\\\\w]|(?:\\\\\\\\[\\\\da-f]{1,6}\\\\s?|\\\\.))*)\\\\s*\\\\)/i',\n      '/foo\\\\\\\\bar\\\\sbaz/i',\n      'Error\\n    at built-ins.html:13:17',\n      'Error: My error message\\n    at built-ins.html:16:28',\n      'Error: my multiline\\nerror message\\n    at built-ins.html:19:37',\n      'ƒ () { return 1; }',\n      'ƒ () {\\n    return 2;\\n  }',\n      'ƒ ( /**/ foo/**/, /*/**/bar,\\n  /**/baz) {}',\n      'Arguments(2)\\xA0[1, \\'2\\', callee: (...), Symbol(Symbol.iterator): ƒ]',\n      'Uint8Array\\xA0[3, buffer: ArrayBuffer(1), byteLength: 1, byteOffset: 0, length: 1, Symbol(Symbol.toStringTag): \\'Uint8Array\\']',\n      'Uint8Array(400)\\xA0[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …]',\n      'Uint8Array(400000000)\\xA0[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …]',\n      'Uint16Array(3)\\xA0[1, 2, 3, buffer: ArrayBuffer(6), byteLength: 6, byteOffset: 0, length: 3, Symbol(Symbol.toStringTag): \\'Uint16Array\\']',\n      'Promise\\xA0{<rejected>: -0}',\n      'Promise\\xA0{<fulfilled>: 1}',\n      'Promise\\xA0{<pending>}',\n      'Symbol()',\n      'Symbol(a)',\n      '{a: Symbol(), Symbol(a): 2}',\n      'Map(1)\\xA0{{…} => {…}}',\n      'WeakMap\\xA0{{…} => {…}}',\n      'Set(1)\\xA0{{…}}',\n      'WeakSet\\xA0{{…}}',\n      'Map(1)\\xA0{Map(1) => WeakMap}',\n      'Map(1)\\xA0{Map(0) => WeakMap}',\n      'Set(1)\\xA0{WeakSet}',\n      'Set(1)\\xA0{WeakSet}',\n      'Map(6)\\xA0{\\' from str \\' => \\' to str \\', undefined => undefined, null => null, 42 => 42, {…} => {…}, …}',\n      'genFunction\\xA0{<suspended>}',\n    ]);\n  });\n\n  it('shows primitives', async () => {\n    const messages = await getConsoleMessages('primitives', false, () => waitForConsoleMessagesToBeNonEmpty(15));\n\n    assert.deepEqual(messages, [\n      'null',\n      'undefined',\n      'NaN',\n      '{}',\n      '[ƒ]',\n      'Infinity',\n      '-Infinity',\n      'Number\\xA0{42}',\n      'String\\xA0{\\'abc\\'}',\n      '0.12',\n      '-0',\n      'test',\n      'https://chromium.org',\n      'Number\\xA0{42, 1: \\'foo\\', a: \\'bar\\'}',\n      'String\\xA0{\\'abc\\', 3: \\'foo\\', 01: \\'foo\\', a: \\'bar\\'}',\n    ]);\n  });\n\n  it('can handle prototype fields', async () => {\n    const messages = await getConsoleMessages('prototypes', false, () => waitForConsoleMessagesToBeNonEmpty(13));\n\n    assert.deepEqual(messages, [\n      '{enumerableProp: 4, __underscoreEnumerableProp__: 5, __underscoreNonEnumerableProp: 2, abc: 3, getFoo: ƒ,\\xA0…}',\n      '{longSubNamespace: {…}}',\n      'namespace.longSubNamespace.x.className\\xA0{}',\n      '{}',\n      'ArrayLike(5)\\xA0[empty × 5]',\n      'ArrayLike(4294967295)\\xA0[empty × 4294967295]',\n      'ArrayLike\\xA0{length: -5}',\n      'ArrayLike\\xA0{length: 5.6}',\n      'ArrayLike\\xA0{length: NaN}',\n      'ArrayLike\\xA0{length: Infinity}',\n      'ArrayLike\\xA0{length: -0}',\n      'ArrayLike\\xA0{length: 4294967296}',\n      'NonArrayWithLength\\xA0{keys: Array(0)}',\n    ]);\n  });\n\n  it('can show DOM interactions', async () => {\n    const messages = await getConsoleMessages('dom-interactions');\n\n    assert.deepEqual(messages, [\n      '',\n      '',\n      '',\n      '',\n      '#text',\n      'HTMLCollection\\xA0[select, sel: select]',\n      'HTMLCollection\\xA0[]',\n      'HTMLOptionsCollection(2)\\xA0[option, option, selectedIndex: 0]',\n      'HTMLAllCollection(12)\\xA0[html, head, body, div#first-child.c1.c2.c3, div#p, form, select, option, option, input, input, script, first-child: div#first-child.c1.c2.c3, p: div#p, sel: select, input: HTMLCollection(2)]',\n      'HTMLFormControlsCollection(3)\\xA0[select, input, input, sel: select, input: RadioNodeList(2)]',\n      'RadioNodeList(2)\\xA0[input, input, value: \\'\\']',\n      'DOMTokenList(3)\\xA0[\\'c1\\', \\'c2\\', \\'c3\\', value: \\'c1 c2 c3\\']',\n      'DOMException: Failed to execute \\'removeChild\\' on \\'Node\\': The node to be removed is not a child of this node.',\n    ]);\n  });\n\n  it('can handle sourceURLs in exceptions', async () => {\n    const messages =\n        await getConsoleMessages('source-url-exceptions', false, () => waitForConsoleMessagesToBeNonEmpty(1));\n\n    assert.deepEqual(messages, [\n      `Uncaught ReferenceError: FAIL is not defined\n    at foo (foo2.js:1:18)\n    at source-url-exceptions.html:9:3`,\n    ]);\n  });\n\n  it('can handle repeated messages from data URLs in exceptions', async () => {\n    const messages =\n        await getConsoleMessages('data-url-exceptions', false, () => waitForConsoleMessagesToBeNonEmpty(1));\n\n    assert.deepEqual(messages, [\n      'msg',  // 5 times from eval script, collapsed\n      'msg',  // 5 times from data url script, collapsed\n      `Uncaught Error: Failed\n    at fail (data-url-exceptions.html:12:11)\n    at foo1 (data:text/javascript…sgZm9vMSgpOyB9:1:19)\n    at foo2 (data:text/javascript…sgZm9vMSgpOyB9:2:20)\n    at bar1 (data:text/javascript…ogYmFyMigpOw==:1:19)\n    at bar2 (data:text/javascript…ogYmFyMigpOw==:2:20)\n    at data:text/javascript…AogYmFyMigpOw==:3:2`,\n    ]);\n  });\n\n  it('can show stackoverflow exceptions', async () => {\n    const messages = await getConsoleMessages('stack-overflow', false, () => waitForConsoleMessagesToBeNonEmpty(1));\n\n    assert.deepEqual(messages, [\n      `Uncaught RangeError: Maximum call stack size exceeded\n    at boo (foo2.js:2:2)\n    at boo (foo2.js:2:2)\n    at boo (foo2.js:2:2)\n    at boo (foo2.js:2:2)\n    at boo (foo2.js:2:2)\n    at boo (foo2.js:2:2)\n    at boo (foo2.js:2:2)\n    at boo (foo2.js:2:2)\n    at boo (foo2.js:2:2)\n    at boo (foo2.js:2:2)`,\n    ]);\n  });\n\n  it('can show document.write messages', async () => {\n    const messages = await getConsoleMessages('document-write', false, () => waitForConsoleMessagesToBeNonEmpty(2));\n\n    assert.deepEqual(messages, [\n      'script element',\n      'document.write from onload',\n    ]);\n  });\n\n  it('can show verbose promise unhandledrejections', async () => {\n    const messages = await getConsoleMessages('onunhandledrejection', false, async () => {\n      await waitForConsoleMessagesToBeNonEmpty(4);\n      await showVerboseMessages();\n    });\n\n    assert.deepEqual(messages, [\n      'onunhandledrejection1',\n      'onrejectionhandled1',\n      'onunhandledrejection2',\n      `Uncaught (in promise) Error: e\n    at runSecondPromiseRejection (onunhandledrejection.html:23:44)`,\n      'onrejectionhandled2',\n    ]);\n  });\n\n  describe('shows messages from before', async () => {\n    it('iframe removal', async () => {\n      const messages =\n          await getConsoleMessages('navigation/after-removal', false, () => waitForConsoleMessagesToBeNonEmpty(3));\n\n      assert.deepEqual(messages, [\n        'A message with first argument string Second argument which should not be discarded',\n        '2011 \\'A message with first argument integer\\'',\n        'Window\\xA0{window: Window, self: Window, document: document, name: \\'\\', location: Location,\\xA0…} \\'A message with first argument window\\'',\n      ]);\n    });\n\n    it('and after iframe navigation', async () => {\n      const messages =\n          await getConsoleMessages('navigation/after-navigation', false, () => waitForConsoleMessagesToBeNonEmpty(4));\n\n      assert.deepEqual(messages, [\n        'A message with first argument string Second argument which should not be discarded',\n        '2011 \\'A message with first argument integer\\'',\n        'Window\\xA0{window: Window, self: Window, document: document, name: \\'\\', location: Location,\\xA0…} \\'A message with first argument window\\'',\n        'After iframe navigation.',\n      ]);\n    });\n  });\n});\n"]}