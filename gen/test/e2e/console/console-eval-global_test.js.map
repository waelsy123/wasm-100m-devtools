{"version":3,"file":"console-eval-global_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/console/console-eval-global_test.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;;AAE7B,+BAA4B;AAE5B,sDAAkF;AAClF,0EAA8D;AAC9D,sEAAuF;AACvF,sEAAwE;AAExE,IAAA,8BAAQ,EAAC,iBAAiB,EAAE,KAAK,IAAI,EAAE;IACrC,IAAA,wBAAE,EAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;QACzD,MAAM,EAAC,QAAQ,EAAC,GAAG,IAAA,8BAAkB,GAAE,CAAC;QAExC,MAAM,IAAA,gBAAI,EAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;YACnD,MAAM,IAAA,iBAAK,EAAC,yCAAoB,CAAC,CAAC;YAClC,MAAM,IAAA,uCAAkB,GAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,MAAM,IAAA,gBAAI,EAAC,sDAAsD,EAAE,KAAK,IAAI,EAAE;YAC5E,MAAM,IAAA,qBAAS,EAAC;;;;;OAKf,CAAC,CAAC;YACH,MAAM,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAEvC,2CAA2C;YAC3C,MAAM,QAAQ,CAAC,eAAe,CAAC,GAAG,EAAE;gBAClC,OAAO,QAAQ,CAAC,gBAAgB,CAAC,8BAA8B,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC;YAChF,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,MAAM,IAAA,gBAAI,EAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;YACvE,MAAM,IAAA,qBAAS,EAAC,MAAM,CAAC,CAAC;YACxB,MAAM,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAEvC,2CAA2C;YAC3C,MAAM,QAAQ,CAAC,eAAe,CAAC,GAAG,EAAE;gBAClC,OAAO,QAAQ,CAAC,gBAAgB,CAAC,8BAA8B,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC;YAChF,CAAC,CAAC,CAAC;YAEH,MAAM,IAAA,qBAAS,EAAC,MAAM,CAAC,CAAC;YACxB,MAAM,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QAEH,MAAM,IAAA,gBAAI,EAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;YAChE,MAAM,QAAQ,GAAG,MAAM,IAAA,8CAAyB,GAAE,CAAC;YACnD,aAAM,CAAC,SAAS,CAAC,QAAQ,EAAE;gBACzB,WAAW;gBACX,cAAc;gBACd,YAAY;aACb,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {click, getBrowserAndPages, pasteText, step} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {CONSOLE_TAB_SELECTOR, focusConsolePrompt} from '../helpers/console-helpers.js';\nimport {getCurrentConsoleMessages} from '../helpers/console-helpers.js';\n\ndescribe('The Console Tab', async () => {\n  it('interacts with the global scope correctly', async () => {\n    const {frontend} = getBrowserAndPages();\n\n    await step('navigate to the Console tab', async () => {\n      await click(CONSOLE_TAB_SELECTOR);\n      await focusConsolePrompt();\n    });\n\n    await step('enter code that implicitly creates global properties', async () => {\n      await pasteText(`\n        var foo = 'fooValue';\n        var bar = {\n          a: 'b',\n        };\n      `);\n      await frontend.keyboard.press('Enter');\n\n      // Wait for the console to be usable again.\n      await frontend.waitForFunction(() => {\n        return document.querySelectorAll('.console-user-command-result').length === 1;\n      });\n    });\n\n    await step('enter code that references the created bindings', async () => {\n      await pasteText('foo;');\n      await frontend.keyboard.press('Enter');\n\n      // Wait for the console to be usable again.\n      await frontend.waitForFunction(() => {\n        return document.querySelectorAll('.console-user-command-result').length === 1;\n      });\n\n      await pasteText('bar;');\n      await frontend.keyboard.press('Enter');\n    });\n\n    await step('check that the expected output is logged', async () => {\n      const messages = await getCurrentConsoleMessages();\n      assert.deepEqual(messages, [\n        'undefined',\n        '\\'fooValue\\'',\n        '{a: \\'b\\'}',\n      ]);\n    });\n  });\n});\n"]}