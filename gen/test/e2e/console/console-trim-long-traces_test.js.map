{"version":3,"file":"console-trim-long-traces_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/console/console-trim-long-traces_test.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;;AAE7B,+BAA4B;AAE5B,sDAAsF;AACtF,0EAA8D;AAC9D,sEAA6E;AAC7E,sEAA8G;AAE9G,IAAA,8BAAQ,EAAC,iBAAiB,EAAE,KAAK,IAAI,EAAE;IACrC,IAAA,wBAAE,EAAC,8BAA8B,EAAE,KAAK,IAAI,EAAE;QAC5C,MAAM,EAAC,QAAQ,EAAC,GAAG,IAAA,8BAAkB,GAAE,CAAC;QACxC,IAAI,QAAkB,CAAC;QAEvB,MAAM,IAAA,gBAAI,EAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;YACnD,MAAM,IAAA,iBAAK,EAAC,yCAAoB,CAAC,CAAC;YAClC,MAAM,IAAA,uCAAkB,GAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,MAAM,IAAA,gBAAI,EAAC,wFAAwF,EAAE,KAAK,IAAI,EAAE;YAC9G,MAAM,IAAA,qBAAS,EAAC;;;;;;;;;;OAUf,CAAC,CAAC;YAEH,MAAM,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAEvC,2CAA2C;YAC3C,MAAM,QAAQ,CAAC,eAAe,CAAC,CAAC,gBAAwB,EAAE,EAAE;gBAC1D,OAAO,QAAQ,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC;YAClE,CAAC,EAAE,EAAE,EAAE,qCAAgB,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,MAAM,IAAA,gBAAI,EAAC,0BAA0B,EAAE,KAAK,IAAI,EAAE;YAChD,MAAM,SAAS,GAAG,MAAM,IAAA,cAAE,EAAC,4CAAuB,CAAC,CAAC;YACpD,QAAQ,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;gBACpD,OAAO,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAE,EAAkB,CAAC,SAAS,CAAC,CAAC;YAChE,CAAC,CAAC,CAAC,CAAC;QACN,CAAC,CAAC,CAAC;QAEH,MAAM,IAAA,gBAAI,EAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;YACjE,MAAM,WAAW,GAAG,0BAA0B;gBAC1C,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B,CAAC;YAE/B,aAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,MAAM,IAAA,+BAAU,EAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC;QAC9E,CAAC,CAAC,CAAC;QAEH,MAAM,IAAA,gBAAI,EAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;YAC9D,MAAM,WAAW,GAAG,0BAA0B;gBAC1C,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,uBAAuB,CAAC;YAE5B,aAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,MAAM,IAAA,+BAAU,EAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC;QAC9E,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {$$, click, getBrowserAndPages, pasteText, step} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {focusConsolePrompt, unifyLogVM} from '../helpers/console-helpers.js';\nimport {CONSOLE_SELECTOR, CONSOLE_TAB_SELECTOR, STACK_PREVIEW_CONTAINER} from '../helpers/console-helpers.js';\n\ndescribe('The Console Tab', async () => {\n  it('truncates long stack traces ', async () => {\n    const {frontend} = getBrowserAndPages();\n    let messages: string[];\n\n    await step('navigate to the Console tab', async () => {\n      await click(CONSOLE_TAB_SELECTOR);\n      await focusConsolePrompt();\n    });\n\n    await step('enter code into the console that produces two stack traces, one short and and one long', async () => {\n      await pasteText(`\n        function recursive(n) {\n          if (n > 1) {\n            return recursive(n-1);\n          } else {\n            return console.trace();\n          }\n        }\n        recursive(10);\n        recursive(50);\n      `);\n\n      await frontend.keyboard.press('Enter');\n\n      // Wait for the console to be usable again.\n      await frontend.waitForFunction((CONSOLE_SELECTOR: string) => {\n        return document.querySelectorAll(CONSOLE_SELECTOR).length === 1;\n      }, {}, CONSOLE_SELECTOR);\n    });\n\n    await step('retrieve the console log', async () => {\n      const container = await $$(STACK_PREVIEW_CONTAINER);\n      messages = await Promise.all(container.map(elements => {\n        return elements.evaluate(el => (el as HTMLElement).innerText);\n      }));\n    });\n\n    await step('check that the first log is not truncated', async () => {\n      const expectedLog = '\\trecursive\\t@\\tVM11:6\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\t(anonymous)\\t@\\tVM11:9';\n\n      assert.strictEqual(messages[0], await unifyLogVM(messages[0], expectedLog));\n    });\n\n    await step('check that the second log is truncated', async () => {\n      const expectedLog = '\\trecursive\\t@\\tVM11:6\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\trecursive\\t@\\tVM11:4\\n' +\n          '\\tShow 21 more frames';\n\n      assert.strictEqual(messages[1], await unifyLogVM(messages[1], expectedLog));\n    });\n  });\n});\n"]}