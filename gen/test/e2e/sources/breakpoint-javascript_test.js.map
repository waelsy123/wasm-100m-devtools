{"version":3,"file":"breakpoint-javascript_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/sources/breakpoint-javascript_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\nimport {$, click, getBrowserAndPages, getPendingEvents, step, waitFor, waitForFunction} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {addBreakpointForLine, DEBUGGER_PAUSED_EVENT, openSourceCodeEditorForFile, PAUSE_INDICATOR_SELECTOR, RESUME_BUTTON, retrieveTopCallFrameWithoutResuming} from '../helpers/sources-helpers.js';\n\nasync function waitForTopCallFrameChanged(previousCallFrame: string, updatedCallFrame: string) {\n  await waitForFunction(async () => {\n    const actualTopCallFrame = await retrieveTopCallFrameWithoutResuming();\n    assert.isTrue(actualTopCallFrame === previousCallFrame || actualTopCallFrame === updatedCallFrame);\n    return actualTopCallFrame === updatedCallFrame;\n  });\n}\n\ndescribe('The Sources Tab', async () => {\n  it('sets and hits breakpoints in JavaScript', async () => {\n    const {target, frontend} = getBrowserAndPages();\n    await openSourceCodeEditorForFile('click-breakpoint.js', 'click-breakpoint.html');\n    await addBreakpointForLine(frontend, 4);\n\n    const scriptEvaluation = target.evaluate('f2();');\n\n    const scriptLocation = await retrieveTopCallFrameWithoutResuming();\n    assert.deepEqual(scriptLocation, 'click-breakpoint.js:4');\n\n    const breakpointHandle = await $('label', await waitFor('.breakpoint-hit'));\n    const breakpointLocation = await breakpointHandle?.evaluate(label => label.textContent);\n    assert.deepEqual(breakpointLocation, scriptLocation);\n\n    await click(RESUME_BUTTON);\n    await scriptEvaluation;\n  });\n\n  it('stops at each breakpoint on resume (using F8) on target', async () => {\n    const {target, frontend} = getBrowserAndPages();\n    await step('navigate to page', async () => {\n      await openSourceCodeEditorForFile('click-breakpoint.js', 'click-breakpoint.html');\n    });\n\n    await step('add a breakpoint to line No.3, 4, and 9', async () => {\n      await addBreakpointForLine(frontend, 3);\n      await addBreakpointForLine(frontend, 4);\n      await addBreakpointForLine(frontend, 9);\n    });\n\n    let scriptEvaluation: Promise<void>;\n    await step('trigger evaluation of script', async () => {\n      scriptEvaluation = target.evaluate('f2();');\n    });\n\n    await step('wait for pause and check if we stopped at line 3', async () => {\n      await waitForFunction(() => getPendingEvents(frontend, DEBUGGER_PAUSED_EVENT));\n      await waitFor(PAUSE_INDICATOR_SELECTOR);\n      const scriptLocation = await retrieveTopCallFrameWithoutResuming();\n      assert.deepEqual(scriptLocation, 'click-breakpoint.js:3');\n    });\n\n    await step('resume and wait until we have hit the next breakpoint (3->4)', async () => {\n      await target.keyboard.press('F8');\n      await waitForTopCallFrameChanged('click-breakpoint.js:3', 'click-breakpoint.js:4');\n    });\n\n    await step('resume and wait until we have hit the next breakpoint (4->9)', async () => {\n      await target.keyboard.press('F8');\n      await waitForTopCallFrameChanged('click-breakpoint.js:4', 'click-breakpoint.js:9');\n    });\n\n    await step('resume and wait until script finishes execution', async () => {\n      await frontend.keyboard.press('F8');\n      await scriptEvaluation;\n    });\n  });\n});\n"]}