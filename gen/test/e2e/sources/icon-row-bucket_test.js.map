{"version":3,"file":"icon-row-bucket_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/sources/icon-row-bucket_test.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;;AAE7B,+BAA4B;AAG5B,sDAA2G;AAC3G,0EAA8D;AAC9D,oEAAiE;AACjE,sEAA+D;AAE/D,KAAK,UAAU,iBAAiB,CAAC,SAAiB,EAAE,IAAuC;IACzF,OAAO,MAAM,IAAA,2BAAe,EAAC,KAAK,IAAI,EAAE;QACtC,MAAM,KAAK,GAAG,MAAM,IAAA,cAAE,EAAC,iBAAiB,SAAS,EAAE,EAAE,IAAI,CAAC,CAAC;QAC3D,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;IAC9C,CAAC,CAAC,CAAC;AACL,CAAC;AAED,KAAK,UAAU,WAAW,CAAC,IAAsC;IAC/D,MAAM,WAAW,GAAG,MAAM,IAAA,cAAE,EAAC,0BAA0B,EAAE,IAAI,CAAC,CAAC;IAC/D,MAAM,QAAQ,GAAG,EAAE,CAAC;IACpB,KAAK,MAAM,UAAU,IAAI,WAAW,EAAE;QACpC,MAAM,WAAW,GAAG,MAAM,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAClG,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KAC5B;IACD,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED,KAAK,UAAU,WAAW,CAAC,aAA+C;IACxE,MAAM,SAAS,GAAG,MAAM,IAAA,mBAAO,EAAC,aAAa,EAAE,aAAa,CAAC,CAAC;IAC9D,MAAM,QAAQ,GAAG,MAAM,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC;IAC3F,MAAM,aAAa,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC5E,OAAO,aAAa,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACjD,CAAC;AAED,KAAK,UAAU,mBAAmB,CAAC,QAAgB;IACjD,MAAM,IAAA,wBAAY,EAAC,WAAW,QAAQ,EAAE,CAAC,CAAC;IAC1C,MAAM,IAAA,qCAAgB,GAAE,CAAC;IACzB,MAAM,OAAO,GAAG,MAAM,IAAA,mBAAO,EAAC,gBAAgB,QAAQ,UAAU,CAAC,CAAC;IAClE,MAAM,OAAO,CAAC,KAAK,EAAE,CAAC;AACxB,CAAC;AAED,KAAK,UAAU,sBAAsB;IACnC,MAAM,cAAc,GAAG,IAAI,GAAG,EAAU,CAAC;IACzC,MAAM,MAAM,GAAG,MAAM,IAAA,cAAE,EAAC,QAAQ,CAAC,CAAC;IAClC,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;QAC1B,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;QAC7E,IAAI,QAAQ,EAAE;YACZ,MAAM,YAAY,GAAG,MAAM,IAAA,mBAAO,EAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;YACpD,MAAM,KAAK,GAAG,MAAM,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YAC9F,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SAC3B;KACF;IACD,OAAO,cAAc,CAAC;AACxB,CAAC;AAED,KAAK,UAAU,yBAAyB,CAAC,kBAAoD;IAC3F,OAAO,MAAM,IAAA,2BAAe,EAAC,KAAK,IAAI,EAAE;QACtC,MAAM,IAAA,iBAAK,EAAC,kBAAkB,CAAC,CAAC;QAChC,MAAM,cAAc,GAAG,MAAM,sBAAsB,EAAE,CAAC;QACtD,IAAI,cAAc,CAAC,IAAI,EAAE;YACvB,OAAO,cAAc,CAAC;SACvB;QACD,OAAO,SAAS,CAAC;IACnB,CAAC,CAAC,CAAC;AACL,CAAC;AAED,IAAA,8BAAQ,EAAC,wBAAwB,EAAE,KAAK;IACtC,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;QAClB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;KACrB;IAED,IAAA,wBAAE,EAAC,+BAA+B,EAAE,KAAK,IAAI,EAAE;QAC7C,MAAM,mBAAmB,CAAC,uDAAuD,CAAC,CAAC;QACnF,MAAM,cAAc,GAAG,MAAM,iBAAiB,CAAC,sBAAsB,CAAC,CAAC;QACvE,MAAM,QAAQ,GAAa,EAAE,CAAC;QAC9B,MAAM,gBAAgB,GAAG;YACvB,qKAAqK;SACtK,CAAC;QACF,KAAK,MAAM,aAAa,IAAI,cAAc,EAAE;YAC1C,MAAM,aAAa,CAAC,KAAK,EAAE,CAAC;YAC5B,MAAM,IAAI,GAAG,MAAM,IAAA,mBAAO,EAAC,sCAAsC,CAAC,CAAC;YACnE,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,IAAI,CAAC,CAAC;YAC5C,QAAQ,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,CAAC;SAC/B;QACD,aAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;IAEH,IAAA,wBAAE,EAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;QACjD,MAAM,mBAAmB,CAAC,iDAAiD,CAAC,CAAC;QAC7E,MAAM,oBAAoB,GAAG,MAAM,iBAAiB,CAAC,sBAAsB,CAAC,CAAC;QAC7E,KAAK,MAAM,mBAAmB,IAAI,oBAAoB,EAAE;YACtD,MAAM,mBAAmB,CAAC,KAAK,EAAE,CAAC;YAClC,MAAM,IAAI,GAAG,MAAM,IAAA,mBAAO,EAAC,sCAAsC,CAAC,CAAC;YACnE,MAAM,cAAc,GAAG,MAAM,iBAAiB,CAAC,8BAA8B,EAAE,IAAI,CAAC,CAAC;YACrF,KAAK,MAAM,aAAa,IAAI,cAAc,EAAE;gBAC1C,aAAM,CAAC,WAAW,CAAC,MAAM,WAAW,CAAC,aAAa,CAAC,EAAE,gBAAgB,CAAC,CAAC;aACxE;YACD,aAAM,CAAC,WAAW,CAAC,MAAM,WAAW,CAAC,mBAAmB,CAAC,EAAE,gBAAgB,CAAC,CAAC;SAC9E;IACH,CAAC,CAAC,CAAC;IAEH,IAAA,wBAAE,EAAC,+BAA+B,EAAE,KAAK,IAAI,EAAE;QAC7C,MAAM,mBAAmB,CAAC,iDAAiD,CAAC,CAAC;QAC7E,MAAM,mBAAmB,GAAG,MAAM,iBAAiB,CAAC,sBAAsB,CAAC,CAAC;QAE5E,MAAM,aAAa,GAAa,EAAE,CAAC;QACnC,MAAM,qBAAqB,GAAG;YAC5B,iEAAiE;YACjE,4CAA4C;SAC7C,CAAC;QACF,KAAK,MAAM,kBAAkB,IAAI,mBAAmB,EAAE;YACpD,MAAM,kBAAkB,CAAC,KAAK,EAAE,CAAC;YACjC,MAAM,IAAI,GAAG,MAAM,IAAA,mBAAO,EAAC,sCAAsC,CAAC,CAAC;YACnE,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,IAAI,CAAC,CAAC;YAC5C,aAAa,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,CAAC;SACpC;QACD,aAAM,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,EAAE,EAAE,qBAAqB,CAAC,IAAI,EAAE,CAAC,CAAC;IACvE,CAAC,CAAC,CAAC;IAEH,IAAA,wBAAE,EAAC,oEAAoE,EAAE,KAAK,IAAI,EAAE;QAClF,MAAM,mBAAmB,CAAC,yDAAyD,CAAC,CAAC;QACrF,MAAM,KAAK,GAAG,MAAM,iBAAiB,CAAC,sBAAsB,CAAC,CAAC;QAC9D,aAAM,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;IAEH,IAAA,wBAAE,EAAC,mDAAmD,EAAE,KAAK,IAAI,EAAE;QACjE,MAAM,mBAAmB,CAAC,uDAAuD,CAAC,CAAC;QAEnF,MAAM,sBAAsB,GAAG,8BAA8B,CAAC;QAC9D,MAAM,uBAAuB,GAAG,+BAA+B,CAAC;QAChE,MAAM,IAAA,iBAAK,EAAC,sBAAsB,CAAC,CAAC;QACpC,MAAM,IAAA,iBAAK,EAAC,uBAAuB,CAAC,CAAC;QAErC,MAAM,yBAAyB,GAAG,MAAM,iBAAiB,CAAC,sBAAsB,CAAC,CAAC;QAClF,aAAM,CAAC,WAAW,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QACxD,MAAM,kBAAkB,GAAG,yBAAyB,CAAC,CAAC,CAAC,CAAC;QACxD,MAAM,IAAA,iBAAK,EAAC,kBAAkB,CAAC,CAAC;QAEhC,MAAM,cAAc,GAAG,MAAM,yBAAyB,CAAC,kBAAkB,CAAC,CAAC;QAC3E,aAAM,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,iEAAiE,CAAC,CAAC,CAAC;IACvG,CAAC,CAAC,CAAC;IAEH,IAAA,wBAAE,EAAC,oEAAoE,EAAE,KAAK,IAAI,EAAE;QAClF,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;YAClB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SACrB;QACD,MAAM,IAAA,uCAAmB,GAAE,CAAC;QAC5B,MAAM,mBAAmB,CAAC,iDAAiD,CAAC,CAAC;QAE7E,MAAM,sBAAsB,GAAG,8BAA8B,CAAC;QAC9D,MAAM,uBAAuB,GAAG,+BAA+B,CAAC;QAChE,MAAM,IAAA,iBAAK,EAAC,sBAAsB,CAAC,CAAC;QACpC,MAAM,IAAA,iBAAK,EAAC,uBAAuB,CAAC,CAAC;QAErC,MAAM,EAAC,SAAS,EAAE,UAAU,EAAC,GAAG,MAAM,IAAA,2BAAe,EAAC,KAAK,IAAI,EAAE;YAC/D,MAAM,yBAAyB,GAAG,MAAM,iBAAiB,CAAC,sBAAsB,CAAC,CAAC;YAClF,aAAM,CAAC,WAAW,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACxD,MAAM,kBAAkB,GAAG,yBAAyB,CAAC,CAAC,CAAC,CAAC;YACxD,MAAM,kBAAkB,CAAC,KAAK,EAAE,CAAC;YACjC,MAAM,IAAI,GAAG,MAAM,IAAA,4BAAgB,EAAC,sCAAsC,EAAE,SAAS,EAAE,EAAC,KAAK,EAAE,CAAC,EAAC,CAAC,CAAC;YACnG,IAAI,CAAC,IAAI,EAAE;gBACT,OAAO,SAAS,CAAC;aAClB;YACD,MAAM,UAAU,GAAG,MAAM,IAAA,4BAAgB,EAAC,0BAA0B,EAAE,IAAI,EAAE,EAAC,KAAK,EAAE,CAAC,EAAC,CAAC,CAAC;YACxF,IAAI,CAAC,UAAU,EAAE;gBACf,OAAO,SAAS,CAAC;aAClB;YACD,MAAM,UAAU,GAAG,MAAM,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACjG,MAAM,SAAS,GAAG,MAAM,IAAA,4BAAgB,EAAC,+BAA+B,EAAE,UAAU,EAAE,EAAC,KAAK,EAAE,CAAC,EAAC,CAAC,CAAC;YAClG,IAAI,CAAC,SAAS,EAAE;gBACd,OAAO,SAAS,CAAC;aAClB;YACD,OAAO,EAAC,SAAS,EAAE,UAAU,EAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,MAAM,cAAc,GAAG,MAAM,yBAAyB,CAAC,SAAS,CAAC,CAAC;QAClE,aAAM,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\nimport type * as puppeteer from 'puppeteer';\n\nimport {$$, click, goToResource, waitFor, waitForFunction, waitForWithTries} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {navigateToIssuesTab} from '../helpers/issues-helpers.js';\nimport {openSourcesPanel} from '../helpers/sources-helpers.js';\n\nasync function getIconComponents(className: string, root?: puppeteer.ElementHandle<Element>) {\n  return await waitForFunction(async () => {\n    const icons = await $$(`devtools-icon.${className}`, root);\n    return icons.length > 0 ? icons : undefined;\n  });\n}\n\nasync function getRowsText(root: puppeteer.ElementHandle<Element>): Promise<string[]> {\n  const rowMessages = await $$('.text-editor-row-message', root);\n  const messages = [];\n  for (const rowMessage of rowMessages) {\n    const messageText = await rowMessage.evaluate(x => (x instanceof HTMLElement) ? x.innerText : '');\n    messages.push(messageText);\n  }\n  return messages;\n}\n\nasync function getIconFile(iconComponent: puppeteer.ElementHandle<Element>): Promise<string> {\n  const issueIcon = await waitFor('.icon-basic', iconComponent);\n  const imageSrc = await issueIcon.evaluate(x => window.getComputedStyle(x).backgroundImage);\n  const splitImageSrc = imageSrc.substring(5, imageSrc.length - 2).split('/');\n  return splitImageSrc[splitImageSrc.length - 1];\n}\n\nasync function openFileInSourceTab(fileName: string) {\n  await goToResource(`network/${fileName}`);\n  await openSourcesPanel();\n  const element = await waitFor(`[aria-label=\"${fileName}, file\"]`);\n  await element.click();\n}\n\nasync function getExpandedIssuesTitle(): Promise<Set<string>> {\n  const expandedIssues = new Set<string>();\n  const issues = await $$('.issue');\n  for (const issue of issues) {\n    const expanded = await issue.evaluate(x => x.classList.contains('expanded'));\n    if (expanded) {\n      const titleHandler = await waitFor('.title', issue);\n      const title = await titleHandler.evaluate(x => (x instanceof HTMLElement) ? x.innerText : '');\n      expandedIssues.add(title);\n    }\n  }\n  return expandedIssues;\n}\n\nasync function waitForExpandedIssueTitle(issueIconComponent: puppeteer.ElementHandle<Element>): Promise<Set<string>> {\n  return await waitForFunction(async () => {\n    await click(issueIconComponent);\n    const expandedIssues = await getExpandedIssuesTitle();\n    if (expandedIssues.size) {\n      return expandedIssues;\n    }\n    return undefined;\n  });\n}\n\ndescribe('The row\\'s icon bucket', async function() {\n  if (this.timeout()) {\n    this.timeout(10000);\n  }\n\n  it('should display error messages', async () => {\n    await openFileInSourceTab('trusted-type-policy-violation-report-only.rawresponse');\n    const iconComponents = await getIconComponents('cm-messageIcon-error');\n    const messages: string[] = [];\n    const expectedMessages = [\n      '[Report Only] Refused to create a TrustedTypePolicy named \\'policy2\\' because it violates the following Content Security Policy directive: \"trusted-types policy1\".',\n    ];\n    for (const iconComponent of iconComponents) {\n      await iconComponent.hover();\n      const vbox = await waitFor('div.vbox.flex-auto.no-pointer-events');\n      const rowMessages = await getRowsText(vbox);\n      messages.push(...rowMessages);\n    }\n    assert.deepEqual(messages, expectedMessages);\n  });\n\n  it('should use the correct error icon', async () => {\n    await openFileInSourceTab('trusted-type-violations-report-only.rawresponse');\n    const bucketIconComponents = await getIconComponents('cm-messageIcon-error');\n    for (const bucketIconComponent of bucketIconComponents) {\n      await bucketIconComponent.hover();\n      const vbox = await waitFor('div.vbox.flex-auto.no-pointer-events');\n      const iconComponents = await getIconComponents('text-editor-row-message-icon', vbox);\n      for (const iconComponent of iconComponents) {\n        assert.strictEqual(await getIconFile(iconComponent), 'error_icon.svg');\n      }\n      assert.strictEqual(await getIconFile(bucketIconComponent), 'error_icon.svg');\n    }\n  });\n\n  it('should display issue messages', async () => {\n    await openFileInSourceTab('trusted-type-violations-report-only.rawresponse');\n    const issueIconComponents = await getIconComponents('cm-messageIcon-issue');\n\n    const issueMessages: string[] = [];\n    const expectedIssueMessages = [\n      'Trusted Type policy creation blocked by Content Security Policy',\n      'Trusted Type expected, but String received',\n    ];\n    for (const issueIconComponent of issueIconComponents) {\n      await issueIconComponent.hover();\n      const vbox = await waitFor('div.vbox.flex-auto.no-pointer-events');\n      const rowMessages = await getRowsText(vbox);\n      issueMessages.push(...rowMessages);\n    }\n    assert.deepEqual(issueMessages.sort(), expectedIssueMessages.sort());\n  });\n\n  it('should also mark issues in inline event handlers in HTML documents', async () => {\n    await openFileInSourceTab('trusted-type-violations-report-only-in-html.rawresponse');\n    const icons = await getIconComponents('cm-messageIcon-issue');\n    assert.strictEqual(icons.length, 1);\n  });\n\n  it('should reveal Issues tab when the icon is clicked', async () => {\n    await openFileInSourceTab('trusted-type-policy-violation-report-only.rawresponse');\n\n    const HIDE_DEBUGGER_SELECTOR = '[aria-label=\"Hide debugger\"]';\n    const HIDE_NAVIGATOR_SELECTOR = '[aria-label=\"Hide navigator\"]';\n    await click(HIDE_DEBUGGER_SELECTOR);\n    await click(HIDE_NAVIGATOR_SELECTOR);\n\n    const bucketIssueIconComponents = await getIconComponents('cm-messageIcon-issue');\n    assert.strictEqual(bucketIssueIconComponents.length, 1);\n    const issueIconComponent = bucketIssueIconComponents[0];\n    await click(issueIconComponent);\n\n    const expandedIssues = await waitForExpandedIssueTitle(issueIconComponent);\n    assert.isTrue(expandedIssues.has('Trusted Type policy creation blocked by Content Security Policy'));\n  });\n\n  it('should reveal the Issues tab if the icon in the popover is clicked', async () => {\n    if (this.timeout()) {\n      this.timeout(20000);\n    }\n    await navigateToIssuesTab();\n    await openFileInSourceTab('trusted-type-violations-report-only.rawresponse');\n\n    const HIDE_DEBUGGER_SELECTOR = '[aria-label=\"Hide debugger\"]';\n    const HIDE_NAVIGATOR_SELECTOR = '[aria-label=\"Hide navigator\"]';\n    await click(HIDE_DEBUGGER_SELECTOR);\n    await click(HIDE_NAVIGATOR_SELECTOR);\n\n    const {issueIcon, issueTitle} = await waitForFunction(async () => {\n      const bucketIssueIconComponents = await getIconComponents('cm-messageIcon-issue');\n      assert.strictEqual(bucketIssueIconComponents.length, 1);\n      const issueIconComponent = bucketIssueIconComponents[0];\n      await issueIconComponent.hover();\n      const vbox = await waitForWithTries('div.vbox.flex-auto.no-pointer-events', undefined, {tries: 3});\n      if (!vbox) {\n        return undefined;\n      }\n      const rowMessage = await waitForWithTries('.text-editor-row-message', vbox, {tries: 3});\n      if (!rowMessage) {\n        return undefined;\n      }\n      const issueTitle = await rowMessage.evaluate(x => (x instanceof HTMLElement) ? x.innerText : '');\n      const issueIcon = await waitForWithTries('.text-editor-row-message-icon', rowMessage, {tries: 3});\n      if (!issueIcon) {\n        return undefined;\n      }\n      return {issueIcon, issueTitle};\n    });\n\n    const expandedIssues = await waitForExpandedIssueTitle(issueIcon);\n    assert.isTrue(expandedIssues.has(issueTitle));\n  });\n});\n"]}