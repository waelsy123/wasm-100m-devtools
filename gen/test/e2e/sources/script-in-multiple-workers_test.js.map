{"version":3,"file":"script-in-multiple-workers_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/sources/script-in-multiple-workers_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {$$, click, getBrowserAndPages, goToResource, step, timeout, waitFor, waitForFunction} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {addBreakpointForLine, createSelectorsForWorkerFile, getBreakpointDecorators, getExecutionLine, getOpenSources, openNestedWorkerFile, PAUSE_BUTTON, RESUME_BUTTON} from '../helpers/sources-helpers.js';\n\nasync function validateSourceTabs() {\n  await step('Validate exactly one source file is open', async () => {\n    const openSources = await waitForFunction(async () => {\n      const sources = await getOpenSources();\n      return (sources.length === 1 || sources.length === 2) ? sources : undefined;\n    });\n    if (openSources.length === 2) {\n      // TODO (crbug.com/1157455): Fix race condition where we sometimes open both,\n      // then remove this case.\n      assert.deepEqual(openSources, ['multi-workers.js', 'multi-workers.min.js']);\n\n    } else {\n      assert.deepEqual(openSources, ['multi-workers.js']);\n    }\n  });\n}\n\ndescribe('Multi-Workers', async function() {\n  // The tests in this suite are particularly slow, as they perform a lot of actions\n  if (this.timeout() !== 0) {\n    this.timeout(10000);\n  }\n\n  [false, true].forEach(sourceMaps => {\n    const withOrWithout = sourceMaps ? 'with source maps' : 'without source maps';\n    const targetPage = sourceMaps ? 'sources/multi-workers-sourcemap.html' : 'sources/multi-workers.html';\n    const scriptFile = sourceMaps ? 'multi-workers.min.js' : 'multi-workers.js';\n    function workerFileSelectors(workerIndex: number) {\n      return createSelectorsForWorkerFile(scriptFile, 'test/e2e/resources/sources', 'multi-workers.js', workerIndex);\n    }\n\n    async function validateNavigationTree() {\n      await step('Ensure 10 workers exist', async () => {\n        await waitFor(workerFileSelectors(10).rootSelector);\n      });\n    }\n\n    async function validateBreakpoints() {\n      assert.deepEqual(await getBreakpointDecorators(), [6, 12]);\n      assert.deepEqual(await getBreakpointDecorators(true), [6]);\n    }\n\n    it(`loads scripts exactly once on reload ${withOrWithout}`, async () => {\n      // Have the target load the page.\n      await goToResource(targetPage);\n\n      await click('#tab-sources');\n      await validateNavigationTree();\n      await openNestedWorkerFile(workerFileSelectors(1));\n\n      // Look at source tabs\n      await validateSourceTabs();\n\n      // Reload page\n      await goToResource(targetPage);\n\n      // Check workers again\n      await validateNavigationTree();\n\n      // Look at source tabs again\n      await validateSourceTabs();\n    });\n\n    // Flaky test\n    it.skip(`[crbug.com/1157455] loads scripts exactly once on break ${withOrWithout}`, async () => {\n      const {target} = getBrowserAndPages();\n\n      // Have the target load the page.\n      await goToResource(targetPage);\n\n      await click('#tab-sources');\n\n      await validateNavigationTree();\n\n      // Send message to a worker to trigger break\n      await target.evaluate('workers[3].postMessage({command:\"break\"});');\n\n      // Should automatically switch to sources tab.\n\n      // Validate that we are paused by locating the resume button\n      await waitFor(RESUME_BUTTON);\n\n      // Look at source tabs\n      await validateSourceTabs();\n\n      // Continue\n      await click(RESUME_BUTTON);\n      // Verify that we have resumed.\n      await waitFor(PAUSE_BUTTON);\n\n      await target.evaluate('workers[7].postMessage({command:\"break\"});');\n\n      // Validate that we are paused\n      await waitFor(RESUME_BUTTON);\n\n      // Look at source tabs\n      await validateSourceTabs();\n    });\n\n    it(`shows exactly one breakpoint ${withOrWithout}`, async () => {\n      const {frontend} = getBrowserAndPages();\n      // Have the target load the page.\n      await goToResource(targetPage);\n\n      await click('#tab-sources');\n      // Wait for all workers to load\n      await validateNavigationTree();\n      // Open file from second worker\n      await openNestedWorkerFile(workerFileSelectors(2));\n      // Set a breakpoint\n      await addBreakpointForLine(frontend, 6);\n\n      await waitFor('.breakpoint-entry');\n      const breakpoints = (await $$('.breakpoint-entry')).length;\n      assert.strictEqual(breakpoints, 1);\n    });\n\n    describe(`copies breakpoints between workers ${withOrWithout}`, () => {\n      beforeEach(async () => {\n        const {frontend} = getBrowserAndPages();\n        // Have the target load the page.\n        await goToResource(targetPage);\n\n        await click('#tab-sources');\n        // Wait for all workers to load\n        await validateNavigationTree();\n\n        await step('Open file from second worker', async () => {\n          await openNestedWorkerFile(workerFileSelectors(2));\n        });\n\n        await step('Set two breakpoints', async () => {\n          await addBreakpointForLine(frontend, 6);\n        });\n\n        await step('Disable first breakpoint', async () => {\n          const bpEntry = await waitFor('.breakpoint-entry');\n          const bpCheckbox = await waitFor('input', bpEntry);\n          await bpCheckbox.evaluate(n => (n as HTMLElement).click());\n          await waitFor('.cm-breakpoint-disabled');\n        });\n\n        await step('Add another breakpoint', async () => {\n          await addBreakpointForLine(frontend, 12);\n        });\n\n        await step('Check breakpoints', async () => {\n          await validateBreakpoints();\n        });\n\n        await step('Close tab', async () => {\n          await click('[aria-label=\"Close multi-workers.js\"]');\n        });\n      });\n\n      it('when opening different file in editor', async () => {\n        // Open different worker\n        await step('Open different worker', async () => {\n          await openNestedWorkerFile(workerFileSelectors(3));\n        });\n\n        await step('Check breakpoints', async () => {\n          await validateBreakpoints();\n        });\n      });\n\n      it('after reloading', async () => {\n        const {target} = getBrowserAndPages();\n\n        await step('Reload page', async () => {\n          await target.reload();\n        });\n\n        // FIXME(crbug/1112692): Refactor test to remove the timeout.\n        await timeout(100);\n\n        await step('Open different worker', async () => {\n          await openNestedWorkerFile(workerFileSelectors(4));\n        });\n\n        await step('Check breakpoints', async () => {\n          await waitFor('.cm-breakpoint');\n          await validateBreakpoints();\n        });\n      });\n    });\n\n    describe(`hits breakpoints added to workers ${withOrWithout}`, () => {\n      beforeEach(async () => {\n        const {frontend} = getBrowserAndPages();\n\n        // Have the target load the page.\n        await goToResource(targetPage);\n\n        await step('Open sources panel', async () => {\n          await click('#tab-sources');\n        });\n\n        await validateNavigationTree();\n\n        await step('Open second worker file', async () => {\n          await openNestedWorkerFile(workerFileSelectors(2));\n        });\n\n        await step('Set breakpoint', async () => {\n          await addBreakpointForLine(frontend, 6);\n        });\n      });\n\n      // Flaky test\n      it.skip('[crbug.com/1157455] for pre-loaded workers', async () => {\n        const {target} = getBrowserAndPages();\n        // Send message to a worker to trigger break\n        await target.evaluate('workers[5].postMessage({});');\n\n        // Validate that we are paused by locating the resume button\n        await waitFor(RESUME_BUTTON);\n\n        // Validate that the source line is highlighted\n        assert.strictEqual(await getExecutionLine(), 6);\n\n        // Look at source tabs\n        await validateSourceTabs();\n      });\n\n      // Flaky test\n      it.skip('[crbug.com/1157455] for newly created workers', async () => {\n        const {target} = getBrowserAndPages();\n        await step('Launch new worker to hit breakpoint', async () => {\n          await target.evaluate(`new Worker('${scriptFile}').postMessage({});`);\n        });\n\n        await step('Validate that we are paused', async () => {\n          await waitFor(RESUME_BUTTON);\n        });\n\n        await step('Validate source line is highlighted', async () => {\n          assert.strictEqual(await getExecutionLine(), 6);\n        });\n\n        await validateSourceTabs();\n      });\n    });\n  });\n});\n"]}