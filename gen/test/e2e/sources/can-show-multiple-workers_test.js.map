{"version":3,"file":"can-show-multiple-workers_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/sources/can-show-multiple-workers_test.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;;AAE7B,+BAA4B;AAE5B,sDAAoE;AACpE,0EAA8D;AAE9D,sEAA2F;AAE3F,IAAI,iBAAqC,CAAC;AAC1C,IAAI,iBAAqC,CAAC;AAE1C,SAAS,sBAAsB,CAAC,QAAgB;IAC9C,OAAO,IAAA,iDAA4B,EAAC,QAAQ,EAAE,4BAA4B,EAAE,QAAQ,CAAC,CAAC;AACxF,CAAC;AAED,KAAK,UAAU,oBAAoB,CAAC,SAA6B;IAC/D,MAAM,UAAU,GAAG,MAAM,IAAA,mCAAc,EAAC,SAAS,CAAC,CAAC;IAEnD,OAAO,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACvD,CAAC;AAED,IAAA,8BAAQ,EAAC,iBAAiB,EAAE,KAAK;IAC/B,kFAAkF;IAClF,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAEpB,MAAM,CAAC,GAAG,EAAE;QACV,iBAAiB,GAAG,sBAAsB,CAAC,YAAY,CAAC,CAAC;QACzD,iBAAiB,GAAG,sBAAsB,CAAC,YAAY,CAAC,CAAC;IAC3D,CAAC,CAAC,CAAC;IAEH,IAAA,wBAAE,EAAC,4DAA4D,EAAE,KAAK,IAAI,EAAE;QAC1E,iCAAiC;QACjC,MAAM,IAAA,wBAAY,EAAC,gCAAgC,CAAC,CAAC;QAErD,sDAAsD;QACtD,MAAM,IAAA,iBAAK,EAAC,cAAc,CAAC,CAAC;QAE5B,2CAA2C;QAC3C,MAAM,IAAA,mBAAO,EAAC,2BAA2B,CAAC,CAAC;QAE3C,MAAM,eAAe,GAAG,MAAM,oBAAoB,CAAC,iBAAiB,CAAC,CAAC;QACtE,aAAM,CAAC,WAAW,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC;QAElD,MAAM,eAAe,GAAG,MAAM,oBAAoB,CAAC,iBAAiB,CAAC,CAAC;QACtE,aAAM,CAAC,WAAW,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC;IACpD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {click, goToResource, waitFor} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport type {NestedFileSelector} from '../helpers/sources-helpers.js';\nimport {createSelectorsForWorkerFile, expandFileTree} from '../helpers/sources-helpers.js';\n\nlet WORKER1_SELECTORS: NestedFileSelector;\nlet WORKER2_SELECTORS: NestedFileSelector;\n\nfunction createSelectorsForFile(fileName: string) {\n  return createSelectorsForWorkerFile(fileName, 'test/e2e/resources/sources', fileName);\n}\n\nasync function openNestedWorkerFile(selectors: NestedFileSelector) {\n  const workerFile = await expandFileTree(selectors);\n\n  return workerFile.evaluate(node => node.textContent);\n}\n\ndescribe('The Sources Tab', async function() {\n  // The tests in this suite are particularly slow, as they perform a lot of actions\n  this.timeout(10000);\n\n  before(() => {\n    WORKER1_SELECTORS = createSelectorsForFile('worker1.js');\n    WORKER2_SELECTORS = createSelectorsForFile('worker2.js');\n  });\n\n  it('can show multiple dedicated workers with different scripts', async () => {\n    // Have the target load the page.\n    await goToResource('sources/different-workers.html');\n\n    // Locate the button for switching to the sources tab.\n    await click('#tab-sources');\n\n    // Wait for the navigation panel to show up\n    await waitFor('.navigator-file-tree-item');\n\n    const worker1FileName = await openNestedWorkerFile(WORKER1_SELECTORS);\n    assert.strictEqual(worker1FileName, 'worker1.js');\n\n    const worker2FileName = await openNestedWorkerFile(WORKER2_SELECTORS);\n    assert.strictEqual(worker2FileName, 'worker2.js');\n  });\n});\n"]}