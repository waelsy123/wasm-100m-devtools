{"version":3,"file":"can-show-files-after-loading_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/sources/can-show-files-after-loading_test.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;;AAE7B,+BAA4B;AAE5B,sDAA0D;AAC1D,0EAA8D;AAC9D,sEAAwJ;AAUxJ,IAAA,8BAAQ,EAAC,iBAAiB,EAAE,KAAK,IAAI,EAAE;IACrC,IAAA,wBAAE,EAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;QAC/D,MAAM,EAAC,MAAM,EAAE,QAAQ,EAAC,GAAG,IAAA,8BAAkB,GAAE,CAAC;QAEhD,MAAM,IAAA,2CAAsB,EAAC,iCAAiC,CAAC,CAAC;QAChE,MAAM,IAAA,8CAAyB,EAAC,QAAQ,CAAC,CAAC;QAE1C,gFAAgF;QAChF,MAAM,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC/B,MAAM,IAAA,iDAA4B,EAAC,QAAQ,CAAC,CAAC;QAE7C,MAAM,iBAAiB,GAAG,MAAM,IAAA,6CAAwB,EAAC,QAAQ,CAAC,CAAC;QAEnE,aAAM,CAAC,SAAS,CAAC,iBAAiB,EAAE;YAClC,oDAAoD;YACpD,8CAA8C;SAC/C,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAA,wBAAE,EAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;QACxD,MAAM,EAAC,MAAM,EAAE,QAAQ,EAAC,GAAG,IAAA,8BAAkB,GAAE,CAAC;QAEhD,MAAM,IAAA,2CAAsB,EAAC,0BAA0B,CAAC,CAAC;QACzD,MAAM,IAAA,8CAAyB,EAAC,QAAQ,CAAC,CAAC;QAE1C,4EAA4E;QAC5E,MAAM,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAE/B,uEAAuE;QACvE,qCAAqC;QACrC,MAAM,MAAM,CAAC,YAAY,EAAE,CAAC;QAC5B,MAAM,QAAQ,CAAC,YAAY,EAAE,CAAC;QAE9B,MAAM,IAAA,iDAA4B,EAAC,QAAQ,CAAC,CAAC;QAE7C,MAAM,iBAAiB,GAAG,MAAM,IAAA,6CAAwB,EAAC,QAAQ,CAAC,CAAC;QAEnE,aAAM,CAAC,SAAS,CAAC,iBAAiB,EAAE;YAClC,yCAAyC;SAC1C,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {getBrowserAndPages} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {listenForSourceFilesAdded, openFileInSourcesPanel, retrieveSourceFilesAdded, waitForAdditionalSourceFiles} from '../helpers/sources-helpers.js';\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface Window {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    __sourceFilesAddedEvents: string[];\n  }\n}\n\ndescribe('The Sources Tab', async () => {\n  it('can show JavaScript files after dynamic loading', async () => {\n    const {target, frontend} = getBrowserAndPages();\n\n    await openFileInSourcesPanel('dynamic-loading-javascript.html');\n    await listenForSourceFilesAdded(frontend);\n\n    // Load the JavaScript files by executing the function in `dynamic-loading.html`\n    await target.evaluate('go();');\n    await waitForAdditionalSourceFiles(frontend);\n\n    const capturedFileNames = await retrieveSourceFilesAdded(frontend);\n\n    assert.deepEqual(capturedFileNames, [\n      '/test/e2e/resources/sources/minified-sourcecode.js',\n      '/test/e2e/resources/sources/evalSourceURL.js',\n    ]);\n  });\n\n  it('can show CSS files after dynamic loading', async () => {\n    const {target, frontend} = getBrowserAndPages();\n\n    await openFileInSourcesPanel('dynamic-loading-css.html');\n    await listenForSourceFilesAdded(frontend);\n\n    // Load the CSS file by executing the function in `dynamic-loading-css.html`\n    await target.evaluate('go();');\n\n    // We must focus the target page, as Chrome does not actually fetch the\n    // css file if the tab is not focused\n    await target.bringToFront();\n    await frontend.bringToFront();\n\n    await waitForAdditionalSourceFiles(frontend);\n\n    const capturedFileNames = await retrieveSourceFilesAdded(frontend);\n\n    assert.deepEqual(capturedFileNames, [\n      '/test/e2e/resources/sources/dynamic.css',\n    ]);\n  });\n});\n"]}