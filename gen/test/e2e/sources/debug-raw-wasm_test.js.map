{"version":3,"file":"debug-raw-wasm_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/sources/debug-raw-wasm_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\nimport type * as puppeteer from 'puppeteer';\n\nimport {$, click, getBrowserAndPages, goToResource, installEventListener, step, waitFor, waitForFunction} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {addBreakpointForLine, checkBreakpointDidNotActivate, clearSourceFilesAdded, DEBUGGER_PAUSED_EVENT, getBreakpointDecorators, getCallFrameLocations, getCallFrameNames, getNonBreakableLines, getValuesForScope, isBreakpointSet, listenForSourceFilesAdded, openSourceCodeEditorForFile, openSourcesPanel, reloadPageAndWaitForSourceFile, removeBreakpointForLine, RESUME_BUTTON, retrieveSourceFilesAdded, retrieveTopCallFrameScriptLocation, retrieveTopCallFrameWithoutResuming, SELECTED_THREAD_SELECTOR, sourceLineNumberSelector, stepThroughTheCode, switchToCallFrame, TURNED_OFF_PAUSE_BUTTON_SELECTOR, waitForAdditionalSourceFiles} from '../helpers/sources-helpers.js';\n\ndescribe('Sources Tab', async function() {\n  // The tests in this suite are particularly slow, as they perform a lot of actions\n  this.timeout(10000);\n\n  beforeEach(async () => {\n    const {frontend} = getBrowserAndPages();\n    installEventListener(frontend, DEBUGGER_PAUSED_EVENT);\n  });\n\n  it('shows the correct wasm source on load and reload', async () => {\n    async function checkSources(frontend: puppeteer.Page) {\n      await waitForAdditionalSourceFiles(frontend, 2);\n      const capturedFileNames = await retrieveSourceFilesAdded(frontend);\n      assert.deepEqual(\n          capturedFileNames,\n          ['/test/e2e/resources/sources/wasm/call-to-add-wasm.html', '/test/e2e/resources/sources/wasm/add.wasm']);\n    }\n    const {target, frontend} = getBrowserAndPages();\n    await openSourcesPanel();\n\n    await listenForSourceFilesAdded(frontend);\n    await goToResource('sources/wasm/call-to-add-wasm.html');\n    await checkSources(frontend);\n\n    await clearSourceFilesAdded(frontend);\n    await target.reload();\n    await checkSources(frontend);\n  });\n\n  it('can add a breakpoint in raw wasm', async () => {\n    const {target, frontend} = getBrowserAndPages();\n\n    await openSourceCodeEditorForFile('add.wasm', 'wasm/call-to-add-wasm.html');\n    await addBreakpointForLine(frontend, '0x023');\n\n    const scriptLocation = await retrieveTopCallFrameScriptLocation('main();', target);\n    assert.deepEqual(scriptLocation, 'add.wasm:0x23');\n  });\n\n  it('hits two breakpoints that are set and activated separately', async function() {\n    const {target, frontend} = getBrowserAndPages();\n    const fileName = 'add.wasm';\n\n    await step('navigate to a page and open the Sources tab', async () => {\n      await openSourceCodeEditorForFile(fileName, 'wasm/call-to-add-wasm.html');\n    });\n\n    await step('add a breakpoint to line No.0x027', async () => {\n      await addBreakpointForLine(frontend, '0x027');\n    });\n\n    await step('reload the page', async () => {\n      await reloadPageAndWaitForSourceFile(frontend, target, fileName);\n    });\n\n    await waitForFunction(async () => await isBreakpointSet('0x027'));\n\n    await step('check that the code has paused on the breakpoint at the correct script location', async () => {\n      const scriptLocation = await retrieveTopCallFrameWithoutResuming();\n      assert.deepEqual(scriptLocation, 'add.wasm:0x27');\n    });\n\n    await step('remove the breakpoint from the line 0x027', async () => {\n      await removeBreakpointForLine(frontend, '0x027');\n    });\n\n    await step('reload the page', async () => {\n      await reloadPageAndWaitForSourceFile(frontend, target, fileName);\n    });\n\n    await waitForFunction(async () => !(await isBreakpointSet('0x027')));\n    await checkBreakpointDidNotActivate();\n\n    await step('add a breakpoint to line No.0x028', async () => {\n      await addBreakpointForLine(frontend, '0x028');\n    });\n\n    await step('reload the page', async () => {\n      await reloadPageAndWaitForSourceFile(frontend, target, fileName);\n    });\n\n    await waitForFunction(async () => await isBreakpointSet('0x028'));\n\n    await step('check that the code has paused on the breakpoint at the correct script location', async () => {\n      const scriptLocation = await retrieveTopCallFrameWithoutResuming();\n      assert.deepEqual(scriptLocation, 'add.wasm:0x28');\n    });\n  });\n\n  it('shows variable value in popover', async function() {\n    const {target, frontend} = getBrowserAndPages();\n    const fileName = 'add.wasm';\n\n    await step('navigate to a page and open the Sources tab', async () => {\n      await openSourceCodeEditorForFile('add.wasm', 'wasm/call-to-add-wasm.html');\n    });\n\n    await step('add a breakpoint to line No.0x023', async () => {\n      await addBreakpointForLine(frontend, '0x023');\n    });\n\n    await step('reload the page', async () => {\n      await reloadPageAndWaitForSourceFile(frontend, target, fileName);\n    });\n\n    await step('hover over the $var0 in line No.0x023', async () => {\n      const pausedPosition = await waitForFunction(async () => {\n        const element = await $('.cm-executionLine .token-variable');\n        if (element && await element.evaluate(e => e.isConnected)) {\n          return element;\n        }\n        return undefined;\n      });\n      await pausedPosition.hover();\n    });\n\n    await step('check that popover with value 0 appears', async () => {\n      const popover = await waitFor('[data-stable-name-for-test=\"object-popover-content\"]');\n      const value = await waitFor('.object-value-number', popover).then(e => e.evaluate(node => node.textContent));\n      assert.strictEqual(value, '0');\n    });\n  });\n\n  it('cannot set a breakpoint on non-breakable line in raw wasm', async () => {\n    const {frontend} = getBrowserAndPages();\n\n    await openSourceCodeEditorForFile('add.wasm', 'wasm/call-to-add-wasm.html');\n    assert.deepEqual(await getNonBreakableLines(), [\n      0x000,\n      0x020,\n      0x04b,\n    ]);\n    assert.deepEqual(await getBreakpointDecorators(), []);\n    // Line 3 is breakable.\n    await addBreakpointForLine(frontend, '0x023');\n    assert.deepEqual(await getBreakpointDecorators(), [0x023]);\n  });\n\n  it('is able to step with state', async () => {\n    const {target, frontend} = getBrowserAndPages();\n    const fileName = 'stepping-with-state.wasm';\n\n    await step('navigate to a page and open the Sources tab', async () => {\n      await openSourceCodeEditorForFile('stepping-with-state.wasm', 'wasm/stepping-with-state.html');\n    });\n\n    await step('add a breakpoint to line No.0x060', async () => {\n      await addBreakpointForLine(frontend, '0x060');\n    });\n\n    await step('reload the page', async () => {\n      await reloadPageAndWaitForSourceFile(frontend, target, fileName);\n    });\n\n    await waitForFunction(async () => await isBreakpointSet('0x060'));\n\n    await step('check that the code has paused on the breakpoint at the correct script location', async () => {\n      const scriptLocation = await retrieveTopCallFrameWithoutResuming();\n      assert.deepEqual(scriptLocation, 'stepping-with-state.wasm:0x60');\n    });\n\n    await step('step two times through the code', async () => {\n      await stepThroughTheCode();\n      await stepThroughTheCode();\n    });\n\n    await step('check that the variables in the scope view show the correct values', async () => {\n      const localScopeValues = await getValuesForScope('Local', 0, 3);\n      assert.deepEqual(localScopeValues, [\n        '$var0: i32 {value: 42}',\n        '$var1: i32 {value: 8}',\n        '$var2: i32 {value: 5}',\n      ]);\n    });\n\n    await step('remove the breakpoint from the line 0x060', async () => {\n      await removeBreakpointForLine(frontend, '0x060');\n    });\n\n    await step('add a breakpoint to line No.0x048', async () => {\n      await addBreakpointForLine(frontend, '0x048');\n    });\n\n    await step('reload the page', async () => {\n      await reloadPageAndWaitForSourceFile(frontend, target, fileName);\n    });\n\n    await waitForFunction(async () => await isBreakpointSet('0x048'));\n\n    await step('check that the code has paused on the breakpoint at the correct script location', async () => {\n      const scriptLocation = await retrieveTopCallFrameWithoutResuming();\n      assert.deepEqual(scriptLocation, 'stepping-with-state.wasm:0x48');\n    });\n\n    await step('step two times through the code', async () => {\n      await stepThroughTheCode();\n      await stepThroughTheCode();\n    });\n\n    await step('check that the variables in the scope view show the correct values', async () => {\n      const localScopeValues = await getValuesForScope('Local', 0, 2);\n      assert.deepEqual(localScopeValues, [\n        '$var0: i32 {value: 50}',\n        '$var1: i32 {value: 5}',\n      ]);\n    });\n\n    await step('resume script execution', async () => {\n      await frontend.keyboard.press('F8');\n      await waitFor(TURNED_OFF_PAUSE_BUTTON_SELECTOR);\n    });\n\n    await checkBreakpointDidNotActivate();\n  });\n\n  // Flakey e2e test on Windows bot.\n  it.skip('[crbug.com/1177714] is able to step with state in multi-threaded code in main thread', async () => {\n    const {target, frontend} = getBrowserAndPages();\n    const fileName = 'stepping-with-state.wasm';\n    await step('navigate to a page and open the Sources tab', async () => {\n      await openSourceCodeEditorForFile('stepping-with-state.wasm', 'wasm/stepping-with-state-and-threads.html');\n    });\n\n    await step('check that the main thread is selected', async () => {\n      const selectedThreadElement = await waitFor(SELECTED_THREAD_SELECTOR);\n      const selectedThreadName = await selectedThreadElement.evaluate(element => {\n        return (element as HTMLElement).innerText;\n      });\n      assert.strictEqual(selectedThreadName, 'Main', 'the Main thread is not active');\n    });\n\n    await step('add a breakpoint to line No.0x060', async () => {\n      await addBreakpointForLine(frontend, '0x060');\n    });\n\n    await step('reload the page', async () => {\n      await reloadPageAndWaitForSourceFile(frontend, target, fileName);\n    });\n\n    await waitForFunction(async () => await isBreakpointSet('0x060'));\n\n    await step('check that the code has paused on the breakpoint at the correct script location', async () => {\n      const scriptLocation = await retrieveTopCallFrameWithoutResuming();\n      assert.deepEqual(scriptLocation, 'stepping-with-state.wasm:0x60');\n    });\n\n    await step('step two times through the code', async () => {\n      await stepThroughTheCode();\n      await stepThroughTheCode();\n    });\n\n    await step('check that the variables in the scope view show the correct values', async () => {\n      const localScopeValues = await getValuesForScope('Local', 0, 3);\n      assert.deepEqual(localScopeValues, [\n        '$var0: 42 {type: \"i32\", value: 42}',\n        '$var1: 8 {type: \"i32\", value: 8}',\n        '$var2: 5 {type: \"i32\", value: 5}',\n      ]);\n    });\n\n    await step('remove the breakpoint from the line 0x060', async () => {\n      await removeBreakpointForLine(frontend, '0x060');\n    });\n\n    await step('add a breakpoint to line No.0x048', async () => {\n      await addBreakpointForLine(frontend, '0x048');\n    });\n\n    await step('reload the page', async () => {\n      await reloadPageAndWaitForSourceFile(frontend, target, fileName);\n    });\n\n    await waitForFunction(async () => await isBreakpointSet('0x048'));\n\n    await step('check that the code has paused on the breakpoint at the correct script location', async () => {\n      const scriptLocation = await retrieveTopCallFrameWithoutResuming();\n      assert.deepEqual(scriptLocation, 'stepping-with-state.wasm:0x48');\n    });\n\n    await step('check that the main thread is selected', async () => {\n      const selectedThreadElement = await waitFor(SELECTED_THREAD_SELECTOR);\n      const selectedThreadName = await selectedThreadElement.evaluate(element => {\n        return (element as HTMLElement).innerText;\n      });\n      assert.strictEqual(selectedThreadName, 'Main', 'the Main thread is not active');\n    });\n\n    await step('step two times through the code', async () => {\n      await stepThroughTheCode();\n      await stepThroughTheCode();\n    });\n\n    await step('check that the variables in the scope view show the correct values', async () => {\n      const localScopeValues = await getValuesForScope('Local', 0, 2);\n      assert.deepEqual(localScopeValues, [\n        '$var0: 50 {type: \"i32\", value: 50}',\n        '$var1: 5 {type: \"i32\", value: 5}',\n      ]);\n    });\n\n    await step('remove the breakpoint from the 8th line', async () => {\n      await removeBreakpointForLine(frontend, '0x048');\n    });\n\n    await step('resume script execution', async () => {\n      await frontend.keyboard.press('F8');\n      await waitFor(TURNED_OFF_PAUSE_BUTTON_SELECTOR);\n    });\n\n    await checkBreakpointDidNotActivate();\n  });\n\n  // Setting a breakpoint on a worker does not hit breakpoint until reloaded a couple of times.\n  it.skip('[crbug.com/1134120] is able to step with state in multi-threaded code in worker thread', async () => {\n    const {target, frontend} = getBrowserAndPages();\n    const fileName = 'stepping-with-state.wasm';\n\n    await step('navigate to a page and open the Sources tab', async () => {\n      await openSourceCodeEditorForFile(fileName, 'wasm/stepping-with-state-and-threads.html');\n    });\n\n    await step('check that the main thread is selected', async () => {\n      const selectedThreadElement = await waitFor(SELECTED_THREAD_SELECTOR);\n      const selectedThreadName = await selectedThreadElement.evaluate(element => {\n        return (element as HTMLElement).innerText;\n      });\n      assert.strictEqual(selectedThreadName, 'Main', 'the Main thread is not active');\n    });\n\n    await step('add a breakpoint to line No.30', async () => {\n      await addBreakpointForLine(frontend, 30);\n    });\n\n    await step('reload the page', async () => {\n      await reloadPageAndWaitForSourceFile(frontend, target, fileName);\n    });\n\n    await waitForFunction(async () => await isBreakpointSet(30));\n\n    await step('check that the code has paused on the breakpoint at the correct script location', async () => {\n      const scriptLocation = await retrieveTopCallFrameWithoutResuming();\n      assert.deepEqual(scriptLocation, 'stepping-with-state.wasm:0x6d');\n    });\n\n    await step('check that the worker thread is selected', async () => {\n      const selectedThreadElement = await waitFor(SELECTED_THREAD_SELECTOR);\n      const selectedThreadName = await selectedThreadElement.evaluate(element => {\n        return (element as HTMLElement).innerText;\n      });\n      assert.strictEqual(\n          selectedThreadName, 'worker-stepping-with-state-and-threads.js', 'the worker thread is not active');\n    });\n\n    await step('step two times through the code', async () => {\n      await stepThroughTheCode();\n      await stepThroughTheCode();\n    });\n\n    await step('check that the variables in the scope view show the correct values', async () => {\n      const localScopeValues = await getValuesForScope('Local', 0, 1);\n      assert.deepEqual(localScopeValues, ['\"\": 42']);\n    });\n\n    await step('remove the breakpoint from the 30th line', async () => {\n      await click(sourceLineNumberSelector(30));\n    });\n\n    await step('add a breakpoint to line No.13', async () => {\n      await addBreakpointForLine(frontend, 13);\n    });\n\n    await step('reload the page', async () => {\n      await reloadPageAndWaitForSourceFile(frontend, target, fileName);\n    });\n\n    await waitForFunction(async () => await isBreakpointSet(13));\n\n    await step('check that the code has paused on the breakpoint at the correct script location', async () => {\n      const scriptLocation = await retrieveTopCallFrameWithoutResuming();\n      assert.deepEqual(scriptLocation, 'stepping-with-state.wasm:0x50');\n    });\n\n    await step('check that the worker thread is selected', async () => {\n      const selectedThreadElement = await waitFor(SELECTED_THREAD_SELECTOR);\n      const selectedThreadName = await selectedThreadElement.evaluate(element => {\n        return (element as HTMLElement).innerText;\n      });\n      assert.strictEqual(\n          selectedThreadName, 'worker-stepping-with-state-and-threads.js', 'the worker thread is not active');\n    });\n\n    await step('step two times through the code', async () => {\n      await stepThroughTheCode();\n      await stepThroughTheCode();\n    });\n\n    await step('check that the variables in the scope view show the correct values', async () => {\n      const localScopeValues = await getValuesForScope('Local', 0, 1);\n      assert.deepEqual(localScopeValues, ['\"\": 42']);\n    });\n\n    await step('resume script execution', async () => {\n      await frontend.keyboard.press('F8');\n      await waitFor(TURNED_OFF_PAUSE_BUTTON_SELECTOR);\n    });\n\n    await checkBreakpointDidNotActivate();\n  });\n});\n\ndescribe('Raw-Wasm', async () => {\n  it('displays correct location in Wasm source', async () => {\n    const {target} = getBrowserAndPages();\n\n    // Have the target load the page.\n    await openSourceCodeEditorForFile('callstack-wasm-to-js.wasm', 'wasm/callstack-wasm-to-js.html');\n\n    // Go\n    const fooPromise = target.evaluate('foo();');  // Don't await this, the target hits a debugger statement.\n\n    // This page automatically enters debugging.\n    const messageElement = await waitFor('.paused-message');\n    const statusMain = await waitFor('.status-main', messageElement);\n\n    if (!statusMain) {\n      assert.fail('Unable to find .status-main element');\n    }\n\n    const pauseMessage = await statusMain.evaluate(n => n.textContent);\n\n    assert.strictEqual(pauseMessage, 'Debugger paused');\n\n    // Find second frame of call stack\n    const titles = await getCallFrameNames();\n    const locations = await getCallFrameLocations();\n\n    assert.isAbove(titles.length, 1);\n    assert.isAbove(locations.length, 1);\n    assert.strictEqual(titles[1], '$foo');\n    assert.strictEqual(locations[1], 'callstack-wasm-to-js.wasm:0x32');\n\n    // Select second call frame.\n    await switchToCallFrame(2);\n\n    // Wasm code for function call should be highlighted\n    const codeLine = await waitFor('.cm-executionLine');\n    const codeText = await codeLine.evaluate(n => n.textContent);\n\n    assert.strictEqual(codeText, '    call $bar');\n\n    // Resume the evaluation\n    await click(RESUME_BUTTON);\n    await fooPromise;\n  });\n});\n"]}