{"version":3,"file":"layers_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/layers/layers_test.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;;AAE7B,+BAA4B;AAE5B,sDAA4G;AAC5G,0EAA8D;AAC9D,oEAA2D;AAC3D,wEAAqE;AAErE,IAAA,8BAAQ,EAAC,kBAAkB,EAAE,KAAK,IAAI,EAAE;IACtC,qCAAqC;IACrC,wBAAE,CAAC,IAAI,CAAC,6EAA6E,EAAE,KAAK,IAAI,EAAE;QAChG,MAAM,SAAS,GAAG,qBAAqB,CAAC;QACxC,MAAM,IAAA,wBAAY,EAAC,SAAS,CAAC,CAAC;QAE9B,MAAM,IAAA,2CAAqB,EAAC,QAAQ,CAAC,CAAC;QAEtC,MAAM,IAAA,mBAAO,EAAC,kDAAkD,CAAC,CAAC;QAElE,6DAA6D;QAC7D,MAAM,IAAA,mBAAO,EAAC,EAAE,CAAC,CAAC;QAElB,MAAM,GAAG,GAAG,MAAM,IAAA,iCAAa,GAAE,CAAC;QAClC,aAAM,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,IAAA,4BAAgB,GAAE,IAAI,SAAS,EAAE,CAAC,CAAC;IAChE,CAAC,CAAC,CAAC;IAEH,oEAAoE;IACpE,wBAAE,CAAC,IAAI,CAAC,sEAAsE,EAAE,KAAK,IAAI,EAAE;QACzF,MAAM,EAAC,MAAM,EAAC,GAAG,IAAA,8BAAkB,GAAE,CAAC;QACtC,MAAM,IAAA,2CAAqB,EAAC,QAAQ,CAAC,CAAC;QAEtC,MAAM,SAAS,GAAG,qBAAqB,CAAC;QACxC,MAAM,IAAA,wBAAY,EAAC,SAAS,CAAC,CAAC;QAC9B,MAAM,IAAA,mBAAO,EAAC,kDAAkD,CAAC,CAAC;QAClE,aAAM,CAAC,WAAW,CAAC,MAAM,IAAA,iCAAa,GAAE,EAAE,GAAG,IAAA,4BAAgB,GAAE,IAAI,SAAS,EAAE,CAAC,CAAC;QAEhF,MAAM,OAAO,GAAG,MAAM,MAAM,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;QACzD,MAAM,OAAO,CAAC,IAAI,CAAC,kCAAkC,EAAE;YACrD,OAAO,EAAE,IAAI;YACb,OAAO,EAAE,CAAC;YACV,kBAAkB,EAAE,CAAC;YACrB,gBAAgB,EAAE,CAAC;SACpB,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,MAAM,EAAE,CAAC;QACtB,MAAM,IAAA,mBAAO,EAAC,gDAAgD,SAAS,KAAK,CAAC,CAAC;QAC9E,aAAM,CAAC,WAAW,CAAC,MAAM,IAAA,iCAAa,GAAE,EAAE,+BAA+B,CAAC,CAAC;IAC7E,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {getBrowserAndPages, getResourcesPath, goToResource, timeout, waitFor} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {getCurrentUrl} from '../helpers/layers-helpers.js';\nimport {openPanelViaMoreTools} from '../helpers/settings-helpers.js';\n\ndescribe('The Layers Panel', async () => {\n  // See crbug.com/1261763 for details.\n  it.skip('[crbug.com/1261763] should keep the currently inspected url as an attribute', async () => {\n    const targetUrl = 'layers/default.html';\n    await goToResource(targetUrl);\n\n    await openPanelViaMoreTools('Layers');\n\n    await waitFor('[aria-label=\"layers\"]:not([test-current-url=\"\"])');\n\n    // FIXME(crbug/1112692): Refactor test to remove the timeout.\n    await timeout(50);\n\n    const url = await getCurrentUrl();\n    assert.strictEqual(url, `${getResourcesPath()}/${targetUrl}`);\n  });\n\n  // Disabled due to flakiness, original regression: crbug.com/1053901\n  it.skip('[crbug.com/1111256] should update the layers view when going offline', async () => {\n    const {target} = getBrowserAndPages();\n    await openPanelViaMoreTools('Layers');\n\n    const targetUrl = 'layers/default.html';\n    await goToResource(targetUrl);\n    await waitFor('[aria-label=\"layers\"]:not([test-current-url=\"\"])');\n    assert.strictEqual(await getCurrentUrl(), `${getResourcesPath()}/${targetUrl}`);\n\n    const session = await target.target().createCDPSession();\n    await session.send('Network.emulateNetworkConditions', {\n      offline: true,\n      latency: 0,\n      downloadThroughput: 0,\n      uploadThroughput: 0,\n    });\n    await target.reload();\n    await waitFor(`[aria-label=\"layers\"]:not([test-current-url=\"${targetUrl}\"])`);\n    assert.strictEqual(await getCurrentUrl(), 'chrome-error://chromewebdata/');\n  });\n});\n"]}