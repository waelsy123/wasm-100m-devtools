{"version":3,"file":"reveal-correct-node_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/elements/reveal-correct-node_test.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;;AAE7B,sDAAoF;AACpF,0EAA8D;AAC9D,wEAAmG;AACnG,oEAAyG;AACzG,sEAAiE;AAEjE,8EAA8E;AAE9E,IAAA,8BAAQ,EAAC,gBAAgB,EAAE,KAAK,IAAI,EAAE;IACpC,IAAA,wBAAE,EAAC,8EAA8E,EAAE,KAAK,IAAI,EAAE;QAC5F,MAAM,IAAA,wBAAY,EAAC,2CAA2C,CAAC,CAAC;QAEhE,MAAM,IAAA,uCAAmB,GAAE,CAAC;QAC5B,MAAM,IAAA,+BAAW,GAAE,CAAC;QACpB,MAAM,IAAA,6CAAyB,GAAE,CAAC;QAElC,MAAM,IAAA,yEAAmD,EAAC,yCAAyC,CAAC,CAAC;IACvG,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,IAAA,8BAAQ,EAAC,oBAAoB,EAAE,KAAK,IAAI,EAAE;IACxC,IAAA,wBAAE,EAAC,gFAAgF,EAAE,KAAK,IAAI,EAAE;QAC9F,MAAM,IAAA,wBAAY,EAAC,6BAA6B,CAAC,CAAC;QAClD,MAAM,IAAA,uCAAkB,EAAC,0BAA0B,EAAE,qBAAqB,CAAC,CAAC;QAE5E,MAAM,IAAA,gBAAI,EAAC,kDAAkD,EAAE,KAAK,IAAI,EAAE;YACxE,MAAM,IAAA,2BAAe,EAAC,KAAK,IAAI,EAAE;gBAC/B,MAAM,eAAe,GAAG,MAAM,IAAA,mBAAO,EAAC,eAAe,CAAC,CAAC;gBACvD,MAAM,WAAW,GAAG,MAAM,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;gBACvE,OAAO,WAAW,KAAK,uBAAuB,CAAC;YACjD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,MAAM,IAAA,gBAAI,EAAC,8CAA8C,EAAE,KAAK,IAAI,EAAE;YACpE,MAAM,IAAA,mBAAO,EAAC,4DAA4D,CAAC,CAAC;QAC9E,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {goToResource, step, waitFor, waitForFunction} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {waitForSelectedTreeElementSelectorWhichIncludesText} from '../helpers/elements-helpers.js';\nimport {expandIssue, navigateToIssuesTab, revealNodeInElementsPanel} from '../helpers/issues-helpers.js';\nimport {clickOnContextMenu} from '../helpers/sources-helpers.js';\n\n// TODO: Add a second node reveal test, where am issue is produced by an OOPIF\n\ndescribe('The Issues tab', async () => {\n  it('should reveal an element in the Elements panel when the node icon is clicked', async () => {\n    await goToResource('elements/element-reveal-inline-issue.html');\n\n    await navigateToIssuesTab();\n    await expandIssue();\n    await revealNodeInElementsPanel();\n\n    await waitForSelectedTreeElementSelectorWhichIncludesText('alert(\"This should be blocked by CSP\");');\n  });\n});\n\ndescribe('The Elements panel', async () => {\n  it('has a context menu link from an iframe to the corresponding frame details view', async () => {\n    await goToResource('application/main-frame.html');\n    await clickOnContextMenu('[aria-label=\"</iframe>\"]', 'Show iframe details');\n\n    await step('Frame details report with correct title is shown', async () => {\n      await waitForFunction(async () => {\n        const reportTitleNode = await waitFor('.report-title');\n        const reportTitle = await reportTitleNode.evaluate(e => e.textContent);\n        return reportTitle === 'frameId (iframe.html)';\n      });\n    });\n\n    await step('The correct frame is selected in the sidebar', async () => {\n      await waitFor('[aria-label=\"frameId (iframe.html)\"][aria-selected=\"true\"]');\n    });\n  });\n});\n"]}