{"version":3,"file":"layout-pane_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/elements/layout-pane_test.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;;AAE7B,+BAA4B;AAE5B,sDAA0D;AAC1D,0EAA8D;AAC9D,wEAAwQ;AACxQ,wEAA6E;AAE7E,IAAA,8BAAQ,EAAC,iCAAiC,EAAE,KAAK;IAC/C,IAAA,wBAAE,EAAC,sBAAsB,EAAE,KAAK,IAAI,EAAE;QACpC,MAAM,IAAA,wBAAY,EAAC,wBAAwB,CAAC,CAAC;QAC7C,MAAM,IAAA,gBAAI,EAAC,sBAAsB,EAAE,KAAK,IAAI,EAAE;YAC5C,MAAM,IAAA,iDAA2B,GAAE,CAAC;YACpC,MAAM,IAAA,0DAAoC,EAAC,cAAc,CAAC,CAAC;YAC3D,MAAM,IAAA,mDAA6B,GAAE,CAAC;QACxC,CAAC,CAAC,CAAC;QACH,MAAM,IAAA,qCAAe,EAAC;YACpB,EAAC,WAAW,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAC;SACvC,CAAC,CAAC;QACH,MAAM,IAAA,oCAAc,GAAE,CAAC;QACvB,MAAM,IAAA,uDAAiC,GAAE,CAAC;QAC1C,MAAM,IAAA,qCAAe,EAAC;YACpB,EAAC,WAAW,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAC;SACtC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAA,wBAAE,EAAC,+CAA+C,EAAE,KAAK,IAAI,EAAE;QAC7D,MAAM,IAAA,wBAAY,EAAC,kCAAkC,CAAC,CAAC;QACvD,MAAM,IAAA,oCAAc,GAAE,CAAC;QAEvB,MAAM,KAAK,GAAG,MAAM,IAAA,0CAAoB,GAAE,CAAC;QAC3C,aAAM,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,+CAA+C,CAAC,CAAC;QAErF,MAAM,IAAA,mDAA6B,EAAC,4BAA4B,CAAC,CAAC;QAElE,2GAA2G;QAC3G,+BAA+B;QAC/B,MAAM,IAAA,kDAA4B,EAAC,CAAC,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {goToResource, step} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {expandSelectedNodeRecursively, getGridsInLayoutPane, openLayoutPane, toggleElementCheckboxInLayoutPane, waitForAdorners, waitForContentOfSelectedElementsNode, waitForElementsStyleSection, waitForSomeGridsInLayoutPane} from '../helpers/elements-helpers.js';\nimport {togglePreferenceInSettingsTab} from '../helpers/settings-helpers.js';\n\ndescribe('Layout Pane in the Elements Tab', async function() {\n  it('displays Layout pane', async () => {\n    await goToResource('elements/css-grid.html');\n    await step('Prepare elements tab', async () => {\n      await waitForElementsStyleSection();\n      await waitForContentOfSelectedElementsNode('<body>\\u200B');\n      await expandSelectedNodeRecursively();\n    });\n    await waitForAdorners([\n      {textContent: 'grid', isActive: false},\n    ]);\n    await openLayoutPane();\n    await toggleElementCheckboxInLayoutPane();\n    await waitForAdorners([\n      {textContent: 'grid', isActive: true},\n    ]);\n  });\n\n  it('Lists grids in UA shadow DOM only when needed', async () => {\n    await goToResource('elements/css-grid-ua-shadow.html');\n    await openLayoutPane();\n\n    const grids = await getGridsInLayoutPane();\n    assert.strictEqual(grids.length, 1, 'Without UA shadow DOM, there is only one grid');\n\n    await togglePreferenceInSettingsTab('Show user agent shadow DOM');\n\n    // We only wait for at least 2 grids, the <video> element may generate more grids, but we're not interested\n    // in testing how many exactly.\n    await waitForSomeGridsInLayoutPane(2);\n  });\n});\n"]}