{"version":3,"file":"flexbox-editor_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/elements/flexbox-editor_test.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;;AAE7B,+BAA4B;AAE5B,sDAA6D;AAC7D,0EAA8D;AAC9D,wEAA2M;AAC3M,kGAAgH;AAEhH,IAAA,8BAAQ,EAAC,gBAAgB,EAAE,KAAK;IAC9B,UAAU,CAAC,KAAK;QACd,MAAM,IAAA,wBAAY,EAAC,8BAA8B,CAAC,CAAC;QACnD,MAAM,IAAA,0DAAoC,EAAC,cAAc,CAAC,CAAC;QAC3D,MAAM,IAAA,uCAAiB,GAAE,CAAC;QAC1B,MAAM,IAAA,wDAAkC,EAAC,CAAC,CAAC,CAAC;QAC5C,MAAM,IAAA,6CAAuB,EAAC,SAAS,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;IAC9D,CAAC,CAAC,CAAC;IAEH,IAAA,wBAAE,EAAC,gDAAgD,EAAE,KAAK,IAAI,EAAE;QAC9D,MAAM,IAAA,iEAA8B,EAAC,qBAAqB,EAAE,yBAAyB,CAAC,CAAC;QAEvF,gCAAgC;QAChC,MAAM,IAAA,sDAAmB,EAAC,sCAAsC,CAAC,CAAC;QAClE,MAAM,IAAA,6CAAuB,EAAC,SAAS,EAAE,gBAAgB,EAAE,QAAQ,CAAC,CAAC;QAErE,oCAAoC;QACpC,MAAM,IAAA,sDAAmB,EAAC,yCAAyC,CAAC,CAAC;QACrE,uEAAuE;QACvE,YAAY;QACZ,MAAM,IAAA,mBAAO,EAAC,sCAAsC,CAAC,CAAC;QACtD,MAAM,QAAQ,GAAG,MAAM,IAAA,0CAAoB,EAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC;QACzE,aAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;IAEH,IAAA,wBAAE,EAAC,kDAAkD,EAAE,KAAK,IAAI,EAAE;QAChE,MAAM,IAAA,qCAAe,EAAC,SAAS,EAAE,SAAS,EAAE,iBAAiB,CAAC,CAAC;QAC/D,MAAM,IAAA,6CAAuB,EAAC,SAAS,EAAE,SAAS,EAAE,iBAAiB,CAAC,CAAC;QACvE,MAAM,IAAA,iEAA8B,EAAC,qBAAqB,EAAE,yBAAyB,CAAC,CAAC;IACzF,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {goToResource, waitFor} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {clickNthChildOfSelectedElementNode, editCSSProperty, focusElementsTree, getCSSPropertyInRule, waitForContentOfSelectedElementsNode, waitForCSSPropertyValue} from '../helpers/elements-helpers.js';\nimport {clickPropertyButton, clickStylePropertyEditorButton} from '../helpers/style-property-editor-helpers.js';\n\ndescribe('Flexbox Editor', async function() {\n  beforeEach(async function() {\n    await goToResource('elements/flexbox-editor.html');\n    await waitForContentOfSelectedElementsNode('<body>\\u200B');\n    await focusElementsTree();\n    await clickNthChildOfSelectedElementNode(1);\n    await waitForCSSPropertyValue('#target', 'display', 'flex');\n  });\n\n  it('can be opened and flexbox styles can be edited', async () => {\n    await clickStylePropertyEditorButton('Open flexbox editor', 'devtools-flexbox-editor');\n\n    // Clicking once sets the value.\n    await clickPropertyButton('[title=\"Add flex-direction: column\"]');\n    await waitForCSSPropertyValue('#target', 'flex-direction', 'column');\n\n    // Clicking again removes the value.\n    await clickPropertyButton('[title=\"Remove flex-direction: column\"]');\n    // Wait for the button's title to be updated so that we know the change\n    // was made.\n    await waitFor('[title=\"Add flex-direction: column\"]');\n    const property = await getCSSPropertyInRule('#target', 'flex-direction');\n    assert.isUndefined(property);\n  });\n\n  it('can be opened for flexbox styles with !important', async () => {\n    await editCSSProperty('#target', 'display', 'flex !important');\n    await waitForCSSPropertyValue('#target', 'display', 'flex !important');\n    await clickStylePropertyEditorButton('Open flexbox editor', 'devtools-flexbox-editor');\n  });\n});\n"]}