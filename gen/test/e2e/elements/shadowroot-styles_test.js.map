{"version":3,"file":"shadowroot-styles_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/elements/shadowroot-styles_test.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;;AAE7B,+BAA4B;AAE5B,sDAA+G;AAC/G,0EAA8D;AAC9D,wEAA0H;AAE1H,IAAA,8BAAQ,EAAC,kBAAkB,EAAE,KAAK,IAAI,EAAE;IACtC,IAAA,wBAAE,EAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;QAC/C,MAAM,EAAC,QAAQ,EAAC,GAAG,IAAA,8BAAkB,GAAE,CAAC;QAExC,MAAM,IAAA,wBAAY,EAAC,4BAA4B,CAAC,CAAC;QAEjD,2DAA2D;QAC3D,MAAM,IAAA,mBAAO,EAAC,kBAAkB,CAAC,CAAC;QAElC,4EAA4E;QAC5E,MAAM,IAAA,0DAAoC,EAAC,cAAc,CAAC,CAAC;QAE3D,6DAA6D;QAC7D,MAAM,IAAA,mBAAO,EAAC,EAAE,CAAC,CAAC;QAElB,MAAM,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAC5C,MAAM,IAAA,0DAAoC,EAAC,gDAAgD,CAAC,CAAC;QAE7F,uEAAuE;QACvE,MAAM,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAC5C,MAAM,IAAA,0DAAoC,EAAC,6BAA6B,CAAC,CAAC;QAE1E,MAAM,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAC5C,MAAM,IAAA,0DAAoC,EAAC,qBAAqB,CAAC,CAAC;QAElE,+EAA+E;QAC/E,MAAM,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAC5C,MAAM,IAAA,0DAAoC,GAAE,CAAC;QAC7C,MAAM,IAAA,0DAAoC,EAAC,qBAAqB,CAAC,CAAC;QAElE,MAAM,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAC5C,MAAM,IAAA,0DAAoC,EAAC,yDAAyD,CAAC,CAAC;QAEtG,MAAM,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QAC3C,MAAM,IAAA,0DAAoC,EAAC,qEAAqE,CAAC,CAAC;QAElH,MAAM,IAAA,2BAAe,EAAC,KAAK,IAAI,EAAE;YAC/B,MAAM,aAAa,GAAG,MAAM,IAAA,cAAE,EAAC,iBAAiB,CAAC,CAAC;YAClD,MAAM,QAAQ,GAAG,aAAa,CAAC,MAAM,CAAC;YAEtC,OAAO,QAAQ,KAAK,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,MAAM,aAAa,GAAG,MAAM,IAAA,cAAE,EAAC,iBAAiB,CAAC,CAAC;QAClD,MAAM,aAAa,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAEtG,aAAM,CAAC,SAAS,CAAC,aAAa,EAAE;YAC9B,kBAAkB;YAClB,gBAAgB;YAChB,6BAA6B;SAC9B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {$$, getBrowserAndPages, goToResource, timeout, waitFor, waitForFunction} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {waitForChildrenOfSelectedElementNode, waitForContentOfSelectedElementsNode} from '../helpers/elements-helpers.js';\n\ndescribe('The Elements Tab', async () => {\n  it('can show styles in shadow roots', async () => {\n    const {frontend} = getBrowserAndPages();\n\n    await goToResource('elements/shadow-roots.html');\n\n    // Wait for the file to be loaded and selectors to be shown\n    await waitFor('.styles-selector');\n\n    // Check to make sure we have the correct node selected after opening a file\n    await waitForContentOfSelectedElementsNode('<body>\\u200B');\n\n    // FIXME(crbug/1112692): Refactor test to remove the timeout.\n    await timeout(50);\n\n    await frontend.keyboard.press('ArrowRight');\n    await waitForContentOfSelectedElementsNode('<div id=\\u200B\"host\">\\u200Bâ€¦\\u200B</div>\\u200B');\n\n    // Open the div (shows new nodes, but does not alter the selected node)\n    await frontend.keyboard.press('ArrowRight');\n    await waitForContentOfSelectedElementsNode('<div id=\\u200B\"host\">\\u200B');\n\n    await frontend.keyboard.press('ArrowRight');\n    await waitForContentOfSelectedElementsNode('#shadow-root (open)');\n\n    // Open the shadow root (shows new nodes, but does not alter the selected node)\n    await frontend.keyboard.press('ArrowRight');\n    await waitForChildrenOfSelectedElementNode();\n    await waitForContentOfSelectedElementsNode('#shadow-root (open)');\n\n    await frontend.keyboard.press('ArrowRight');\n    await waitForContentOfSelectedElementsNode('<style>\\u200B .red { color: red; } \\u200B</style>\\u200B');\n\n    await frontend.keyboard.press('ArrowDown');\n    await waitForContentOfSelectedElementsNode('<div id=\\u200B\"inner\" class=\\u200B\"red\">\\u200Bhi!\\u200B</div>\\u200B');\n\n    await waitForFunction(async () => {\n      const styleSections = await $$('.styles-section');\n      const numFound = styleSections.length;\n\n      return numFound === 3;\n    });\n\n    const styleSections = await $$('.styles-section');\n    const selectorTexts = await Promise.all(styleSections.map(n => n.evaluate(node => node.textContent)));\n\n    assert.deepEqual(selectorTexts, [\n      'element.style {}',\n      '<style>.red {}',\n      'user agent stylesheetdiv {}',\n    ]);\n  });\n});\n"]}