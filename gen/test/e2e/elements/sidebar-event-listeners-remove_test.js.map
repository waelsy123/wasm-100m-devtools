{"version":3,"file":"sidebar-event-listeners-remove_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/elements/sidebar-event-listeners-remove_test.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;;AAE7B,+BAA4B;AAE5B,sDAA6C;AAC7C,0EAA8D;AAC9D,sFAAqM;AAErM,IAAA,8BAAQ,EAAC,kDAAkD,EAAE,KAAK,IAAI,EAAE;IACtE,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,MAAM,IAAA,kEAAqC,GAAE,CAAC;IAChD,CAAC,CAAC,CAAC;IAEH,IAAA,wBAAE,EAAC,+CAA+C,EAAE,KAAK,IAAI,EAAE;QAC7D,MAAM,IAAA,sEAAyC,GAAE,CAAC;QAClD,MAAM,EACJ,iBAAiB,EACjB,gBAAgB,GACjB,GAAG,MAAM,IAAA,yDAA4B,EAAC,sCAAsC,CAAC,CAAC;QAE/E,2DAA2D;QAC3D,gDAAgD;QAChD,aAAM,CAAC,OAAO,CAAC,iBAAiB,EAAE,oBAAoB,CAAC,CAAC;QACxD,aAAM,CAAC,OAAO,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC;QAE5C,MAAM,oBAAoB,GAAG,GAAG,gBAAgB,yBAAyB,CAAC;QAC1E,MAAM,IAAA,iBAAK,EAAC,oBAAoB,CAAC,CAAC;QAElC,kDAAkD;QAClD,MAAM,kBAAkB,GAAG,MAAM,IAAA,2DAA8B,GAAE,CAAC;QAClE,aAAM,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {click} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {getDisplayedEventListenerNames, getFirstNodeForEventListener, loadEventListenersAndSelectButtonNode, openEventListenersPaneAndWaitForListeners} from '../helpers/event-listeners-helpers.js';\n\ndescribe('Removing event listeners in the elements sidebar', async () => {\n  beforeEach(async () => {\n    await loadEventListenersAndSelectButtonNode();\n  });\n\n  it('shows \"Remove\" by each node for a given event', async () => {\n    await openEventListenersPaneAndWaitForListeners();\n    const {\n      firstListenerText,\n      listenerSelector,\n    } = await getFirstNodeForEventListener('[aria-label=\"click, event listener\"]');\n\n    // check that we have the right event for the right element\n    // and that it has the \"Remove\" button within it\n    assert.include(firstListenerText, 'button#test-button');\n    assert.include(firstListenerText, 'Remove');\n\n    const removeButtonSelector = `${listenerSelector} .event-listener-button`;\n    await click(removeButtonSelector);\n\n    // now we can check that the 'click' event is gone\n    const eventListenerNames = await getDisplayedEventListenerNames();\n    assert.deepEqual(eventListenerNames, ['custom event', 'hover']);\n  });\n});\n"]}