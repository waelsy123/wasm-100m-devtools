{"version":3,"file":"computed-pane-properties_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/elements/computed-pane-properties_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {getBrowserAndPages, goToResource, waitForFunction} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {focusElementsTree, getAllPropertiesFromComputedPane, getContentOfComputedPane, navigateToSidePane, toggleShowAllComputedProperties, waitForComputedPaneChange, waitForElementsComputedSection} from '../helpers/elements-helpers.js';\n\ndescribe('The Computed pane', async () => {\n  beforeEach(async function() {\n    await goToResource('elements/simple-styled-page.html');\n    await navigateToSidePane('Computed');\n    await waitForElementsComputedSection();\n    // Note that navigating to the computed pane moved focus away from the\n    // elements pane. Restore it.\n    await focusElementsTree();\n  });\n\n  it('can display the CSS properties of the selected element', async () => {\n    const {frontend} = getBrowserAndPages();\n\n    // Select the H1 element and wait for the computed pane to change.\n    let content = await getContentOfComputedPane();\n    await frontend.keyboard.press('ArrowDown');\n    await waitForComputedPaneChange(content);\n    await waitForElementsComputedSection();\n\n    const h1Properties = await getAllPropertiesFromComputedPane();\n    assert.strictEqual(h1Properties.length, 10, 'There should be 10 computed properties on the H1 element');\n\n    const colorProperty = h1Properties.find(property => property && property.name === 'color');\n    assert.exists(colorProperty, 'H1 element should have a color computed property');\n    assert.deepEqual(colorProperty, {\n      name: 'color',\n      value: 'rgb(255, 0, 102)',\n    });\n\n    // Select the H2 element by pressing down again.\n    content = await getContentOfComputedPane();\n    await frontend.keyboard.press('ArrowDown');\n    await waitForComputedPaneChange(content);\n    await waitForElementsComputedSection();\n\n    const h2Properties = await getAllPropertiesFromComputedPane();\n    assert.strictEqual(h2Properties.length, 11, 'There should be 11 computed properties on the H2 element');\n\n    const backgroundProperty = h2Properties.find(property => property && property.name === 'background-color');\n    assert.exists(backgroundProperty, 'H2 element should have a background-color computed property');\n    assert.deepEqual(backgroundProperty, {\n      name: 'background-color',\n      value: 'rgb(255, 215, 0)',\n    });\n  });\n\n  it('can display inherited CSS properties of the selected element', async () => {\n    const {frontend} = getBrowserAndPages();\n\n    // Select the H1 element and wait for the computed pane to change.\n    const content = await getContentOfComputedPane();\n    await frontend.keyboard.press('ArrowDown');\n    await waitForComputedPaneChange(content);\n\n    await toggleShowAllComputedProperties();\n    await waitForElementsComputedSection();\n\n    const getAlignContentProperty = async () => {\n      const allH1Properties = await getAllPropertiesFromComputedPane();\n      const prop = allH1Properties.find(property => property && property.name === 'align-content');\n      return prop;\n    };\n    const alignContentProperty = await waitForFunction(getAlignContentProperty);\n    assert.exists(alignContentProperty, 'H1 element should display the inherited align-content computed property');\n    assert.deepEqual(alignContentProperty, {\n      name: 'align-content',\n      value: 'normal',\n    });\n  });\n});\n"]}