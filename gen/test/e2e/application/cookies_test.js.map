{"version":3,"file":"cookies_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/application/cookies_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {click, getBrowserAndPages, getTestServerPort, goToResource, waitFor, waitForFunction} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {clearStorageItems, clearStorageItemsFilter, doubleClickSourceTreeItem, filterStorageItems, getStorageItemsData, navigateToApplicationTab, selectCookieByName} from '../helpers/application-helpers.js';\n\n// The parent suffix makes sure we wait for the Cookies item to have children before trying to click it.\nconst COOKIES_SELECTOR = '[aria-label=\"Cookies\"].parent';\nlet DOMAIN_SELECTOR: string;\n\ndescribe('The Application Tab', async () => {\n  before(async () => {\n    DOMAIN_SELECTOR = `${COOKIES_SELECTOR} + ol > [aria-label=\"https://localhost:${getTestServerPort()}\"]`;\n  });\n\n  afterEach(async () => {\n    const {target} = getBrowserAndPages();\n    const cookies = await target.cookies();\n    await target.deleteCookie(...cookies);\n  });\n\n  it('shows cookies even when navigating to an unreachable page (crbug.com/1047348)', async () => {\n    const {target} = getBrowserAndPages();\n    // This sets a new cookie foo=bar\n    await navigateToApplicationTab(target, 'cookies');\n\n    await goToResource('network/unreachable.rawresponse');\n\n    await doubleClickSourceTreeItem(COOKIES_SELECTOR);\n    await doubleClickSourceTreeItem(DOMAIN_SELECTOR);\n\n    const dataGridRowValues = await getStorageItemsData(['name', 'value']);\n    assert.deepEqual(dataGridRowValues, [\n      {\n        name: 'urlencoded',\n        value: 'Hello%2BWorld!',\n      },\n      {\n        name: '__Host-foo3',\n        value: 'bar',\n      },\n      {\n        name: 'foo2',\n        value: 'bar',\n      },\n      {\n        name: 'foo',\n        value: 'bar',\n      },\n    ]);\n  });\n\n  it('shows a preview of the cookie value (crbug.com/462370)', async () => {\n    const {target} = getBrowserAndPages();\n    // This sets a new cookie foo=bar\n    await navigateToApplicationTab(target, 'cookies');\n\n    await doubleClickSourceTreeItem(COOKIES_SELECTOR);\n    await doubleClickSourceTreeItem(DOMAIN_SELECTOR);\n\n    await selectCookieByName('foo');\n\n    await waitForFunction(async () => {\n      const previewValueNode = await waitFor('.cookie-preview-widget-cookie-value');\n      const previewValue = await previewValueNode.evaluate(e => e.textContent);\n      return previewValue === 'bar';\n    });\n  });\n\n  it('shows cookie partition key', async () => {\n    const {target} = getBrowserAndPages();\n    // This sets a new cookie foo=bar\n    await navigateToApplicationTab(target, 'cookies');\n\n    await doubleClickSourceTreeItem(COOKIES_SELECTOR);\n    await doubleClickSourceTreeItem(DOMAIN_SELECTOR);\n\n    const dataGridRowValues1 = await getStorageItemsData(['partitionKey']);\n    assert.deepEqual(dataGridRowValues1, [\n      {\n        partitionKey: '',\n      },\n      {\n        partitionKey: 'https://localhost',\n      },\n      {\n        partitionKey: '',\n      },\n      {\n        partitionKey: '',\n      },\n    ]);\n  });\n\n  it('can also show the urldecoded value (crbug.com/997625)', async () => {\n    const {target} = getBrowserAndPages();\n    // This sets a new cookie foo=bar\n    await navigateToApplicationTab(target, 'cookies');\n\n    await doubleClickSourceTreeItem(COOKIES_SELECTOR);\n    await doubleClickSourceTreeItem(DOMAIN_SELECTOR);\n\n    await waitFor('.cookies-table .data-grid-data-grid-node');\n    await click('.cookies-table .data-grid-data-grid-node');\n\n    await selectCookieByName('urlencoded');\n\n    await waitForFunction(async () => {\n      const previewValueNode = await waitFor('.cookie-preview-widget-cookie-value');\n      const previewValue = await previewValueNode.evaluate(e => e.textContent);\n      return previewValue === 'Hello%2BWorld!';\n    });\n\n    await click('[aria-label=\"Show URL decoded\"]');\n\n    await waitForFunction(async () => {\n      const previewValueNode = await waitFor('.cookie-preview-widget-cookie-value');\n      const previewValue = await previewValueNode.evaluate(e => e.textContent);\n      return previewValue === 'Hello+World!';\n    });\n  });\n\n  it('clears the preview value when clearing cookies (crbug.com/1086462)', async () => {\n    const {target} = getBrowserAndPages();\n    // This sets a new cookie foo=bar\n    await navigateToApplicationTab(target, 'cookies');\n\n    await doubleClickSourceTreeItem(COOKIES_SELECTOR);\n    await doubleClickSourceTreeItem(DOMAIN_SELECTOR);\n\n    await selectCookieByName('foo');\n\n    // Select a cookie first\n    await waitForFunction(async () => {\n      const previewValueNode1 = await waitFor('.cookie-preview-widget-cookie-value');\n      const previewValue1 = await previewValueNode1.evaluate(e => e.textContent);\n      return previewValue1 === 'bar';\n    });\n\n    await clearStorageItems();\n\n    // Make sure that the preview resets\n    await waitForFunction(async () => {\n      const previewValueNode2 = await waitFor('.empty-view');\n      const previewValue2 = await previewValueNode2.evaluate(e => e.textContent as string);\n\n      return previewValue2.match(/Select a cookie to preview its value/);\n    });\n  });\n\n  it('only clear currently visible cookies (crbug.com/978059)', async () => {\n    const {target} = getBrowserAndPages();\n    // This sets a new cookie foo=bar\n    await navigateToApplicationTab(target, 'cookies');\n\n    await doubleClickSourceTreeItem(COOKIES_SELECTOR);\n    await doubleClickSourceTreeItem(DOMAIN_SELECTOR);\n\n    const dataGridRowValues1 = await getStorageItemsData(['name']);\n    assert.deepEqual(dataGridRowValues1, [\n      {\n        name: 'urlencoded',\n      },\n      {\n        name: '__Host-foo3',\n      },\n      {\n        name: 'foo2',\n      },\n      {\n        name: 'foo',\n      },\n    ]);\n\n    await filterStorageItems('foo2');\n    await clearStorageItems();\n    await clearStorageItemsFilter();\n\n    const dataGridRowValues2 = await getStorageItemsData(['name']);\n    assert.deepEqual(dataGridRowValues2, [\n      {\n        name: '__Host-foo3',\n      },\n      {\n        name: 'urlencoded',\n      },\n      {\n        name: 'foo',\n      },\n    ]);\n  });\n});\n"]}