{"version":3,"file":"manifest_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/application/manifest_test.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;;AAE7B,+BAA4B;AAE5B,sDAA6F;AAC7F,0EAA8D;AAC9D,8EAAkG;AAElG,MAAM,iBAAiB,GAAG,yBAAyB,CAAC;AACpD,MAAM,eAAe,GAAG,uBAAuB,CAAC;AAChD,MAAM,oBAAoB,GAAG,oBAAoB,CAAC;AAClD,MAAM,qBAAqB,GAAG,qBAAqB,CAAC;AAEpD,qEAAqE;AACrE,kEAAkE;AAClE,qEAAqE;AACrE,uCAAuC;AACvC,sEAAsE;AACtE,0CAA0C;AAC1C,uEAAuE;AACvE,8BAAQ,CAAC,IAAI,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;IACjE,IAAA,wBAAE,EAAC,cAAc,EAAE,KAAK,IAAI,EAAE;QAC5B,MAAM,EAAC,MAAM,EAAC,GAAG,IAAA,8BAAkB,GAAE,CAAC;QACtC,MAAM,IAAA,iDAAwB,EAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC;QAC1D,MAAM,IAAA,iBAAK,EAAC,iBAAiB,CAAC,CAAC;QAC/B,MAAM,IAAA,mBAAO,EAAC,eAAe,CAAC,CAAC;QAE/B,MAAM,UAAU,GAAG,MAAM,IAAA,8CAAqB,EAAC,oBAAoB,CAAC,CAAC;QACrE,MAAM,WAAW,GAAG,MAAM,IAAA,8CAAqB,EAAC,qBAAqB,CAAC,CAAC;QACvE,aAAM,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAAC;QACrD,aAAM,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,qBAAqB,IAAA,6BAAiB,GAAE,oBAAoB,CAAC,CAAC;IACnG,CAAC,CAAC,CAAC;IAEH,IAAA,wBAAE,EAAC,0BAA0B,EAAE,KAAK,IAAI,EAAE;QACxC,MAAM,EAAC,MAAM,EAAC,GAAG,IAAA,8BAAkB,GAAE,CAAC;QACtC,MAAM,IAAA,iDAAwB,EAAC,MAAM,EAAE,oBAAoB,CAAC,CAAC;QAC7D,MAAM,IAAA,iBAAK,EAAC,iBAAiB,CAAC,CAAC;QAC/B,MAAM,IAAA,mBAAO,EAAC,eAAe,CAAC,CAAC;QAE/B,MAAM,UAAU,GAAG,MAAM,IAAA,8CAAqB,EAAC,oBAAoB,CAAC,CAAC;QACrE,MAAM,WAAW,GAAG,MAAM,IAAA,8CAAqB,EAAC,qBAAqB,CAAC,CAAC;QACvE,aAAM,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAAC;QACrD,aAAM,CAAC,WAAW,CACd,WAAW,CAAC,CAAC,CAAC,EACd,qBAAqB,IAAA,6BAAiB,GAAE,gDAAgD;YACpF,gGAAgG;YAChG,gHAAgH,CACvH,CAAC;QACF,MAAM,IAAA,mBAAO,EAAC,wCAAwC,CAAC,CAAC;IAC1D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {click, getBrowserAndPages, getTestServerPort, waitFor} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {getTrimmedTextContent, navigateToApplicationTab} from '../helpers/application-helpers.js';\n\nconst MANIFEST_SELECTOR = '[aria-label=\"Manifest\"]';\nconst APP_ID_SELECTOR = '[aria-label=\"App Id\"]';\nconst FIELD_NAMES_SELECTOR = '.report-field-name';\nconst FIELD_VALUES_SELECTOR = '.report-field-value';\n\n// These tests are skipped because they do not pass in headless mode.\n// The 'getAppId()' CDP method depends on the code for installable\n// PWAs, which is only available in '/chrome', and therefore does not\n// return a value in headless chromium.\n// The tests are provided for local debugging only. They require debug\n// mode and setting a chrome feature flag:\n// npm run debug-e2etest -- -- --chrome-features=WebAppEnableManifestId\ndescribe.skip('[crbug.com/1222571]: The Manifest Page', async () => {\n  it('shows app id', async () => {\n    const {target} = getBrowserAndPages();\n    await navigateToApplicationTab(target, 'app-manifest-id');\n    await click(MANIFEST_SELECTOR);\n    await waitFor(APP_ID_SELECTOR);\n\n    const fieldNames = await getTrimmedTextContent(FIELD_NAMES_SELECTOR);\n    const fieldValues = await getTrimmedTextContent(FIELD_VALUES_SELECTOR);\n    assert.strictEqual(fieldNames[3], 'Computed App Id');\n    assert.strictEqual(fieldValues[3], `https://localhost:${getTestServerPort()}/some_idLearn more`);\n  });\n\n  it('shows start id as app id', async () => {\n    const {target} = getBrowserAndPages();\n    await navigateToApplicationTab(target, 'app-manifest-no-id');\n    await click(MANIFEST_SELECTOR);\n    await waitFor(APP_ID_SELECTOR);\n\n    const fieldNames = await getTrimmedTextContent(FIELD_NAMES_SELECTOR);\n    const fieldValues = await getTrimmedTextContent(FIELD_VALUES_SELECTOR);\n    assert.strictEqual(fieldNames[3], 'Computed App Id');\n    assert.strictEqual(\n        fieldValues[3],\n        `https://localhost:${getTestServerPort()}/test/e2e/resources/application/some_start_url` +\n            'Learn moreNote: id is not specified in the manifest, start_url is used instead. To specify an ' +\n            'App Id that matches the current identity, set the id field to /test/e2e/resources/application/some_start_url .',\n    );\n    await waitFor('icon-button[title=\"Copy to clipboard\"]');\n  });\n});\n"]}