{"version":3,"file":"session-storage_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/application/session-storage_test.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;;AAE7B,+BAA4B;AAE5B,sDAAmF;AACnF,8EAA2H;AAE3H,MAAM,wBAAwB,GAAG,uCAAuC,CAAC;AACzE,IAAI,eAAuB,CAAC;AAE5B,QAAQ,CAAC,qBAAqB,EAAE,KAAK,IAAI,EAAE;IACzC,MAAM,CAAC,KAAK,IAAI,EAAE;QAChB,eAAe,GAAG,GAAG,wBAAwB,0CAA0C,IAAA,6BAAiB,GAAE,IAAI,CAAC;IACjH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;QACrD,MAAM,EAAC,MAAM,EAAC,GAAG,IAAA,8BAAkB,GAAE,CAAC;QAEtC,MAAM,IAAA,gBAAI,EAAC,+DAA+D,EAAE,KAAK,IAAI,EAAE;YACrF,MAAM,IAAA,iDAAwB,EAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;QAEH,MAAM,IAAA,gBAAI,EAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;YAC/C,MAAM,IAAA,kDAAyB,EAAC,wBAAwB,CAAC,CAAC;YAC1D,MAAM,IAAA,kDAAyB,EAAC,eAAe,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;QAEH,MAAM,IAAA,gBAAI,EAAC,4CAA4C,EAAE,KAAK,IAAI,EAAE;YAClE,MAAM,iBAAiB,GAAG,MAAM,IAAA,4CAAmB,EAAC,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;YACtE,aAAM,CAAC,SAAS,CAAC,iBAAiB,EAAE;gBAClC;oBACE,GAAG,EAAE,UAAU;oBACf,KAAK,EAAE,YAAY;iBACpB;gBACD;oBACE,GAAG,EAAE,WAAW;oBAChB,KAAK,EAAE,wCAAwC;iBAChD;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {getBrowserAndPages, getTestServerPort, step} from '../../shared/helper.js';\nimport {doubleClickSourceTreeItem, getStorageItemsData, navigateToApplicationTab} from '../helpers/application-helpers.js';\n\nconst SESSION_STORAGE_SELECTOR = '[aria-label=\"Session Storage\"].parent';\nlet DOMAIN_SELECTOR: string;\n\ndescribe('The Application Tab', async () => {\n  before(async () => {\n    DOMAIN_SELECTOR = `${SESSION_STORAGE_SELECTOR} + ol > [aria-label=\"https://localhost:${getTestServerPort()}\"]`;\n  });\n\n  it('shows Session Storage keys and values', async () => {\n    const {target} = getBrowserAndPages();\n\n    await step('navigate to session-storage resource and open Application tab', async () => {\n      await navigateToApplicationTab(target, 'session-storage');\n    });\n\n    await step('open the domain storage', async () => {\n      await doubleClickSourceTreeItem(SESSION_STORAGE_SELECTOR);\n      await doubleClickSourceTreeItem(DOMAIN_SELECTOR);\n    });\n\n    await step('check that storage data values are correct', async () => {\n      const dataGridRowValues = await getStorageItemsData(['key', 'value']);\n      assert.deepEqual(dataGridRowValues, [\n        {\n          key: 'firstKey',\n          value: 'firstValue',\n        },\n        {\n          key: 'secondKey',\n          value: '{\"field\":\"complexValue\",\"primitive\":2}',\n        },\n      ]);\n    });\n  });\n});\n"]}