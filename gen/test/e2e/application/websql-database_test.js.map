{"version":3,"file":"websql-database_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/application/websql-database_test.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;;AAE7B,+BAA4B;AAE5B,sDAAsF;AACtF,0EAA8D;AAC9D,8EAAsG;AAEtG,MAAM,gBAAgB,GAAG,wBAAwB,CAAC;AAClD,MAAM,kBAAkB,GAAG,GAAG,gBAAgB,OAAO,CAAC;AAEtD,IAAA,8BAAQ,EAAC,qBAAqB,EAAE,KAAK,IAAI,EAAE;IACzC,IAAA,wBAAE,EAAC,uBAAuB,EAAE,KAAK,IAAI,EAAE;QACrC,MAAM,EAAC,MAAM,EAAE,QAAQ,EAAC,GAAG,IAAA,8BAAkB,GAAE,CAAC;QAChD,MAAM,IAAA,iDAAwB,EAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC;QAE1D,MAAM,IAAA,kDAAyB,EAAC,gBAAgB,CAAC,CAAC;QAClD,MAAM,IAAA,6BAAiB,EAAC,QAAQ,CAAC,CAAC;QAElC,MAAM,YAAY,GAAG,MAAM,IAAA,mBAAO,EAAC,kBAAkB,CAAC,CAAC;QAEvD,MAAM,aAAa,GAAG,MAAM,YAAY,CAAC,QAAQ,CAAC,CAAC,IAAa,EAAE,EAAE;YAClE,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC/E,CAAC,CAAC,CAAC;QACH,aAAM,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,uBAAuB,EAAE,wBAAwB,CAAC,CAAC,CAAC;IACvF,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {debuggerStatement, getBrowserAndPages, waitFor} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {doubleClickSourceTreeItem, navigateToApplicationTab} from '../helpers/application-helpers.js';\n\nconst WEB_SQL_SELECTOR = '[aria-label=\"Web SQL\"]';\nconst DATABASES_SELECTOR = `${WEB_SQL_SELECTOR} + ol`;\n\ndescribe('The Application Tab', async () => {\n  it('shows WebSQL database', async () => {\n    const {target, frontend} = getBrowserAndPages();\n    await navigateToApplicationTab(target, 'websql-database');\n\n    await doubleClickSourceTreeItem(WEB_SQL_SELECTOR);\n    await debuggerStatement(frontend);\n\n    const databaseList = await waitFor(DATABASES_SELECTOR);\n\n    const databaseNames = await databaseList.evaluate((list: Element) => {\n      return Array.from(list.querySelectorAll('li')).map(node => node.textContent);\n    });\n    assert.deepEqual(databaseNames, ['InspectorDatabaseTest', 'InspectorDatabaseTest2']);\n  });\n});\n"]}