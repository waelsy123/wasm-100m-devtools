{"version":3,"file":"settings-shortcuts-helpers.js","sourceRoot":"","sources":["../../../../../../test/e2e/helpers/settings-shortcuts-helpers.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport {assert} from 'chai';\nimport type {ElementHandle} from 'puppeteer';\nimport {$$, $$textContent, click, platform, selectOption, waitFor, waitForElementsWithTextContent, waitForElementWithTextContent, waitForFunction} from '../../shared/helper.js';\n\nconst CANCEL_BUTTON_SELECTOR = '[aria-label=\"Discard changes\"]';\nconst CONFIRM_BUTTON_SELECTOR = '[aria-label=\"Confirm changes\"]';\nconst DELETE_BUTTON_SELECTOR = '[aria-label=\"Remove shortcut\"]';\nconst EDIT_BUTTON_SELECTOR = '[aria-label=\"Edit shortcut\"]';\nconst RESET_BUTTON_SELECTOR = '[aria-label=\"Reset shortcuts for action\"]';\nconst SHORTCUT_DISPLAY_SELECTOR = '.keybinds-shortcut';\nconst SHORTCUT_INPUT_SELECTOR = '.keybinds-editing input';\nconst SHORTCUT_SELECT_TEXT = 'DevTools (Default)Visual Studio Code';\nexport const ADD_SHORTCUT_LINK_TEXT = 'Add a shortcut';\nexport const SHORTCUT_CHORD_TIMEOUT = 1000;\n\nexport let VS_CODE_SHORTCUTS_SHORTCUTS = ['CtrlKCtrlS'];\nexport let VS_CODE_SETTINGS_SHORTCUTS = ['Shift?', 'Ctrl,'];\nexport let VS_CODE_SHORTCUTS_QUICK_OPEN_TEXT = 'ShortcutsCtrl + K Ctrl + SSettings';\nexport let VS_CODE_PAUSE_SHORTCUTS = ['Ctrl\\\\', 'F5', 'ShiftF5'];\nexport let CONTROL_1_CONTROL_2_SHORTCUT_INPUTS_TEXT = ['Ctrl + 1', 'Ctrl + 2'];\nexport let CONTROL_1_CONTROL_2_CHORD_INPUT_TEXT = ['Ctrl + 1 Ctrl + 2'];\nexport let CONTROL_2_SHORTCUT_INPUT_TEXT = ['Ctrl + 2'];\nexport let CONTROL_1_CONTROL_2_SHORTCUT_DISPLAY_TEXT = ['Ctrl1', 'Ctrl2'];\nexport let CONTROL_1_CONTROL_2_CHORD_DISPLAY_TEXT = ['Ctrl1Ctrl2'];\nexport let CONTROL_2_SHORTCUT_DISPLAY_TEXT = ['Ctrl2'];\nexport let CONSOLE_SHORTCUT_INPUT_TEXT = ['Ctrl + `'];\nexport let CONSOLE_SHORTCUT_DISPLAY_TEXT = ['Ctrl`'];\nexport let CONTROL_ALT_C_SHORTCUT_INPUT_TEXT = ['Ctrl + Alt + C'];\nif (platform === 'mac') {\n  VS_CODE_SHORTCUTS_SHORTCUTS = ['⌘ K⌘ S'];\n  VS_CODE_SETTINGS_SHORTCUTS = ['⇧ ?', '⌘ ,'];\n  VS_CODE_SHORTCUTS_QUICK_OPEN_TEXT = 'Shortcuts⌘ K ⌘ SSettings';\n  VS_CODE_PAUSE_SHORTCUTS = ['F5', '⇧ F5', '⌘ \\\\'];\n  CONTROL_1_CONTROL_2_SHORTCUT_INPUTS_TEXT = ['Ctrl 1', 'Ctrl 2'];\n  CONTROL_1_CONTROL_2_CHORD_INPUT_TEXT = ['Ctrl 1 Ctrl 2'];\n  CONTROL_2_SHORTCUT_INPUT_TEXT = ['Ctrl 2'];\n  CONTROL_1_CONTROL_2_SHORTCUT_DISPLAY_TEXT = CONTROL_1_CONTROL_2_SHORTCUT_INPUTS_TEXT;\n  CONTROL_1_CONTROL_2_CHORD_DISPLAY_TEXT = ['Ctrl 1Ctrl 2'];\n  CONTROL_2_SHORTCUT_DISPLAY_TEXT = CONTROL_2_SHORTCUT_INPUT_TEXT;\n  CONSOLE_SHORTCUT_INPUT_TEXT = ['Ctrl `'];\n  CONSOLE_SHORTCUT_DISPLAY_TEXT = CONSOLE_SHORTCUT_INPUT_TEXT;\n  CONTROL_ALT_C_SHORTCUT_INPUT_TEXT = ['Ctrl ⌥ C'];\n}\n\nexport const selectKeyboardShortcutPreset = async (option: string) => {\n  const presetSelectElement = await waitForElementWithTextContent(SHORTCUT_SELECT_TEXT);\n  await selectOption(presetSelectElement, option);\n};\n\nexport const getShortcutListItemElement = async (shortcutText: string) => {\n  const textMatches = await $$textContent(shortcutText);\n  let titleElement;\n  for (const matchingElement of textMatches) {\n    // some actions have the same name as categories, so we have to make sure we've got the right one\n    if (await matchingElement.evaluate(element => element.matches('.keybinds-action-name'))) {\n      titleElement = matchingElement;\n      break;\n    }\n  }\n  if (!titleElement) {\n    assert.fail('shortcut element not found');\n  }\n  const listItemElement = await titleElement.getProperty('parentElement');\n  return (listItemElement as ElementHandle).asElement();\n};\n\nexport const editShortcutListItem = async (shortcutText: string) => {\n  const listItemElement = await getShortcutListItemElement(shortcutText) as ElementHandle;\n\n  await click(listItemElement);\n  await waitFor(EDIT_BUTTON_SELECTOR, listItemElement);\n  await click(EDIT_BUTTON_SELECTOR, {root: listItemElement});\n\n  await waitFor(RESET_BUTTON_SELECTOR);\n};\n\nexport const shortcutsForAction = async (shortcutText: string) => {\n  const listItemElement = await getShortcutListItemElement(shortcutText);\n  if (!listItemElement) {\n    assert.fail(`Could not find shortcut item with text ${shortcutText}`);\n  }\n  const shortcutElements = await listItemElement.$$(SHORTCUT_DISPLAY_SELECTOR);\n  const shortcutElementsTextContent =\n      await Promise.all(shortcutElements.map(element => element.getProperty('textContent')));\n  return Promise.all(shortcutElementsTextContent.map(async textContent => textContent ? await textContent.jsonValue<string>() : []));\n};\n\nexport const shortcutInputValues = async () => {\n  const shortcutInputs = await $$(SHORTCUT_INPUT_SELECTOR);\n  if (!shortcutInputs.length) {\n    assert.fail('shortcut input not found');\n  }\n  const shortcutValues = await Promise.all(shortcutInputs.map(async input => input.getProperty('value')));\n  return Promise.all(shortcutValues.map(async value => value ? await value.jsonValue<string>() : []));\n};\n\nexport const clickAddShortcutLink = async () => {\n  const addShortcutLinkTextMatches = await waitForElementsWithTextContent(ADD_SHORTCUT_LINK_TEXT);\n  let addShortcutLinkElement;\n  // the link container and the link have the same textContent, but only the latter has a click handler\n  for (const matchingElement of addShortcutLinkTextMatches) {\n    if (await matchingElement.evaluate(element => element.matches('[role=\"link\"]'))) {\n      addShortcutLinkElement = matchingElement;\n      break;\n    }\n  }\n  if (!addShortcutLinkElement) {\n    assert.fail('could not find add shortcut link');\n  }\n\n  await click(addShortcutLinkElement);\n};\n\nexport const clickShortcutConfirmButton = async () => {\n  await click(CONFIRM_BUTTON_SELECTOR);\n};\n\nexport const clickShortcutCancelButton = async () => {\n  await click(CANCEL_BUTTON_SELECTOR);\n};\n\nexport const clickShortcutResetButton = async () => {\n  await click(RESET_BUTTON_SELECTOR);\n};\n\nexport const clickShortcutDeleteButton = async (index: number) => {\n  const deleteButtons = await $$(DELETE_BUTTON_SELECTOR);\n  if (deleteButtons.length <= index) {\n    assert.fail(`shortcut delete button #${index} not found`);\n  }\n  await click(deleteButtons[index]);\n};\n\nexport const waitForEmptyShortcutInput = async () => {\n  await waitForFunction(async () => {\n    const shortcutInputs = await $$(SHORTCUT_INPUT_SELECTOR);\n    const shortcutInputValues = await Promise.all(shortcutInputs.map(input => input.getProperty('value')));\n    const shortcutInputValueStrings =\n        await Promise.all(shortcutInputValues.map(value => value ? value.jsonValue() : {}));\n    return shortcutInputValueStrings.includes('');\n  });\n};\n\nexport const waitForVSCodeShortcutPreset = async () => {\n  // wait for a shortcut that vsCode has but the default preset does not\n  await waitForElementWithTextContent(VS_CODE_SHORTCUTS_SHORTCUTS.join(''));\n};\n"]}