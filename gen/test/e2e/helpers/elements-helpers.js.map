{"version":3,"file":"elements-helpers.js","sourceRoot":"","sources":["../../../../../../test/e2e/helpers/elements-helpers.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport {assert} from 'chai';\nimport {performance} from 'perf_hooks';\nimport type * as puppeteer from 'puppeteer';\n\nimport {$, $$, click, getBrowserAndPages, pressKey, step, timeout, typeText, waitFor, waitForAria, waitForFunction} from '../../shared/helper.js';\n\nconst SELECTED_TREE_ELEMENT_SELECTOR = '.selected[role=\"treeitem\"]';\nconst CSS_PROPERTY_NAME_SELECTOR = '.webkit-css-property';\nconst CSS_PROPERTY_VALUE_SELECTOR = '.value';\nconst COLOR_SWATCH_SELECTOR = '.color-swatch-inner';\nconst CSS_STYLE_RULE_SELECTOR = '[aria-label*=\"css selector\"]';\nconst COMPUTED_PROPERTY_SELECTOR = 'devtools-computed-style-property';\nconst COMPUTED_STYLES_PANEL_SELECTOR = '[aria-label=\"Computed panel\"]';\nconst COMPUTED_STYLES_SHOW_ALL_SELECTOR = '[aria-label=\"Show all\"]';\nconst COMPUTED_STYLES_GROUP_SELECTOR = '[aria-label=\"Group\"]';\nconst ELEMENTS_PANEL_SELECTOR = '.panel[aria-label=\"elements\"]';\nconst FONT_EDITOR_SELECTOR = '[aria-label=\"Font Editor\"]';\nconst HIDDEN_FONT_EDITOR_SELECTOR = '.font-toolbar-hidden';\nconst SECTION_SUBTITLE_SELECTOR = '.styles-section-subtitle';\nconst CLS_PANE_SELECTOR = '.styles-sidebar-toolbar-pane';\nconst CLS_BUTTON_SELECTOR = '[aria-label=\"Element Classes\"]';\nconst CLS_INPUT_SELECTOR = '[aria-placeholder=\"Add new class\"]';\nconst LAYOUT_PANE_TAB_SELECTOR = '[aria-label=\"Layout\"]';\nconst LAYOUT_PANE_TABPANEL_SELECTOR = '[aria-label=\"Layout panel\"]';\nconst ADORNER_SELECTOR = 'devtools-adorner';\nexport const INACTIVE_GRID_ADORNER_SELECTOR = '[aria-label=\"Enable grid mode\"]';\nexport const ACTIVE_GRID_ADORNER_SELECTOR = '[aria-label=\"Disable grid mode\"]';\nconst ELEMENT_CHECKBOX_IN_LAYOUT_PANE_SELECTOR = '.elements input[type=checkbox]';\nconst ELEMENT_STYLE_SECTION_SELECTOR = '[aria-label=\"element.style, css selector\"]';\nconst STYLE_QUERY_RULE_TEXT_SELECTOR = '.query-text';\n\nexport const openLayoutPane = async () => {\n  await step('Open Layout pane', async () => {\n    await waitFor(LAYOUT_PANE_TAB_SELECTOR);\n    await click(LAYOUT_PANE_TAB_SELECTOR);\n\n    const panel = await waitFor(LAYOUT_PANE_TABPANEL_SELECTOR);\n    await waitFor('.elements', panel);\n  });\n};\n\nexport const waitForAdorners = async (expectedAdorners: {textContent: string, isActive: boolean}[]) => {\n  await waitForFunction(async () => {\n    const actualAdorners = await $$(ADORNER_SELECTOR);\n    const actualAdornersStates = await Promise.all(actualAdorners.map(n => {\n      return n.evaluate((node, activeSelector: string) => {\n        // TODO for now only the grid adorner that can be active. When the flex (or other) adorner can be activated\n        // too we should change the selector passed here crbug.com/1144090.\n        return {textContent: node.textContent, isActive: node.matches(activeSelector)};\n      }, ACTIVE_GRID_ADORNER_SELECTOR);\n    }));\n\n    if (actualAdornersStates.length !== expectedAdorners.length) {\n      return false;\n    }\n\n    for (let i = 0; i < actualAdornersStates.length; i++) {\n      const index = expectedAdorners.findIndex(expected => {\n        const actual = actualAdornersStates[i];\n        return expected.textContent === actual.textContent && expected.isActive === actual.isActive;\n      });\n      if (index !== -1) {\n        expectedAdorners.splice(index, 1);\n      }\n    }\n\n    return expectedAdorners.length === 0;\n  });\n};\n\nexport const waitForAdornerOnSelectedNode = async (expectedAdornerText: string) => {\n  await waitForFunction(async () => {\n    const selectedNode = await waitFor(SELECTED_TREE_ELEMENT_SELECTOR);\n    const adorner = await waitFor(ADORNER_SELECTOR, selectedNode);\n    return expectedAdornerText === await adorner.evaluate(node => node.textContent);\n  });\n};\n\nexport const toggleElementCheckboxInLayoutPane = async () => {\n  await step('Click element checkbox in Layout pane', async () => {\n    await waitFor(ELEMENT_CHECKBOX_IN_LAYOUT_PANE_SELECTOR);\n    await click(ELEMENT_CHECKBOX_IN_LAYOUT_PANE_SELECTOR);\n  });\n};\n\nexport const getGridsInLayoutPane = async () => {\n  const panel = await waitFor(LAYOUT_PANE_TABPANEL_SELECTOR);\n  return await $$('.elements .element', panel);\n};\n\nexport const waitForSomeGridsInLayoutPane = async (minimumGridCount: number) => {\n  await waitForFunction(async () => {\n    const grids = await getGridsInLayoutPane();\n    return grids.length >= minimumGridCount;\n  });\n};\n\nexport const waitForContentOfSelectedElementsNode = async (expectedTextContent: string) => {\n  await waitForFunction(async () => {\n    const selectedTextContent = await getContentOfSelectedNode();\n    return selectedTextContent === expectedTextContent;\n  });\n};\n\nexport const waitForPartialContentOfSelectedElementsNode = async (expectedPartialTextContent: string) => {\n  await waitForFunction(async () => {\n    const selectedTextContent = await getContentOfSelectedNode();\n    return selectedTextContent.includes(expectedPartialTextContent);\n  });\n};\n\n/**\n * Gets the text content of the currently selected element.\n */\nexport const getContentOfSelectedNode = async () => {\n  const selectedNode = await waitFor(SELECTED_TREE_ELEMENT_SELECTOR);\n  return await selectedNode.evaluate(node => node.textContent as string);\n};\n\nexport const waitForSelectedNodeChange = async (initialValue: string, maxTotalTimeout = 1000) => {\n  if (maxTotalTimeout === 0) {\n    maxTotalTimeout = Number.POSITIVE_INFINITY;\n  }\n\n  const start = performance.now();\n  do {\n    const currentContent = await getContentOfSelectedNode();\n    if (currentContent !== initialValue) {\n      return currentContent;\n    }\n\n    await timeout(30);\n\n  } while (performance.now() - start < maxTotalTimeout);\n\n  throw new Error(`Selected element did not change in ${maxTotalTimeout}`);\n};\n\nexport const assertSelectedElementsNodeTextIncludes = async (expectedTextContent: string) => {\n  const selectedNode = await waitFor(SELECTED_TREE_ELEMENT_SELECTOR);\n  const selectedTextContent = await selectedNode.evaluate(node => node.textContent as string);\n  assert.include(selectedTextContent, expectedTextContent);\n};\n\nexport const waitForSelectedTreeElementSelectorWithTextcontent = async (expectedTextContent: string) => {\n  await waitForFunction(async () => {\n    const selectedNode = await waitFor(SELECTED_TREE_ELEMENT_SELECTOR);\n    const selectedTextContent = await selectedNode.evaluate(node => node.textContent);\n    return selectedTextContent === expectedTextContent;\n  });\n};\n\nexport const waitForSelectedTreeElementSelectorWhichIncludesText = async (expectedTextContent: string) => {\n  await waitForFunction(async () => {\n    const selectedNode = await waitFor(SELECTED_TREE_ELEMENT_SELECTOR);\n    const selectedTextContent = await selectedNode.evaluate(node => node.textContent);\n    return selectedTextContent && selectedTextContent.includes(expectedTextContent);\n  });\n};\n\nexport const waitForChildrenOfSelectedElementNode = async () => {\n  await waitFor(`${SELECTED_TREE_ELEMENT_SELECTOR} + ol > li`);\n};\n\nexport const clickNthChildOfSelectedElementNode = async (childIndex: number) => {\n  assert(childIndex > 0, 'CSS :nth-child() selector indices are 1-based.');\n  const element = await waitFor(`${SELECTED_TREE_ELEMENT_SELECTOR} + ol > li:nth-child(${childIndex})`);\n  await element.click();\n};\n\nexport const focusElementsTree = async () => {\n  await click(SELECTED_TREE_ELEMENT_SELECTOR);\n};\n\nexport const navigateToSidePane = async (paneName: string) => {\n  await click(`[aria-label=\"${paneName}\"]`);\n  await waitFor(`[aria-label=\"${paneName} panel\"]`);\n};\n\nexport const waitForElementsStyleSection = async () => {\n  // Wait for the file to be loaded and selectors to be shown\n  await waitFor('.styles-selector');\n};\n\nexport const waitForElementsComputedSection = async () => {\n  await waitFor(COMPUTED_PROPERTY_SELECTOR);\n};\n\nexport const getContentOfComputedPane = async () => {\n  const pane = await waitFor('.computed-properties');\n  const tree = await waitFor('.tree-outline', pane);\n  return await tree.evaluate(node => node.textContent as string);\n};\n\nexport const waitForComputedPaneChange = async (initialValue: string) => {\n  await waitForFunction(async () => {\n    const value = await getContentOfComputedPane();\n    return value !== initialValue;\n  });\n};\n\nexport const getAllPropertiesFromComputedPane = async () => {\n  const properties = await $$(COMPUTED_PROPERTY_SELECTOR);\n  return (await Promise.all(properties.map(elem => elem.evaluate(node => {\n           const name = node.querySelector('[slot=\"property-name\"]');\n           const value = node.querySelector('[slot=\"property-value\"]');\n\n           return (!name || !value) ? null : {\n             name: name.textContent ? name.textContent.trim().replace(/:$/, '') : '',\n             value: value.textContent ? value.textContent.trim().replace(/;$/, '') : '',\n           };\n         }))))\n      .filter(prop => Boolean(prop));\n};\n\nexport const getPropertyFromComputedPane = async (name: string) => {\n  const properties = await $$(COMPUTED_PROPERTY_SELECTOR);\n  for (const property of properties) {\n    const matchingProperty = await property.evaluateHandle((node, name) => {\n      const nameEl = node.querySelector('[slot=\"property-name\"]');\n      if (nameEl && nameEl.textContent === name) {\n        return node;\n      }\n      return undefined;\n    }, name);\n    // Note that evaluateHandle always returns a handle, even if it points to an undefined remote object, so we need to\n    // check it's defined here or continue iterating.\n    if (await matchingProperty.evaluate(n => Boolean(n))) {\n      return matchingProperty as puppeteer.ElementHandle;\n    }\n  }\n  return undefined;\n};\n\nexport const waitForPropertyValueInComputedPane = async (name: string, value: string) => {\n  await waitForFunction(async () => {\n    const properties = await getAllPropertiesFromComputedPane();\n    for (const property of properties) {\n      if (property && property.name === name && property.value === value) {\n        return true;\n      }\n    }\n    return false;\n  });\n};\n\nexport const expandSelectedNodeRecursively = async () => {\n  const EXPAND_RECURSIVELY = '[aria-label=\"Expand recursively\"]';\n\n  // Find the selected node, right click.\n  const selectedNode = await waitFor(SELECTED_TREE_ELEMENT_SELECTOR);\n  await click(selectedNode, {clickOptions: {button: 'right'}});\n\n  // Wait for the 'expand recursively' option, and click it.\n  await waitFor(EXPAND_RECURSIVELY);\n  await click(EXPAND_RECURSIVELY);\n};\n\nexport const forcePseudoState = async (pseudoState: string) => {\n  // Open element state pane and wait for it to be loaded asynchronously\n  await click('[aria-label=\"Toggle Element State\"]');\n  await waitFor(`[aria-label=\"${pseudoState}\"]`);\n  // FIXME(crbug/1112692): Refactor test to remove the timeout.\n  await timeout(100);\n  await click(`[aria-label=\"${pseudoState}\"]`);\n};\n\nexport const removePseudoState = async (pseudoState: string) => {\n  await click(`[aria-label=\"${pseudoState}\"]`);\n};\n\nexport const getComputedStylesForDomNode = async (elementSelector: string, styleAttribute: string) => {\n  const {target} = getBrowserAndPages();\n\n  return target.evaluate((elementSelector, styleAttribute) => {\n    const element = document.querySelector(elementSelector);\n    if (!element) {\n      throw new Error(`${elementSelector} could not be found`);\n    }\n    return getComputedStyle(element)[styleAttribute];\n  }, elementSelector, styleAttribute);\n};\n\nexport const toggleShowAllComputedProperties = async () => {\n  const initialContent = await getContentOfComputedPane();\n\n  const computedPanel = await waitFor(COMPUTED_STYLES_PANEL_SELECTOR);\n  const showAllButton = await waitFor(COMPUTED_STYLES_SHOW_ALL_SELECTOR, computedPanel);\n  await click(showAllButton);\n  await waitForComputedPaneChange(initialContent);\n};\n\nexport const toggleGroupComputedProperties = async () => {\n  const computedPanel = await waitFor(COMPUTED_STYLES_PANEL_SELECTOR);\n  const groupCheckbox = await waitFor(COMPUTED_STYLES_GROUP_SELECTOR, computedPanel);\n\n  const wasChecked = await groupCheckbox.evaluate(checkbox => (checkbox as HTMLInputElement).checked);\n\n  await click(groupCheckbox);\n\n  if (wasChecked) {\n    await waitFor('[role=\"tree\"].alphabetical-list', computedPanel);\n  } else {\n    await waitFor('[role=\"tree\"].grouped-list', computedPanel);\n  }\n};\n\nexport const waitForDomNodeToBeVisible = async (elementSelector: string) => {\n  const {target} = getBrowserAndPages();\n\n  // DevTools will force Blink to make the hover shown, so we have\n  // to wait for the element to be DOM-visible (e.g. no `display: none;`)\n  await target.waitForSelector(elementSelector, {visible: true});\n};\n\nexport const waitForDomNodeToBeHidden = async (elementSelector: string) => {\n  const {target} = getBrowserAndPages();\n  await target.waitForSelector(elementSelector, {hidden: true});\n};\n\nexport const assertGutterDecorationForDomNodeExists = async () => {\n  await waitFor('.elements-gutter-decoration');\n};\n\nexport const getStyleRuleSelector = (selector: string) => `[aria-label=\"${selector}, css selector\"]`;\n\nexport const waitForStyleRule = async (expectedSelector: string) => {\n  await waitForFunction(async () => {\n    const rules = await getDisplayedStyleRules();\n    return rules.map(rule => rule.selectorText).includes(expectedSelector);\n  });\n};\n\nexport const getDisplayedStyleRules = async () => {\n  const allRuleSelectors = await $$(CSS_STYLE_RULE_SELECTOR);\n  const rules = [];\n  for (const ruleSelector of allRuleSelectors) {\n    const propertyNames = await getDisplayedCSSPropertyNames(ruleSelector);\n    const selectorText = await ruleSelector.evaluate(node => {\n      const attribute = node.getAttribute('aria-label') || '';\n      return attribute.substring(0, attribute.lastIndexOf(', css selector'));\n    });\n    rules.push({selectorText, propertyNames});\n  }\n\n  return rules;\n};\n\nexport const getDisplayedCSSPropertyNames = async (propertiesSection: puppeteer.ElementHandle<Element>) => {\n  const cssPropertyNames = await $$(CSS_PROPERTY_NAME_SELECTOR, propertiesSection);\n  const propertyNamesText = (await Promise.all(cssPropertyNames.map(\n                                 node => node.evaluate(n => n.textContent),\n                                 )))\n                                .filter(c => Boolean(c));\n  return propertyNamesText;\n};\n\nexport const getStyleRule = (selector: string) => {\n  return waitFor(getStyleRuleSelector(selector));\n};\n\nexport const getStyleRuleWithSourcePosition = (styleSelector: string, sourcePosition?: string) => {\n  if (!sourcePosition) {\n    return getStyleRule(styleSelector);\n  }\n  const selector = getStyleRuleSelector(styleSelector);\n  return waitForFunction(async () => {\n    const candidate = await waitFor(selector);\n    if (candidate) {\n      const sourcePositionElement = await candidate.$('.styles-section-subtitle .devtools-link');\n      const text = await sourcePositionElement?.evaluate(node => node.textContent);\n      if (text === sourcePosition) {\n        return candidate;\n      }\n    }\n    return undefined;\n  });\n};\n\nexport const getColorSwatch = async (parent: puppeteer.ElementHandle<Element>, index: number) => {\n  const swatches = await $$(COLOR_SWATCH_SELECTOR, parent);\n  return swatches[index];\n};\n\nexport const getColorSwatchColor = async (parent: puppeteer.ElementHandle<Element>, index: number) => {\n  const swatch = await getColorSwatch(parent, index);\n  return await swatch.evaluate(node => (node as HTMLElement).style.backgroundColor);\n};\n\nexport const shiftClickColorSwatch = async (ruleSection: puppeteer.ElementHandle<Element>, index: number) => {\n  const swatch = await getColorSwatch(ruleSection, index);\n  const {frontend} = getBrowserAndPages();\n  await frontend.keyboard.down('Shift');\n  await click(swatch);\n  await frontend.keyboard.up('Shift');\n};\n\nexport const getElementStyleFontEditorButton = async () => {\n  const section = await waitFor(ELEMENT_STYLE_SECTION_SELECTOR);\n  return await $(FONT_EDITOR_SELECTOR, section);\n};\n\nexport const getFontEditorButtons = async () => {\n  const buttons = await $$(FONT_EDITOR_SELECTOR);\n  return buttons;\n};\n\nexport const getHiddenFontEditorButtons = async () => {\n  const buttons = await $$(HIDDEN_FONT_EDITOR_SELECTOR);\n  return buttons;\n};\n\nexport const getStyleSectionSubtitles = async () => {\n  const subtitles = await $$(SECTION_SUBTITLE_SELECTOR);\n  return Promise.all(subtitles.map(node => node.evaluate(n => n.textContent)));\n};\n\nexport const getCSSPropertyInRule =\n    async (ruleSection: puppeteer.ElementHandle<Element>|string, name: string, sourcePosition?: string) => {\n  if (typeof ruleSection === 'string') {\n    ruleSection = await getStyleRuleWithSourcePosition(ruleSection, sourcePosition);\n  }\n\n  const propertyNames = await $$(CSS_PROPERTY_NAME_SELECTOR, ruleSection);\n  for (const node of propertyNames) {\n    const parent =\n        await node.evaluateHandle((node, name) => (name === node.textContent) ? node.parentNode : undefined, name);\n    // Note that evaluateHandle always returns a handle, even if it points to an undefined remote object, so we need to\n    // check it's defined here or continue iterating.\n    if (await parent.evaluate(n => Boolean(n))) {\n      return parent as puppeteer.ElementHandle;\n    }\n  }\n  return undefined;\n};\n\nexport const focusCSSPropertyValue = async (selector: string, propertyName: string) => {\n  await waitForStyleRule(selector);\n  const property = await getCSSPropertyInRule(selector, propertyName);\n  await click(CSS_PROPERTY_VALUE_SELECTOR, {root: property});\n};\n\n/**\n * Edit a CSS property value in a given rule\n * @param selector The selector of the rule to be updated. Note that because of the way the Styles populates, it is\n * important to provide a rule selector that is unique here, to avoid editing a property in the wrong rule.\n * @param propertyName The name of the property to be found and edited. If several properties have the same names, the\n * first one is edited.\n * @param newValue The new value to be used.\n */\nexport async function editCSSProperty(selector: string, propertyName: string, newValue: string) {\n  await focusCSSPropertyValue(selector, propertyName);\n\n  const {frontend} = getBrowserAndPages();\n  await frontend.keyboard.type(newValue, {delay: 100});\n  await frontend.keyboard.press('Enter');\n\n  await waitForFunction(async () => {\n    // Wait until the value element is not a text-prompt anymore.\n    const property = await getCSSPropertyInRule(selector, propertyName);\n    const value = await $(CSS_PROPERTY_VALUE_SELECTOR, property);\n    if (!value) {\n      assert.fail(`Could not find property ${propertyName} in rule ${selector}`);\n    }\n    return await value.evaluate(node => {\n      return !node.classList.contains('text-prompt') && !node.hasAttribute('contenteditable');\n    });\n  });\n}\n\n// Edit a media or container query rule text for the given styles section\nexport async function editQueryRuleText(queryStylesSections: puppeteer.ElementHandle<Element>, newQueryText: string) {\n  await click(STYLE_QUERY_RULE_TEXT_SELECTOR, {root: queryStylesSections});\n  await waitForFunction(async () => {\n    // Wait until the value element has been marked as a text-prompt.\n    const queryText = await $(STYLE_QUERY_RULE_TEXT_SELECTOR, queryStylesSections);\n    if (!queryText) {\n      assert.fail('Could not find any query in the given styles section');\n    }\n    const check = await queryText.evaluate(node => {\n      return node.classList.contains('being-edited') && node.hasAttribute('contenteditable');\n    });\n    return check;\n  });\n  await typeText(newQueryText);\n  await pressKey('Enter');\n\n  await waitForFunction(async () => {\n    // Wait until the value element is not a text-prompt anymore.\n    const queryText = await $(STYLE_QUERY_RULE_TEXT_SELECTOR, queryStylesSections);\n    if (!queryText) {\n      assert.fail('Could not find any query in the given styles section');\n    }\n    const check = await queryText.evaluate(node => {\n      return !node.classList.contains('being-edited') && !node.hasAttribute('contenteditable');\n    });\n    return check;\n  });\n}\n\nexport async function waitForCSSPropertyValue(selector: string, name: string, value: string, sourcePosition?: string) {\n  return await waitForFunction(async () => {\n    const propertyHandle = await getCSSPropertyInRule(selector, name, sourcePosition);\n    if (!propertyHandle) {\n      return undefined;\n    }\n\n    const valueHandle = await $(CSS_PROPERTY_VALUE_SELECTOR, propertyHandle);\n    if (!valueHandle) {\n      return undefined;\n    }\n\n    const matches = await valueHandle.evaluate((node, value) => node.textContent === value, value);\n    if (matches) {\n      return valueHandle;\n    }\n    return undefined;\n  });\n}\n\nexport async function waitForPropertyToHighlight(ruleSelector: string, propertyName: string) {\n  await waitForFunction(async () => {\n    const property = await getCSSPropertyInRule(ruleSelector, propertyName);\n    if (!property) {\n      assert.fail(`Could not find property ${propertyName} in rule ${ruleSelector}`);\n    }\n    // StylePropertyHighlighter temporarily highlights the property using the Web Animations API, so the only way to\n    // know it's happening is by listing all animations.\n    const animationCount = await property.evaluate(node => node.getAnimations().length);\n    return animationCount > 0;\n  });\n}\n\nexport const getBreadcrumbsTextContent = async ({expectedNodeCount}: {expectedNodeCount: number}) => {\n  const crumbsSelector = 'li.crumb > a > devtools-node-text';\n  await waitForFunction(async () => {\n    const crumbs = await $$(crumbsSelector);\n    return crumbs.length === expectedNodeCount;\n  });\n\n  const crumbs = await $$(crumbsSelector);\n  const crumbsAsText: string[] = await Promise.all(crumbs.map(node => node.evaluate((node: Element) => {\n    if (!node.shadowRoot) {\n      assert.fail('Found breadcrumbs node that unexpectedly has no shadowRoot.');\n    }\n    return Array.from(node.shadowRoot.querySelectorAll('span') || []).map(span => span.textContent).join('');\n  })));\n  return crumbsAsText;\n};\n\nexport const getSelectedBreadcrumbTextContent = async () => {\n  const selectedCrumb = await waitFor('li.crumb.selected > a > devtools-node-text');\n  const text = selectedCrumb.evaluate((node: Element) => {\n    if (!node.shadowRoot) {\n      assert.fail('Found breadcrumbs node that unexpectedly has no shadowRoot.');\n    }\n    return Array.from(node.shadowRoot.querySelectorAll('span') || []).map(span => span.textContent).join('');\n  });\n  return text;\n};\n\nexport const navigateToElementsTab = async () => {\n  // Open Elements panel\n  await click('#tab-elements');\n  await waitFor(ELEMENTS_PANEL_SELECTOR);\n};\n\nexport const clickOnFirstLinkInStylesPanel = async () => {\n  const stylesPane = await waitFor('div.styles-pane');\n  await click('div.styles-section-subtitle span.devtools-link', {root: stylesPane});\n};\n\nexport const toggleClassesPane = async () => {\n  await click(CLS_BUTTON_SELECTOR);\n};\n\nexport const typeInClassesPaneInput =\n    async (text: string, commitWith: puppeteer.KeyInput = 'Enter', waitForNodeChange: Boolean = true) => {\n  await step(`Typing in new class names ${text}`, async () => {\n    const clsInput = await waitFor(CLS_INPUT_SELECTOR);\n    await clsInput.type(text, {delay: 50});\n  });\n\n  if (commitWith) {\n    await step(`Committing the changes with ${commitWith}`, async () => {\n      const {frontend} = getBrowserAndPages();\n      await frontend.keyboard.press(commitWith);\n    });\n  }\n\n  if (waitForNodeChange) {\n    // Make sure the classes provided in text can be found in the selected element's content. This is important as the\n    // cls pane applies classes as you type, so it is not enough to wait for the selected node to change just once.\n    await step('Waiting for the selected node to change', async () => {\n      await waitForFunction(async () => {\n        const nodeContent = await getContentOfSelectedNode();\n        return text.split(' ').every(cls => nodeContent.includes(cls));\n      });\n    });\n  }\n};\n\nexport const toggleClassesPaneCheckbox = async (checkboxLabel: string) => {\n  const initialValue = await getContentOfSelectedNode();\n\n  const classesPane = await waitFor(CLS_PANE_SELECTOR);\n  await click(`input[aria-label=\"${checkboxLabel}\"]`, {root: classesPane});\n\n  await waitForSelectedNodeChange(initialValue);\n};\n\nexport const assertSelectedNodeClasses = async (expectedClasses: string[]) => {\n  const nodeText = await getContentOfSelectedNode();\n  const match = nodeText.match(/class=\\u200B\"([^\"]*)/);\n  const classText = match ? match[1] : '';\n  const classes = classText.split(/[\\s]/).map(className => className.trim()).filter(className => className.length);\n\n  assert.strictEqual(\n      classes.length, expectedClasses.length, 'Did not find the expected number of classes on the element');\n\n  for (const expectedClass of expectedClasses) {\n    assert.include(classes, expectedClass, `Could not find class ${expectedClass} on the element`);\n  }\n};\n\nexport const toggleAccessibilityPane = async () => {\n  let a11yPane = await $('Accessibility', undefined, 'aria');\n  if (!a11yPane) {\n    const elementsPanel = await waitForAria('Elements panel');\n    const moreTabs = await waitForAria('More tabs', elementsPanel);\n    await click(moreTabs);\n    a11yPane = await waitForAria('Accessibility');\n  }\n  await click(a11yPane);\n};\n\nexport const toggleAccessibilityTree = async () => {\n  const treeToggleButton = await waitForAria('Switch to Accessibility Tree view');\n  await click(treeToggleButton);\n};\n"]}