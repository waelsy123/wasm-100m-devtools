{"version":3,"file":"cross-tool-helper.js","sourceRoot":"","sources":["../../../../../../test/e2e/helpers/cross-tool-helper.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;;;AAE7B,sDAA2F;AAEpF,KAAK,UAAU,2BAA2B;IAC/C,MAAM,kCAAkC,EAAE,CAAC;IAC3C,MAAM,IAAA,iCAAqB,GAAE,CAAC;AAChC,CAAC;AAHD,kEAGC;AAEM,KAAK,UAAU,kCAAkC;IACtD,MAAM,IAAA,wBAAY,EAAC,yBAAyB,CAAC,CAAC;AAChD,CAAC;AAFD,gFAEC;AAEM,KAAK,UAAU,6BAA6B,CAAC,KAAa,EAAE,gBAAwB;IACzF,uCAAuC;IACvC,MAAM,YAAY,GAAG,MAAM,IAAA,mBAAO,EAAC,KAAK,CAAC,CAAC;IAC1C,MAAM,IAAA,iBAAK,EAAC,YAAY,EAAE,EAAC,YAAY,EAAE,EAAC,MAAM,EAAE,OAAO,EAAC,EAAC,CAAC,CAAC;IAE7D,mCAAmC;IACnC,MAAM,IAAA,iBAAK,EAAC,gBAAgB,CAAC,CAAC;AAChC,CAAC;AAPD,sEAOC;AAEY,QAAA,uBAAuB,GAAG,+BAA+B,CAAC;AAC1D,QAAA,2BAA2B,GAAG,4BAA4B,CAAC;AAC3D,QAAA,mBAAmB,GAAG,8DAA8D,CAAC;AACrF,QAAA,qBAAqB,GAAG,mEAAmE,CAAC;AAC5F,QAAA,mBAAmB,GAAG,kCAAkC,CAAC;AAE/D,KAAK,UAAU,oBAAoB,CAAC,KAAa;IACtD,MAAM,SAAS,GAAG,MAAM,IAAA,mBAAO,EAAC,2BAAmB,CAAC,CAAC;IACrD,MAAM,IAAA,mBAAO,EAAC,KAAK,EAAE,SAAS,CAAC,CAAC;AAClC,CAAC;AAHD,oDAGC;AAEM,KAAK,UAAU,iBAAiB,CAAC,KAAa;IACnD,MAAM,MAAM,GAAG,MAAM,IAAA,mBAAO,EAAC,6BAAqB,CAAC,CAAC;IACpD,MAAM,IAAA,mBAAO,EAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AAC/B,CAAC;AAHD,8CAGC;AAEM,MAAM,wBAAwB,GAAG,KAAK,EAAE,KAAa,EAAE,EAAE;IAC9D,MAAM,MAAM,GAAG,MAAM,IAAA,mBAAO,EAAC,6BAAqB,CAAC,CAAC;IACpD,MAAM,MAAM,GAAG,MAAM,IAAA,mBAAO,EAAC,2BAAmB,EAAE,MAAM,CAAC,CAAC;IAC1D,MAAM,GAAG,GAAG,MAAM,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IAClC,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC;AACtB,CAAC,CAAC;AALW,QAAA,wBAAwB,4BAKnC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {click, closeAllCloseableTabs, goToResource, waitFor} from '../../shared/helper.js';\n\nexport async function prepareForCrossToolScenario() {\n  await navigateToCrossToolIntegrationSite();\n  await closeAllCloseableTabs();\n}\n\nexport async function navigateToCrossToolIntegrationSite() {\n  await goToResource('cross_tool/default.html');\n}\n\nexport async function clickOnContextMenuItemFromTab(tabId: string, menuItemSelector: string) {\n  // Find the selected node, right click.\n  const selectedNode = await waitFor(tabId);\n  await click(selectedNode, {clickOptions: {button: 'right'}});\n\n  // Click on the context menu option\n  await click(menuItemSelector);\n}\n\nexport const MOVE_TO_DRAWER_SELECTOR = '[aria-label=\"Move to bottom\"]';\nexport const MOVE_TO_MAIN_PANEL_SELECTOR = '[aria-label=\"Move to top\"]';\nexport const MAIN_PANEL_SELECTOR = 'div[class*=\"main-tabbed-pane\"][slot*=\"insertion-point-main\"]';\nexport const DRAWER_PANEL_SELECTOR = 'div[class*=\"drawer-tabbed-pane\"][slot*=\"insertion-point-sidebar\"]';\nexport const TAB_HEADER_SELECTOR = 'div[class*=\"tabbed-pane-header\"]';\n\nexport async function tabExistsInMainPanel(tabId: string) {\n  const mainPanel = await waitFor(MAIN_PANEL_SELECTOR);\n  await waitFor(tabId, mainPanel);\n}\n\nexport async function tabExistsInDrawer(tabId: string) {\n  const drawer = await waitFor(DRAWER_PANEL_SELECTOR);\n  await waitFor(tabId, drawer);\n}\n\nexport const checkIfTabExistsInDrawer = async (tabId: string) => {\n  const drawer = await waitFor(DRAWER_PANEL_SELECTOR);\n  const header = await waitFor(TAB_HEADER_SELECTOR, drawer);\n  const tab = await header.$(tabId);\n  return Boolean(tab);\n};\n"]}