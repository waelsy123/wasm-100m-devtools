{"version":3,"file":"memory-helpers.js","sourceRoot":"","sources":["../../../../../../test/e2e/helpers/memory-helpers.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\nimport type * as puppeteer from 'puppeteer';\n\nimport {platform, waitForElementWithTextContent} from '../../shared/helper.js';\nimport {$$, click, getBrowserAndPages, pasteText, waitFor, waitForFunction, waitForNone} from '../../shared/helper.js';\n\nconst NEW_HEAP_SNAPSHOT_BUTTON = 'button[aria-label=\"Take heap snapshot\"]';\nconst MEMORY_PANEL_CONTENT = 'div[aria-label=\"Memory panel\"]';\nconst PROFILE_TREE_SIDEBAR = 'div.profiles-tree-sidebar';\nexport const MEMORY_TAB_ID = '#tab-heap_profiler';\nconst CLASS_FILTER_INPUT = 'div[aria-placeholder=\"Class filter\"]';\n\nexport async function navigateToMemoryTab() {\n  await click(MEMORY_TAB_ID);\n  await waitFor(MEMORY_PANEL_CONTENT);\n  await waitFor(PROFILE_TREE_SIDEBAR);\n}\n\nexport async function takeAllocationProfile(frontend: puppeteer.Page) {\n  const [radioButton] = await frontend.$x('//label[text()=\"Allocation sampling\"]');\n  await click(radioButton);\n  await click('button[aria-label=\"Start heap profiling\"]');\n  await new Promise(r => setTimeout(r, 200));\n  await click('button[aria-label=\"Stop heap profiling\"]');\n  await waitForNone('.heap-snapshot-sidebar-tree-item.wait');\n  await waitFor('.heap-snapshot-sidebar-tree-item.selected');\n}\n\nexport async function takeAllocationTimelineProfile(\n    frontend: puppeteer.Page, {recordStacks}: {recordStacks: boolean} = {\n      recordStacks: false,\n    }) {\n  const [radioButton] = await frontend.$x('//label[text()=\"Allocation instrumentation on timeline\"]');\n  await click(radioButton);\n  if (recordStacks) {\n    await click('input[aria-label=\"Record stack traces of allocations (extra performance overhead)\"]');\n  }\n  await click('button[aria-label=\"Start recording heap profile\"]');\n  await new Promise(r => setTimeout(r, 200));\n  await click('button[aria-label=\"Stop recording heap profile\"]');\n  await waitForNone('.heap-snapshot-sidebar-tree-item.wait');\n  await waitFor('.heap-snapshot-sidebar-tree-item.selected');\n}\n\nexport async function takeHeapSnapshot() {\n  await click(NEW_HEAP_SNAPSHOT_BUTTON);\n  await waitForNone('.heap-snapshot-sidebar-tree-item.wait');\n  await waitFor('.heap-snapshot-sidebar-tree-item.selected');\n}\n\nexport async function waitForHeapSnapshotData() {\n  await waitFor('#profile-views');\n  await waitFor('#profile-views .data-grid');\n  const rowCountMatches = async () => {\n    const rows = await getDataGridRows('#profile-views table.data');\n    if (rows.length > 0) {\n      return rows;\n    }\n    return undefined;\n  };\n  return await waitForFunction(rowCountMatches);\n}\n\nexport async function waitForNonEmptyHeapSnapshotData() {\n  const rows = await waitForHeapSnapshotData();\n  assert.isTrue(rows.length > 0);\n}\n\nexport async function getDataGridRows(selector: string) {\n  // The grid in Memory Tab contains a tree\n  const grid = await waitFor(selector);\n  return await $$('.data-grid-data-grid-node', grid);\n}\n\nexport async function setClassFilter(text: string) {\n  const classFilter = await waitFor(CLASS_FILTER_INPUT);\n  await classFilter.focus();\n  void pasteText(text);\n}\n\nexport async function triggerLocalFindDialog(frontend: puppeteer.Page) {\n  switch (platform) {\n    case 'mac':\n      await frontend.keyboard.down('Meta');\n      break;\n\n    default:\n      await frontend.keyboard.down('Control');\n  }\n\n  await frontend.keyboard.press('f');\n\n  switch (platform) {\n    case 'mac':\n      await frontend.keyboard.up('Meta');\n      break;\n\n    default:\n      await frontend.keyboard.up('Control');\n  }\n}\n\nexport async function setSearchFilter(text: string) {\n  const {frontend} = getBrowserAndPages();\n  const grid = await waitFor('#profile-views table.data');\n  await grid.focus();\n  await triggerLocalFindDialog(frontend);\n  const SEARCH_QUERY = '[aria-label=\"Find\"]';\n  const inputElement = await waitFor(SEARCH_QUERY);\n  if (!inputElement) {\n    assert.fail('Unable to find search input field');\n  }\n  await inputElement.focus();\n  await inputElement.type(text);\n}\n\nexport async function waitForSearchResultNumber(results: number) {\n  const findMatch = async () => {\n    const currentMatch = await waitFor('label[for=\\'search-input-field\\']');\n    const currentTextContent = currentMatch && await currentMatch.evaluate(el => el.textContent);\n    if (currentTextContent && currentTextContent.endsWith(` ${results}`)) {\n      return currentMatch;\n    }\n    return undefined;\n  };\n  return await waitForFunction(findMatch);\n}\n\n/**\n * Waits for the next selected row in `grid` whose text content is different from `previousContent`.\n *\n * @param grid the grid root element\n * @param previousContent the previously selected text content\n */\nasync function waitForNextSelectedRow(grid: puppeteer.ElementHandle<Element>, previousContent: string) {\n  const findMatch = async () => {\n    const currentMatch = await grid.$('.data-grid-data-grid-node.selected');\n    const currentTextContent = currentMatch && await currentMatch.evaluate(el => el.textContent);\n    if (currentMatch && currentTextContent !== previousContent) {\n      return currentMatch;\n    }\n    return undefined;\n  };\n  return await waitForFunction(findMatch);\n}\n\nexport async function findSearchResult(p: (el: puppeteer.ElementHandle<Element>) => Promise<boolean>) {\n  const grid = await waitFor('#profile-views table.data');\n  const next = await waitFor('[aria-label=\"Search next\"]');\n  let previousContent = '';\n  const findSearchResult = async () => {\n    const currentMatch = await waitForNextSelectedRow(grid, previousContent);\n    if (currentMatch && await p(currentMatch)) {\n      return currentMatch;\n    }\n    // Since `waitForNextSelectedRow` above waited for the new selection, we haven't found\n    // the right search result yet, so click on the button for the next search result.\n    previousContent = currentMatch && await currentMatch.evaluate(el => el.textContent) || '';\n    await next.click();\n    return undefined;\n  };\n  return await waitForFunction(findSearchResult);\n}\n\nconst normalizRetainerName = (retainerName: string) => {\n  // Retainers starting with `Window /` might have host information in their\n  // name, including the port, so we need to strip that. We can't distinguish\n  // Window from Window / either, because on Mac it is often just Window.\n  if (retainerName.startsWith('Window /')) {\n    return 'Window';\n  }\n  // Retainers including double-colons :: are names from the C++ implementation\n  // exposed through V8's gn arg `cppgc_enable_object_names`; these should be\n  // considered implementation details, so we normalize them.\n  if (retainerName.includes('::')) {\n    if (retainerName.startsWith('Detached')) {\n      return 'Detached InternalNode';\n    }\n    return 'InternalNode';\n  }\n  return retainerName;\n};\n\ninterface RetainerChainEntry {\n  propertyName: string;\n  retainerClassName: string;\n}\n\nexport async function assertRetainerChainSatisfies(p: (retainerChain: Array<RetainerChainEntry>) => boolean) {\n  // Give some time for the expansion to finish.\n  const retainerGridElements = await getDataGridRows('.retaining-paths-view table.data');\n  const retainerChain = [];\n  for (let i = 0; i < retainerGridElements.length; ++i) {\n    const retainer = retainerGridElements[i];\n    const propertyName = await retainer.$eval('span.property-name', el => el.textContent);\n    const rawRetainerClassName = await retainer.$eval('span.value', el => el.textContent);\n    if (!propertyName) {\n      assert.fail('Could not get retainer name');\n    }\n    if (!rawRetainerClassName) {\n      assert.fail('Could not get retainer value');\n    }\n    const retainerClassName = normalizRetainerName(rawRetainerClassName);\n    retainerChain.push({propertyName, retainerClassName});\n    if (await retainer.evaluate(el => !el.classList.contains('expanded'))) {\n      // Only follow the shortest retainer chain to the end. This relies on\n      // the retainer view behavior that auto-expands the shortest retaining\n      // chain.\n      break;\n    }\n  }\n  return p(retainerChain);\n}\n\nexport async function waitUntilRetainerChainSatisfies(p: (retainerChain: Array<RetainerChainEntry>) => boolean) {\n  await waitForFunction(assertRetainerChainSatisfies.bind(null, p));\n}\n\nexport async function waitForRetainerChain(expectedRetainers: Array<string>) {\n  await waitForFunction(assertRetainerChainSatisfies.bind(null, retainerChain => {\n    if (retainerChain.length !== expectedRetainers.length) {\n      return false;\n    }\n    for (let i = 0; i < expectedRetainers.length; ++i) {\n      if (retainerChain[i].retainerClassName !== expectedRetainers[i]) {\n        return false;\n      }\n    }\n    return true;\n  }));\n}\n\nexport async function changeViewViaDropdown(newPerspective: string) {\n  const perspectiveDropdownSelector = 'select[aria-label=\"Perspective\"]';\n  const dropdown = await waitFor(perspectiveDropdownSelector) as puppeteer.ElementHandle<HTMLSelectElement>;\n\n  const optionToSelect = await waitForElementWithTextContent(newPerspective, dropdown);\n  const optionValue = await optionToSelect.evaluate(opt => opt.getAttribute('value'));\n  if (!optionValue) {\n    throw new Error(`Could not find heap snapshot perspective option: ${newPerspective}`);\n  }\n  await dropdown.select(optionValue);\n}\n\nexport async function changeAllocationSampleViewViaDropdown(newPerspective: string) {\n  const perspectiveDropdownSelector = 'select[aria-label=\"Profile view mode\"]';\n  const dropdown = await waitFor(perspectiveDropdownSelector) as puppeteer.ElementHandle<HTMLSelectElement>;\n  const optionToSelect = await waitForElementWithTextContent(newPerspective, dropdown);\n  const optionValue = await optionToSelect.evaluate(opt => opt.getAttribute('value'));\n  if (!optionValue) {\n    throw new Error(`Could not find heap snapshot perspective option: ${newPerspective}`);\n  }\n  await dropdown.select(optionValue);\n}\n"]}