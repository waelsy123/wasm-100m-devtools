{"version":3,"file":"event-listeners-helpers.js","sourceRoot":"","sources":["../../../../../../test/e2e/helpers/event-listeners-helpers.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {$$, click, getBrowserAndPages, goToResource, timeout, waitFor} from '../../shared/helper.js';\n\nimport {waitForContentOfSelectedElementsNode, waitForElementsStyleSection} from './elements-helpers.js';\n\nexport const loadEventListenersAndSelectButtonNode = async () => {\n  const {frontend} = getBrowserAndPages();\n  await goToResource('elements/sidebar-event-listeners.html');\n  await waitForElementsStyleSection();\n\n  // Check to make sure we have the correct node selected after opening a file\n  await waitForContentOfSelectedElementsNode('<body>\\u200B');\n\n  // FIXME(crbug/1112692): Refactor test to remove the timeout.\n  await timeout(50);\n\n  // Select the button that has the events and make sure it's selected\n  await frontend.keyboard.press('ArrowRight');\n  await waitForContentOfSelectedElementsNode('<button id=\\u200B\"test-button\">\\u200Bhello world\\u200B</button>\\u200B');\n};\n\nconst EVENT_LISTENERS_PANEL_LINK = '[aria-label=\"Event Listeners\"]';\n/* We add :not(.hidden) here as if you create an event listener + remove it via the UI\n * it gets the class of .hidden rather than being removed\n */\nconst EVENT_LISTENERS_SELECTOR = '[aria-label$=\"event listener\"]:not(.hidden)';\n\nexport const openEventListenersPaneAndWaitForListeners = async () => {\n  await click(EVENT_LISTENERS_PANEL_LINK);\n  await waitFor(EVENT_LISTENERS_SELECTOR);\n};\n\nexport const getDisplayedEventListenerNames = async () => {\n  const eventListeners = await $$(EVENT_LISTENERS_SELECTOR);\n  const eventListenerNames = await Promise.all(eventListeners.map(listener => listener.evaluate(l => l.textContent)));\n  return eventListenerNames as string[];\n};\n\nexport const getEventListenerProperties = async (selector: string) => {\n  const clickEventProperties = await $$(selector);\n\n  const propertiesOutput = await Promise.all(clickEventProperties.map(n => n.evaluate(node => {\n    const nameNode = node.querySelector('.name');\n    const valueNode = node.querySelector('.value');\n\n    if (!nameNode || !valueNode) {\n      throw new Error('Could not find a name and value node for event listener properties.');\n    }\n\n    const key = nameNode.textContent;\n    const value = valueNode.textContent;\n    return [key, value];\n  })));\n\n  return propertiesOutput as Array<string[]>;\n};\n\nexport const getFirstNodeForEventListener = async (listenerTypeSelector: string) => {\n  await click(listenerTypeSelector);\n\n  const listenerNodesSelector = `${listenerTypeSelector} + ol>li`;\n  const firstListenerNode = await waitFor(listenerNodesSelector);\n  const firstListenerText = await firstListenerNode.evaluate(node => {\n    return node.textContent || '';\n  });\n\n  return {\n    firstListenerText: firstListenerText,\n    listenerSelector: listenerNodesSelector,\n  };\n};\n"]}