{"version":3,"file":"application-helpers.js","sourceRoot":"","sources":["../../../../../../test/e2e/helpers/application-helpers.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as puppeteer from 'puppeteer';\n\nimport {$, $$, click, getBrowserAndPages, goToResource, waitFor, waitForFunction} from '../../shared/helper.js';\n\nexport async function navigateToApplicationTab(target: puppeteer.Page, testName: string) {\n  await goToResource(`application/${testName}.html`);\n  await click('#tab-resources');\n  // Make sure the application navigation list is shown\n  await waitFor('.storage-group-list-item');\n}\n\nexport async function navigateToServiceWorkers() {\n  const SERVICE_WORKER_ROW_SELECTOR = '[aria-label=\"Service Workers\"]';\n  await click(SERVICE_WORKER_ROW_SELECTOR);\n}\n\nexport async function doubleClickSourceTreeItem(selector: string) {\n  const element = await waitFor(selector);\n  element.evaluate(el => el.scrollIntoView(true));\n  await click(selector, {clickOptions: {clickCount: 2}});\n}\n\nexport async function getDataGridData(selector: string, columns: string[]) {\n  // Wait for Storage data-grid to show up\n  await waitFor(selector);\n\n  const dataGridNodes = await $$('.data-grid-data-grid-node:not(.creation-node)');\n  const dataGridRowValues = await Promise.all(dataGridNodes.map(node => node.evaluate((row: Element, columns) => {\n    const data: {[key: string]: string|null} = {};\n    for (const column of columns) {\n      const columnElement = row.querySelector(`.${column}-column`);\n      data[column] = columnElement ? columnElement.textContent : '';\n    }\n    return data;\n  }, columns)));\n\n  return dataGridRowValues;\n}\n\nexport async function getTrimmedTextContent(selector: string) {\n  const elements = await $$(selector);\n  return Promise.all(elements.map(element => element.evaluate(e => {\n    return (e.textContent || '').trim().replace(/[ \\n]{2,}/gm, '');  // remove multiple consecutive whitespaces\n  })));\n}\n\nexport async function getFrameTreeTitles() {\n  const treeTitles = await $$('[aria-label=\"Resources Section\"] ~ ol .tree-element-title');\n  return Promise.all(treeTitles.map(node => node.evaluate(e => e.textContent)));\n}\n\nexport async function getStorageItemsData(columns: string[]) {\n  return getDataGridData('.storage-view table', columns);\n}\n\nexport async function filterStorageItems(filter: string) {\n  const element = await $('.toolbar-input-prompt') as puppeteer.ElementHandle;\n  await element.type(filter);\n}\n\nexport async function clearStorageItemsFilter() {\n  await click('.toolbar-input .toolbar-input-clear-button');\n}\n\nexport async function clearStorageItems() {\n  await waitFor('#storage-items-delete-all');\n  await click('#storage-items-delete-all');\n}\n\nexport async function selectCookieByName(name: string) {\n  const {frontend} = getBrowserAndPages();\n  await waitFor('.cookies-table');\n  const cell = await waitForFunction(async () => {\n    const tmp = await frontend.evaluateHandle(name => {\n      const result = [...document.querySelectorAll('.cookies-table .name-column')]\n                         .map(c => ({cell: c, textContent: c.textContent || ''}))\n                         .find(({textContent}) => textContent.trim() === name);\n      return result ? result.cell : undefined;\n    }, name);\n\n    return tmp.asElement() || undefined;\n  });\n  await cell.click();\n}\n\nexport async function waitForQuotaUsage(p: (quota: number) => boolean) {\n  await waitForFunction(async () => {\n    const storageRow = await waitFor('.quota-usage-row');\n    const quotaString = await storageRow.evaluate(el => el.textContent || '');\n    const [usedQuotaText, modifier] =\n        quotaString.replace(/^\\D*([\\d.]+)\\D*(kM?)B.used.out.of\\D*\\d+\\D*.?B.*$/, '$1 $2').split(' ');\n    let usedQuota = Number.parseInt(usedQuotaText, 10);\n    if (modifier === 'k') {\n      usedQuota *= 1000;\n    } else if (modifier === 'M') {\n      usedQuota *= 1000000;\n    }\n    return p(usedQuota);\n  });\n}\n\nexport async function getPieChartLegendRows() {\n  const pieChartLegend = await waitFor('.pie-chart-legend');\n  const rows = await pieChartLegend.evaluate(legend => {\n    const rows = [];\n    for (const tableRow of legend.children) {\n      const row = [];\n      for (const cell of tableRow.children) {\n        row.push(cell.textContent);\n      }\n      rows.push(row);\n    }\n    return rows;\n  });\n  return rows;\n}\n"]}