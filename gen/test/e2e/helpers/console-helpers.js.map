{"version":3,"file":"console-helpers.js","sourceRoot":"","sources":["../../../../../../test/e2e/helpers/console-helpers.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as puppeteer from 'puppeteer';\n\nimport {$, $$, assertNotNullOrUndefined, click, getBrowserAndPages, goToResource, pasteText, timeout, waitFor, waitForAria, waitForFunction} from '../../shared/helper.js';\nimport {AsyncScope} from '../../shared/async-scope.js';\n\nexport const CONSOLE_TAB_SELECTOR = '#tab-console';\nexport const CONSOLE_MESSAGES_SELECTOR = '.console-group-messages';\nexport const CONSOLE_FIRST_MESSAGES_SELECTOR = '.console-group-messages .source-code .console-message-text';\nexport const CONSOLE_MESSAGE_TEXT_AND_ANCHOR_SELECTOR = '.console-group-messages .source-code';\nexport const LOG_LEVELS_SELECTOR = '[aria-label^=\"Log level: \"]';\nexport const LOG_LEVELS_VERBOSE_OPTION_SELECTOR = '[aria-label^=\"Verbose\"]';\nexport const CONSOLE_PROMPT_SELECTOR = '.console-prompt-editor-container';\nexport const CONSOLE_VIEW_SELECTOR = '.console-view';\nexport const CONSOLE_TOOLTIP_SELECTOR = '.cm-tooltip';\nexport const CONSOLE_COMPLETION_HINT_SELECTOR = '.cm-completionHint';\nexport const STACK_PREVIEW_CONTAINER = '.stack-preview-container';\nexport const CONSOLE_MESSAGE_WRAPPER_SELECTOR = '.console-group-messages .console-message-wrapper';\nexport const CONSOLE_SELECTOR = '.console-user-command-result';\nexport const CONSOLE_SETTINGS_SELECTOR = '[aria-label^=\"Console settings\"]';\nexport const AUTOCOMPLETE_FROM_HISTORY_SELECTOR = '[aria-label^=\"Autocomplete from history\"]';\nexport const SHOW_CORS_ERRORS_SELECTOR = '[aria-label^=\"Show CORS errors in console\"]';\nexport const CONSOLE_CREATE_LIVE_EXPRESSION_SELECTOR = '[aria-label^=\"Create live expression\"]';\n\nexport async function deleteConsoleMessagesFilter(frontend: puppeteer.Page) {\n  await waitFor('.console-main-toolbar');\n  const main = await $('.console-main-toolbar');\n  await frontend.evaluate(n => {\n    const deleteButton = n.shadowRoot.querySelector('.search-cancel-button');\n    if (deleteButton) {\n      deleteButton.click();\n    }\n  }, main);\n}\n\nexport async function filterConsoleMessages(frontend: puppeteer.Page, filter: string) {\n  await waitFor('.console-main-toolbar');\n  const main = await $('.console-main-toolbar');\n  await frontend.evaluate(n => {\n    const toolbar = n.shadowRoot.querySelector('.toolbar-input-prompt.text-prompt');\n    toolbar.focus();\n  }, main);\n  await pasteText(filter);\n  await frontend.keyboard.press('Enter');\n}\n\nexport async function waitForConsoleMessagesToBeNonEmpty(numberOfMessages: number) {\n  await waitForFunction(async () => {\n    const messages = await $$(CONSOLE_FIRST_MESSAGES_SELECTOR);\n    if (messages.length < numberOfMessages) {\n      return false;\n    }\n    const textContents =\n        await Promise.all(messages.map(message => message.evaluate(message => message.textContent || '')));\n    return textContents.every(text => text !== '');\n  });\n}\n\nexport async function waitForLastConsoleMessageToHaveContent(expectedTextContent: string) {\n  await waitForFunction(async () => {\n    const messages = await $$(CONSOLE_FIRST_MESSAGES_SELECTOR);\n    if (messages.length === 0) {\n      return false;\n    }\n    const lastMessageContent = await messages[messages.length - 1].evaluate(message => message.textContent);\n    return lastMessageContent === expectedTextContent;\n  });\n}\n\nexport async function getConsoleMessages(testName: string, withAnchor = false, callback?: () => Promise<void>) {\n  // Ensure Console is loaded before the page is loaded to avoid a race condition.\n  await getCurrentConsoleMessages();\n\n  // Have the target load the page.\n  await goToResource(`console/${testName}.html`);\n\n  return getCurrentConsoleMessages(withAnchor, callback);\n}\n\nexport async function getCurrentConsoleMessages(withAnchor = false, callback?: () => Promise<void>) {\n  const {frontend} = getBrowserAndPages();\n  const asyncScope = new AsyncScope();\n\n  await navigateToConsoleTab();\n\n  // Get console messages that were logged.\n  await waitFor(CONSOLE_MESSAGES_SELECTOR, undefined, asyncScope);\n\n  if (callback) {\n    await callback();\n  }\n\n  // Ensure all messages are populated.\n  await asyncScope.exec(() => frontend.waitForFunction((CONSOLE_FIRST_MESSAGES_SELECTOR: string) => {\n    return Array.from(document.querySelectorAll(CONSOLE_FIRST_MESSAGES_SELECTOR))\n        .every(message => message.childNodes.length > 0);\n  }, {timeout: 0}, CONSOLE_FIRST_MESSAGES_SELECTOR));\n\n  const selector = withAnchor ? CONSOLE_MESSAGE_TEXT_AND_ANCHOR_SELECTOR : CONSOLE_FIRST_MESSAGES_SELECTOR;\n\n  // FIXME(crbug/1112692): Refactor test to remove the timeout.\n  await timeout(100);\n\n  // Get the messages from the console.\n  return frontend.evaluate(selector => {\n    return Array.from(document.querySelectorAll(selector)).map(message => message.textContent);\n  }, selector);\n}\n\nexport async function getStructuredConsoleMessages() {\n  const {frontend} = getBrowserAndPages();\n  const asyncScope = new AsyncScope();\n\n  await navigateToConsoleTab();\n\n  // Get console messages that were logged.\n  await waitFor(CONSOLE_MESSAGES_SELECTOR, undefined, asyncScope);\n\n  // Ensure all messages are populated.\n  await asyncScope.exec(() => frontend.waitForFunction((CONSOLE_FIRST_MESSAGES_SELECTOR: string) => {\n    return Array.from(document.querySelectorAll(CONSOLE_FIRST_MESSAGES_SELECTOR))\n        .every(message => message.childNodes.length > 0);\n  }, {timeout: 0}, CONSOLE_FIRST_MESSAGES_SELECTOR));\n\n  return frontend.evaluate((CONSOLE_MESSAGE_WRAPPER_SELECTOR, STACK_PREVIEW_CONTAINER) => {\n    return Array.from(document.querySelectorAll(CONSOLE_MESSAGE_WRAPPER_SELECTOR)).map(wrapper => {\n      const message = wrapper.querySelector('.console-message-text').textContent;\n      const source = wrapper.querySelector('.devtools-link').textContent;\n      const consoleMessage = wrapper.querySelector('.console-message');\n      const repeatCount = wrapper.querySelector('.console-message-repeat-count');\n      const stackPreviewRoot = wrapper.querySelector('.hidden > span');\n      const stackPreview = stackPreviewRoot ? stackPreviewRoot.shadowRoot.querySelector(STACK_PREVIEW_CONTAINER) : null;\n      return {\n        message,\n        messageClasses: consoleMessage.className,\n        repeatCount: repeatCount ? repeatCount.textContent : null,\n        source,\n        stackPreview: stackPreview ? stackPreview.textContent : null,\n        wrapperClasses: wrapper.className,\n      };\n    });\n  }, CONSOLE_MESSAGE_WRAPPER_SELECTOR, STACK_PREVIEW_CONTAINER);\n}\n\nexport async function focusConsolePrompt() {\n  await waitFor(CONSOLE_PROMPT_SELECTOR);\n  await click(CONSOLE_PROMPT_SELECTOR);\n  await waitFor('[aria-label=\"Console prompt\"]');\n  // FIXME(crbug/1112692): Refactor test to remove the timeout.\n  await timeout(50);\n}\n\nexport async function showVerboseMessages() {\n  await click(LOG_LEVELS_SELECTOR);\n  await click(LOG_LEVELS_VERBOSE_OPTION_SELECTOR);\n}\n\nexport async function typeIntoConsole(frontend: puppeteer.Page, message: string) {\n  const asyncScope = new AsyncScope();\n  const consoleElement = await waitFor(CONSOLE_PROMPT_SELECTOR, undefined, asyncScope);\n  await consoleElement.type(message);\n  // Wait for autocomplete text to catch up.\n  const line = await waitFor('[aria-label=\"Console prompt\"]', consoleElement, asyncScope);\n  const autocomplete = await $(CONSOLE_TOOLTIP_SELECTOR);\n  // The autocomplete element doesn't exist until the first autocomplete suggestion\n  // is actually given.\n\n  // Sometimes the autocomplete suggests `assert` when typing `console.clear()` which made a test flake.\n  // The following checks if there is any autocomplete text and dismisses it by pressing escape.\n  if (autocomplete && await autocomplete.evaluate(e => e.textContent)) {\n    consoleElement.press('Escape');\n  }\n  await asyncScope.exec(\n      () =>\n          frontend.waitForFunction((msg: string, ln: Element) => ln.textContent === msg, {timeout: 0}, message, line));\n  await consoleElement.press('Enter');\n}\n\nexport async function typeIntoConsoleAndWaitForResult(frontend: puppeteer.Page, message: string) {\n  // Get the current number of console results so we can check we increased it.\n  const originalLength = await frontend.evaluate(() => {\n    return document.querySelectorAll('.console-user-command-result').length;\n  });\n\n  await typeIntoConsole(frontend, message);\n\n  await new AsyncScope().exec(() => frontend.waitForFunction((originalLength: number) => {\n    return document.querySelectorAll('.console-user-command-result').length === originalLength + 1;\n  }, {timeout: 0}, originalLength));\n}\n\nexport async function unifyLogVM(actualLog: string, expectedLog: string) {\n  const actualLogArray = actualLog.split('\\n');\n  const expectedLogArray = expectedLog.split('\\n');\n\n  if (actualLogArray.length !== expectedLogArray.length) {\n    throw 'logs are not the same length';\n  }\n\n  for (let index = 0; index < actualLogArray.length; index++) {\n    const repl = actualLogArray[index].match(/VM\\d+:/g);\n    if (repl) {\n      expectedLogArray[index] = expectedLogArray[index].replace(/VM\\d+:/g, repl[0]);\n    }\n  }\n\n  return expectedLogArray.join('\\n');\n}\n\nexport async function switchToTopExecutionContext(frontend: puppeteer.Page) {\n  const dropdown = await waitFor('[aria-label^=\"JavaScript context:\"]');\n  // Use keyboard to open drop down, select first item.\n  await dropdown.press('Space');\n  await frontend.keyboard.press('Home');\n  await frontend.keyboard.press('Space');\n  // Double-check that it worked.\n  await waitFor('[aria-label=\"JavaScript context: top\"]');\n}\n\nexport async function navigateToConsoleTab() {\n  // Locate the button for switching to the console tab.\n  await click(CONSOLE_TAB_SELECTOR);\n  await waitFor(CONSOLE_VIEW_SELECTOR);\n}\n\nexport async function waitForConsoleMessageAndClickOnLink() {\n  const consoleMessage = await waitFor('div.console-group-messages span.source-code');\n  await click('span.devtools-link', {root: consoleMessage});\n}\n\nexport async function navigateToIssuesPanelViaInfoBar() {\n  // Navigate to Issues panel\n  await waitFor('#console-issues-counter');\n  await click('#console-issues-counter');\n  await waitFor('.issues-pane');\n}\n\nexport async function turnOffHistoryAutocomplete() {\n  await click(CONSOLE_SETTINGS_SELECTOR);\n  await waitFor(AUTOCOMPLETE_FROM_HISTORY_SELECTOR);\n  await click(AUTOCOMPLETE_FROM_HISTORY_SELECTOR);\n}\n\nexport async function toggleShowCorsErrors() {\n  await click(CONSOLE_SETTINGS_SELECTOR);\n  await waitFor(SHOW_CORS_ERRORS_SELECTOR);\n  await click(SHOW_CORS_ERRORS_SELECTOR);\n  await click(CONSOLE_SETTINGS_SELECTOR);\n}\n\nasync function getIssueButtonLabel(): Promise<string|null> {\n  const infobarButton = await waitFor('#console-issues-counter');\n  const iconButton = await waitFor('icon-button', infobarButton);\n  const titleElement = await waitFor('.icon-button-title', iconButton);\n  assertNotNullOrUndefined(titleElement);\n  const infobarButtonText = await titleElement.evaluate(node => (node as HTMLElement).textContent);\n  return infobarButtonText;\n}\n\nexport async function waitForIssueButtonLabel(expectedLabel: string) {\n  await waitForFunction(async () => {\n    const label = await getIssueButtonLabel();\n    return expectedLabel === label;\n  });\n}\n\nexport async function clickOnContextMenu(selectorForNode: string, ctxMenuItemName: string) {\n  const node = await waitFor(selectorForNode);\n  await click(node, {clickOptions: {button: 'right'}});\n  const copyButton = await waitForAria(ctxMenuItemName);\n  await copyButton.click();\n}\n"]}