{"version":3,"file":"cors-private-network-issues_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/issues/cors-private-network-issues_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assertNotNullOrUndefined, getBrowserAndPages, goToResource} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {ensureResourceSectionIsExpanded, expandIssue, getIssueByTitle, getResourcesElement, navigateToIssuesTab, waitForTableFromResourceSectionContents} from '../helpers/issues-helpers.js';\n\ndescribe('Cors Private Network issue', async () => {\n  beforeEach(async () => {\n    await goToResource('empty.html');\n  });\n\n  it('should display correct information for insecure contexts', async () => {\n    await navigateToIssuesTab();\n    const {frontend} = getBrowserAndPages();\n    frontend.evaluate(() => {\n      const issue = {\n        code: 'CorsIssue',\n        details: {\n          corsIssueDetails: {\n            clientSecurityState: {\n              initiatorIsSecureContext: false,\n              initiatorIPAddressSpace: 'Public',\n              privateNetworkRequestPolicy: 'WarnFromInsecureToMorePrivate',\n            },\n            corsErrorStatus: {corsError: 'InsecurePrivateNetwork', failedParameter: ''},\n            isWarning: true,\n            request: {requestId: 'request-1', url: 'http://localhost/'},\n            resourceIPAddressSpace: 'Local',\n          },\n        },\n      };\n      // @ts-ignore\n      window.addIssueForTest(issue);\n      const issue2 = {\n        code: 'CorsIssue',\n        details: {\n          corsIssueDetails: {\n            clientSecurityState: {\n              initiatorIsSecureContext: false,\n              initiatorIPAddressSpace: 'Unknown',\n              privateNetworkRequestPolicy: 'WarnFromInsecureToMorePrivate',\n            },\n            corsErrorStatus: {corsError: 'InsecurePrivateNetwork', failedParameter: ''},\n            isWarning: true,\n            request: {requestId: 'request-1', url: 'http://example.com/'},\n            resourceIPAddressSpace: 'Local',\n          },\n        },\n      };\n      // @ts-ignore\n      window.addIssueForTest(issue2);\n    });\n\n    await expandIssue();\n    const issueElement = await getIssueByTitle('Ensure private network requests are made from secure contexts');\n    assertNotNullOrUndefined(issueElement);\n    const section = await getResourcesElement('2 requests', issueElement, '.cors-issue-affected-resource-label');\n    await ensureResourceSectionIsExpanded(section);\n\n    const expectedTableRows = [\n      [\n        'Request',\n        'Status',\n        'Resource Address',\n        'Initiator Address',\n        'Initiator Context',\n      ],\n      [\n        'localhost/',\n        'warning',\n        'Local',\n        'Public',\n        'insecure',\n      ],\n      [\n        'example.com/',\n        'warning',\n        'Local',\n        'Unknown',\n        'insecure',\n      ],\n    ];\n    await waitForTableFromResourceSectionContents(section.content, expectedTableRows);\n  });\n\n  it('should display correct information for secure contexts', async () => {\n    await navigateToIssuesTab();\n    const {frontend} = getBrowserAndPages();\n    frontend.evaluate(() => {\n      const issue = {\n        code: 'CorsIssue',\n        details: {\n          corsIssueDetails: {\n            clientSecurityState: {\n              initiatorIsSecureContext: true,\n              initiatorIPAddressSpace: 'Public',\n              privateNetworkRequestPolicy: 'WarnFromInsecureToMorePrivate',\n            },\n            corsErrorStatus: {corsError: 'InsecurePrivateNetwork', failedParameter: ''},\n            isWarning: true,\n            request: {requestId: 'request-1', url: 'http://localhost/'},\n            resourceIPAddressSpace: 'Local',\n          },\n        },\n      };\n      // @ts-ignore\n      window.addIssueForTest(issue);\n      const issue2 = {\n        code: 'CorsIssue',\n        details: {\n          corsIssueDetails: {\n            clientSecurityState: {\n              initiatorIsSecureContext: true,\n              initiatorIPAddressSpace: 'Unknown',\n              privateNetworkRequestPolicy: 'WarnFromInsecureToMorePrivate',\n            },\n            corsErrorStatus: {corsError: 'InsecurePrivateNetwork', failedParameter: ''},\n            isWarning: true,\n            request: {requestId: 'request-1', url: 'http://example.com/'},\n            resourceIPAddressSpace: 'Local',\n          },\n        },\n      };\n      // @ts-ignore\n      window.addIssueForTest(issue2);\n    });\n\n    await expandIssue();\n    const issueElement = await getIssueByTitle('Ensure private network requests are made from secure contexts');\n    assertNotNullOrUndefined(issueElement);\n    const section = await getResourcesElement('2 requests', issueElement, '.cors-issue-affected-resource-label');\n    await ensureResourceSectionIsExpanded(section);\n    const expectedTableRows = [\n      [\n        'Request',\n        'Status',\n        'Resource Address',\n        'Initiator Address',\n        'Initiator Context',\n      ],\n      [\n        'localhost/',\n        'warning',\n        'Local',\n        'Public',\n        'secure',\n      ],\n      [\n        'example.com/',\n        'warning',\n        'Local',\n        'Unknown',\n        'secure',\n      ],\n    ];\n    await waitForTableFromResourceSectionContents(section.content, expectedTableRows);\n  });\n\n  it('should display correct information for preflight request errors', async () => {\n    await navigateToIssuesTab();\n    const {frontend} = getBrowserAndPages();\n    frontend.evaluate(() => {\n      const issue = {\n        code: 'CorsIssue',\n        details: {\n          corsIssueDetails: {\n            clientSecurityState: {\n              initiatorIsSecureContext: true,\n              initiatorIPAddressSpace: 'Public',\n              privateNetworkRequestPolicy: 'PreflightBlock',\n            },\n            corsErrorStatus: {corsError: 'PreflightMissingAllowPrivateNetwork', failedParameter: ''},\n            isWarning: false,\n            request: {requestId: 'request-1', url: 'http://localhost/'},\n            resourceIPAddressSpace: 'Local',\n          },\n        },\n      };\n      // @ts-ignore\n      window.addIssueForTest(issue);\n      const issue2 = {\n        code: 'CorsIssue',\n        details: {\n          corsIssueDetails: {\n            clientSecurityState: {\n              initiatorIsSecureContext: true,\n              initiatorIPAddressSpace: 'Public',\n              privateNetworkRequestPolicy: 'PreflightBlock',\n            },\n            corsErrorStatus: {corsError: 'PreflightInvalidAllowPrivateNetwork', failedParameter: 'shouldBeTrue'},\n            isWarning: false,\n            request: {requestId: 'request-1', url: 'http://example.com/'},\n            resourceIPAddressSpace: 'Local',\n          },\n        },\n      };\n      // @ts-ignore\n      window.addIssueForTest(issue2);\n    });\n\n    await expandIssue();\n    const issueElement =\n        await getIssueByTitle('Ensure private network requests are only made to resources that allow them');\n    assertNotNullOrUndefined(issueElement);\n    const section = await getResourcesElement('2 requests', issueElement, '.cors-issue-affected-resource-label');\n    await ensureResourceSectionIsExpanded(section);\n    const expectedTableRows = [\n      [\n        'Request',\n        'Status',\n        'Preflight Request',\n        'Invalid Value (if available)',\n        'Initiator Address',\n        'Initiator Context',\n      ],\n      [\n        'localhost/',\n        'blocked',\n        'localhost/',\n        '',\n        'Public',\n        'secure',\n      ],\n      [\n        'example.com/',\n        'blocked',\n        'example.com/',\n        'shouldBeTrue',\n        'Public',\n        'secure',\n      ],\n    ];\n    await waitForTableFromResourceSectionContents(section.content, expectedTableRows);\n  });\n\n  it('should display correct information for failed preflight requests', async () => {\n    await navigateToIssuesTab();\n    const {frontend} = getBrowserAndPages();\n    frontend.evaluate(() => {\n      const issue = {\n        code: 'CorsIssue',\n        details: {\n          corsIssueDetails: {\n            clientSecurityState: {\n              initiatorIsSecureContext: true,\n              initiatorIPAddressSpace: 'Public',\n              privateNetworkRequestPolicy: 'PreflightWarn',\n            },\n            corsErrorStatus: {corsError: 'InvalidResponse', failedParameter: ''},\n            isWarning: true,\n            request: {requestId: 'request-1', url: 'http://localhost/'},\n            resourceIPAddressSpace: 'Local',\n          },\n        },\n      };\n      // @ts-ignore\n      window.addIssueForTest(issue);\n    });\n\n    await expandIssue();\n    const issueElement = await getIssueByTitle('Ensure preflight responses are valid');\n    assertNotNullOrUndefined(issueElement);\n    const section = await getResourcesElement('1 request', issueElement, '.cors-issue-affected-resource-label');\n    await ensureResourceSectionIsExpanded(section);\n    const expectedTableRows = [\n      [\n        'Request',\n        'Status',\n        'Preflight Request',\n        'Problem',\n      ],\n      [\n        'localhost/',\n        'warning',\n        'localhost/',\n        'Failed Request',\n      ],\n    ];\n    await waitForTableFromResourceSectionContents(section.content, expectedTableRows);\n  });\n});\n"]}