{"version":3,"file":"twa-issues_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/issues/twa-issues_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assertNotNullOrUndefined, getBrowserAndPages, goToResource} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {expandIssue, getIssueByTitle, getResourcesElement, navigateToIssuesTab, waitForTableFromResourceSectionContents} from '../helpers/issues-helpers.js';\n\ndescribe('Trusted Web Activity issue', async () => {\n  beforeEach(async () => {\n    await goToResource('empty.html');\n  });\n\n  it('should display correct information for type kHttpError', async () => {\n    await navigateToIssuesTab();\n    const {frontend} = getBrowserAndPages();\n    frontend.evaluate(() => {\n      const issue = {\n        'code': 'TrustedWebActivityIssue',\n        'details': {\n          'twaQualityEnforcementDetails': {\n            'url': 'test1.example.com',\n            'violationType': 'kHttpError',\n            'httpStatusCode': 404,\n          },\n        },\n      };\n      // @ts-ignore\n      window.addIssueForTest(issue);\n    });\n    await expandIssue();\n    const issueElement = await getIssueByTitle(\n        'Trusted Web Activity navigations must succeed or be handled by the ServiceWorker. Your app may crash in the future.');\n    assertNotNullOrUndefined(issueElement);\n    const section = await getResourcesElement('1 resource', issueElement);\n    const expectedTableRows = [\n      ['Status code', 'Url'],\n      ['404', 'test1.example.com'],\n    ];\n    await waitForTableFromResourceSectionContents(section.content, expectedTableRows);\n  });\n\n  it('should display correct information for type kUnavailableOffline', async () => {\n    await navigateToIssuesTab();\n    const {frontend} = getBrowserAndPages();\n    frontend.evaluate(() => {\n      const issue = {\n        'code': 'TrustedWebActivityIssue',\n        'details': {\n          'twaQualityEnforcementDetails': {\n            'url': 'test2.example.com',\n            'violationType': 'kUnavailableOffline',\n          },\n        },\n      };\n      // @ts-ignore\n      window.addIssueForTest(issue);\n    });\n    await expandIssue();\n    const issueElement = await getIssueByTitle(\n        'Trusted Web Activity does not work offline. In the future, your app may crash if the userâ€™s device goes offline.');\n    assertNotNullOrUndefined(issueElement);\n    const section = await getResourcesElement('1 resource', issueElement);\n    const expectedTableRows = [\n      ['Url'],\n      ['test2.example.com'],\n    ];\n    await waitForTableFromResourceSectionContents(section.content, expectedTableRows);\n  });\n\n  it('should display correct information for type kDigitalAssetLinks', async () => {\n    await navigateToIssuesTab();\n    const {frontend} = getBrowserAndPages();\n    frontend.evaluate(() => {\n      const issue = {\n        'code': 'TrustedWebActivityIssue',\n        'details': {\n          'twaQualityEnforcementDetails': {\n            'url': 'test3.example.com',\n            'violationType': 'kDigitalAssetLinks',\n            'packageName': 'test.package',\n            'signature': '1A:2B:3C',\n          },\n        },\n      };\n      // @ts-ignore\n      window.addIssueForTest(issue);\n    });\n    await expandIssue();\n    const issueElement = await getIssueByTitle(\n        'Digital asset links of the Trusted Web Activity failed verification. Your app may crash in the future.');\n    assertNotNullOrUndefined(issueElement);\n    const section = await getResourcesElement('1 resource', issueElement);\n    const expectedTableRows = [\n      ['Package name', 'Url', 'Package signature'],\n      ['test.package', 'test3.example.com', '1A:2B:3C'],\n    ];\n    await waitForTableFromResourceSectionContents(section.content, expectedTableRows);\n  });\n});\n"]}