{"version":3,"file":"group-by-categories_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/issues/group-by-categories_test.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;;AAE7B,sDAAoD;AACpD,0EAA8D;AAC9D,oEAAsL;AAEtL,IAAA,8BAAQ,EAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;IACxD,IAAA,wBAAE,EAAC,2DAA2D,EAAE,KAAK,IAAI,EAAE;QACzE,MAAM,IAAA,wBAAY,EAAC,2CAA2C,CAAC,CAAC;QAChE,MAAM,IAAA,uCAAmB,GAAE,CAAC;QAE5B,IAAI,CAAC,MAAM,IAAA,6CAAyB,GAAE,EAAE;YACtC,MAAM,IAAA,yCAAqB,GAAE,CAAC;SAC/B;QAED,MAAM,IAAA,kCAAc,GAAE,CAAC;QACvB,MAAM,IAAA,sCAAkB,EAAC,yBAAyB,CAAC,CAAC;QACpD,MAAM,IAAA,+BAAW,GAAE,CAAC;QACpB,MAAM,IAAA,oCAAgB,EAAC,4EAA4E,CAAC,CAAC;IACvG,CAAC,CAAC,CAAC;IAEH,IAAA,wBAAE,EAAC,mDAAmD,EAAE,KAAK,IAAI,EAAE;QACjE,MAAM,IAAA,wBAAY,EAAC,2CAA2C,CAAC,CAAC;QAChE,MAAM,IAAA,uCAAmB,GAAE,CAAC;QAE5B,IAAI,MAAM,IAAA,6CAAyB,GAAE,EAAE;YACrC,MAAM,IAAA,yCAAqB,GAAE,CAAC;SAC/B;QAED,MAAM,IAAA,+BAAW,GAAE,CAAC;QACpB,MAAM,IAAA,oCAAgB,EAAC,4EAA4E,CAAC,CAAC;IACvG,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {goToResource} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {assertCategoryName, assertIssueTitle, expandCategory, expandIssue, getGroupByCategoryChecked, navigateToIssuesTab, toggleGroupByCategory} from '../helpers/issues-helpers.js';\n\ndescribe('The Issues tab categories checkbox', async () => {\n  it('should group issues by associated categories when checked', async () => {\n    await goToResource('elements/element-reveal-inline-issue.html');\n    await navigateToIssuesTab();\n\n    if (!await getGroupByCategoryChecked()) {\n      await toggleGroupByCategory();\n    }\n\n    await expandCategory();\n    await assertCategoryName('Content Security Policy');\n    await expandIssue();\n    await assertIssueTitle('Content Security Policy blocks inline execution of scripts and stylesheets');\n  });\n\n  it('should use a flat list of issues when not checked', async () => {\n    await goToResource('elements/element-reveal-inline-issue.html');\n    await navigateToIssuesTab();\n\n    if (await getGroupByCategoryChecked()) {\n      await toggleGroupByCategory();\n    }\n\n    await expandIssue();\n    await assertIssueTitle('Content Security Policy blocks inline execution of scripts and stylesheets');\n  });\n});\n"]}