{"version":3,"file":"group-by-kind_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/issues/group-by-kind_test.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;;AAE7B,+BAA4B;AAE5B,sDAAyG;AACzG,0EAA8D;AAC9D,oEAA8H;AAE9H,IAAA,8BAAQ,EAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;IAC3D,IAAA,wBAAE,EAAC,sDAAsD,EAAE,KAAK,IAAI,EAAE;QACpE,MAAM,IAAA,4BAAgB,EAAC,0BAA0B,CAAC,CAAC;QACnD,MAAM,IAAA,wBAAY,EAAC,2CAA2C,CAAC,CAAC;QAChE,MAAM,IAAA,uCAAmB,GAAE,CAAC;QAE5B,IAAI,CAAC,MAAM,IAAA,yCAAqB,GAAE,EAAE;YAClC,MAAM,IAAA,qCAAiB,GAAE,CAAC;SAC3B;QAED,MAAM,IAAA,8BAAU,EAAC,cAAc,CAAC,CAAC;QACjC,MAAM,KAAK,GAAG,MAAM,IAAA,mBAAO,EAAC,yBAAK,CAAC,CAAC;QACnC,MAAM,gBAAgB,GAAG,MAAM,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE,SAAS,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,CAAC;QACjH,IAAA,oCAAwB,EAAC,gBAAgB,CAAC,CAAC;QAC3C,aAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IAEH,IAAA,wBAAE,EAAC,yDAAyD,EAAE,KAAK,IAAI,EAAE;QACvE,MAAM,IAAA,4BAAgB,EAAC,0BAA0B,CAAC,CAAC;QACnD,MAAM,IAAA,wBAAY,EAAC,2CAA2C,CAAC,CAAC;QAChE,MAAM,IAAA,uCAAmB,GAAE,CAAC;QAE5B,IAAI,MAAM,IAAA,yCAAqB,GAAE,EAAE;YACjC,MAAM,IAAA,qCAAiB,GAAE,CAAC;SAC3B;QAED,MAAM,KAAK,GAAG,MAAM,IAAA,mBAAO,EAAC,yBAAK,CAAC,CAAC;QACnC,MAAM,gBAAgB,GAAG,MAAM,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE,SAAS,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,CAAC;QACjH,IAAA,oCAAwB,EAAC,gBAAgB,CAAC,CAAC;QAC3C,aAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {assertNotNullOrUndefined, enableExperiment, goToResource, waitFor} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {expandKind, getGroupByKindChecked, ISSUE, navigateToIssuesTab, toggleGroupByKind} from '../helpers/issues-helpers.js';\n\ndescribe('The Issues tab group by kind checkbox', async () => {\n  it('should group issues by associated kinds when checked', async () => {\n    await enableExperiment('groupAndHideIssuesByKind');\n    await goToResource('elements/element-reveal-inline-issue.html');\n    await navigateToIssuesTab();\n\n    if (!await getGroupByKindChecked()) {\n      await toggleGroupByKind();\n    }\n\n    await expandKind('.page-errors');\n    const issue = await waitFor(ISSUE);\n    const isParentedByKind = await issue.evaluate(node => node.parentElement?.classList.contains('issue-kind-body'));\n    assertNotNullOrUndefined(isParentedByKind);\n    assert.isTrue(isParentedByKind);\n  });\n\n  it('should display issues in the issueTree when not checked', async () => {\n    await enableExperiment('groupAndHideIssuesByKind');\n    await goToResource('elements/element-reveal-inline-issue.html');\n    await navigateToIssuesTab();\n\n    if (await getGroupByKindChecked()) {\n      await toggleGroupByKind();\n    }\n\n    const issue = await waitFor(ISSUE);\n    const isParentedByKind = await issue.evaluate(node => node.parentElement?.classList.contains('issue-kind-body'));\n    assertNotNullOrUndefined(isParentedByKind);\n    assert.isFalse(isParentedByKind);\n  });\n});\n"]}