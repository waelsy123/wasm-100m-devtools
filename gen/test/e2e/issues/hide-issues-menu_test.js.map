{"version":3,"file":"hide-issues-menu_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/issues/hide-issues-menu_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {$$, assertNotNullOrUndefined, enableExperiment, getBrowserAndPages, goToResource, waitFor} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {getGroupByKindChecked, getHiddenIssuesRow, getHiddenIssuesRowBody, getHideIssuesMenu, getHideIssuesMenuItem, getIssueHeaderByTitle, getUnhideAllIssuesBtn, getUnhideIssuesMenuItem, ISSUE, navigateToIssuesTab, toggleGroupByKind} from '../helpers/issues-helpers.js';\n\ndescribe('Hide issues menu', async () => {\n  it('should be appended to the issue header', async () => {\n    await goToResource('issues/cross-origin-portal-post.html');\n    await navigateToIssuesTab();\n    const issueTitle = 'Cross-origin portal post messages are blocked on your site';\n    const issueHeader = await getIssueHeaderByTitle(issueTitle);\n    assertNotNullOrUndefined(issueHeader);\n    const hideIssuesMenu = await getHideIssuesMenu();\n    const menuDisplay =\n        await hideIssuesMenu.evaluate(node => window.getComputedStyle(node as HTMLElement).getPropertyValue('display'));\n    assert.strictEqual(menuDisplay, 'none');\n  });\n\n  it('should become visible on hovering over the issue header', async () => {\n    const {frontend} = getBrowserAndPages();\n    frontend.evaluate(() => {\n      const issue = {\n        'code': 'HeavyAdIssue',\n        'details': {\n          'heavyAdIssueDetails': {\n            'resolution': 'HeavyAdBlocked',\n            'reason': 'NetworkTotalLimit',\n            'frame': {frameId: 'main'},\n          },\n        },\n      };\n      // @ts-ignore\n      window.addIssueForTest(issue);\n    });\n    await navigateToIssuesTab();\n    const issueTitle = 'An ad on your site has exceeded resource limits';\n    const issueHeader = await getIssueHeaderByTitle(issueTitle);\n    assertNotNullOrUndefined(issueHeader);\n    const hideIssuesMenu = await getHideIssuesMenu();\n    let menuDisplay =\n        await hideIssuesMenu.evaluate(node => window.getComputedStyle(node as HTMLElement).getPropertyValue('display'));\n    assert.strictEqual(menuDisplay, 'none');\n    await issueHeader.hover();\n    menuDisplay =\n        await hideIssuesMenu.evaluate(node => window.getComputedStyle(node as HTMLElement).getPropertyValue('display'));\n    assert.strictEqual(menuDisplay, 'block');\n  });\n\n  it('should open a context menu upon clicking', async () => {\n    await goToResource('empty.html');\n    const {target} = getBrowserAndPages();\n    await target.evaluate(async () => {\n      try {\n        const url = new URL('./issues/origin-wildcard.rawresponse', document.location.toString())\n                        .toString()\n                        .replace('localhost', 'devtools.oopif.test');\n        await fetch(url, {credentials: 'include'});\n      } catch (e) {\n      }\n    });\n    await navigateToIssuesTab();\n    const issueTitle = 'Ensure credentialed requests are not sent to CORS resources with origin wildcards';\n    const issueHeader = await getIssueHeaderByTitle(issueTitle);\n    assertNotNullOrUndefined(issueHeader);\n    await issueHeader.hover();\n    const hideIssuesMenu = await getHideIssuesMenu();\n    await hideIssuesMenu.click();\n    const menuItem = await getHideIssuesMenuItem();\n    assertNotNullOrUndefined(menuItem);\n    const content = await menuItem.evaluate(node => node.textContent);\n    assertNotNullOrUndefined(content);\n    assert.include(content, 'Hide issues like this');\n  });\n\n  it('should hide issue upon clicking the context menu entry', async () => {\n    await goToResource('issues/cross-origin-portal-post.html');\n    await navigateToIssuesTab();\n\n    const issueTitle = 'Cross-origin portal post messages are blocked on your site';\n    const issueHeader = await getIssueHeaderByTitle(issueTitle);\n    assertNotNullOrUndefined(issueHeader);\n    await issueHeader.hover();\n    const hideIssuesMenuBtn = await getHideIssuesMenu();\n    await hideIssuesMenuBtn.click();\n    const menuItem = await getHideIssuesMenuItem();\n    assertNotNullOrUndefined(menuItem);\n    await waitFor(ISSUE);\n    await menuItem.click();\n    await waitFor('.hidden-issue');\n  });\n\n  it('should unhide all issues upon clicking unhide all issues button', async () => {\n    await goToResource('issues/cross-origin-portal-post.html');\n    await navigateToIssuesTab();\n    const issueTitle = 'Cross-origin portal post messages are blocked on your site';\n    const issueHeader = await getIssueHeaderByTitle(issueTitle);\n    assertNotNullOrUndefined(issueHeader);\n    await issueHeader.hover();\n    const hideIssuesMenuBtn = await getHideIssuesMenu();\n    await hideIssuesMenuBtn.click();\n    const menuItem = await getHideIssuesMenuItem();\n    assertNotNullOrUndefined(menuItem);\n    await menuItem.click();\n    await waitFor('.hidden-issue');\n    const btn = await getUnhideAllIssuesBtn();\n    await btn.click();\n    await waitFor(ISSUE);\n  });\n\n  it('should contain unhide issues like this entry while hovering over a hidden issue', async () => {\n    await goToResource('issues/cross-origin-portal-post.html');\n    await navigateToIssuesTab();\n    const issueTitle = 'Cross-origin portal post messages are blocked on your site';\n    const issueHeader = await getIssueHeaderByTitle(issueTitle);\n    assertNotNullOrUndefined(issueHeader);\n    await issueHeader.hover();\n    let hideIssuesMenuBtn = await getHideIssuesMenu();\n    await hideIssuesMenuBtn.click();\n    const menuItem = await getHideIssuesMenuItem();\n    assertNotNullOrUndefined(menuItem);\n    await menuItem.click();\n    await waitFor('.hidden-issue');\n    const row = await getHiddenIssuesRow();\n    let isHidden = await row?.evaluate(node => node.classList.contains('hidden'));\n    assert.isFalse(isHidden);\n    await row?.click();\n    const body = await getHiddenIssuesRowBody();\n    isHidden = await body?.evaluate(node => node.classList.contains('hidden'));\n    assert.isFalse(isHidden);\n    const hiddenIssueHeader = await getIssueHeaderByTitle(issueTitle);\n    assertNotNullOrUndefined(hiddenIssueHeader);\n    await hiddenIssueHeader.hover();\n    hideIssuesMenuBtn = await getHideIssuesMenu();\n    await hideIssuesMenuBtn.click();\n    await getUnhideIssuesMenuItem();\n  });\n\n  it('should unhide issue after clicking the unhide issues like this entry', async () => {\n    await goToResource('issues/cross-origin-portal-post.html');\n    await navigateToIssuesTab();\n    const issueTitle = 'Cross-origin portal post messages are blocked on your site';\n    const issueHeader = await getIssueHeaderByTitle(issueTitle);\n    assertNotNullOrUndefined(issueHeader);\n    await issueHeader.hover();\n    let hideIssuesMenuBtn = await getHideIssuesMenu();\n    await hideIssuesMenuBtn.click();\n    const menuItem = await getHideIssuesMenuItem();\n    assertNotNullOrUndefined(menuItem);\n    await menuItem.click();\n    await waitFor('.hidden-issue');\n    const row = await getHiddenIssuesRow();\n    let isHidden = await row?.evaluate(node => node.classList.contains('hidden'));\n    assert.isFalse(isHidden);\n    await row?.click();\n    const body = await getHiddenIssuesRowBody();\n    isHidden = await body?.evaluate(node => node.classList.contains('hidden'));\n    assert.isFalse(isHidden);\n    const hiddenIssueHeader = await getIssueHeaderByTitle(issueTitle);\n    assertNotNullOrUndefined(hiddenIssueHeader);\n    await hiddenIssueHeader.hover();\n    hideIssuesMenuBtn = await getHideIssuesMenu();\n    await hideIssuesMenuBtn.click();\n    const unhideMenuItem = await getUnhideIssuesMenuItem();\n    await unhideMenuItem?.click();\n    await waitFor(ISSUE);\n  });\n});\n\ndescribe('After enabling grouping by IssueKind, Hide issues menu', async () => {\n  beforeEach(async () => {\n    await enableExperiment('groupAndHideIssuesByKind');\n  });\n\n  it('should be appended to the issue kinds group header', async () => {\n    await goToResource('elements/element-reveal-inline-issue.html');\n    await navigateToIssuesTab();\n    if (!await getGroupByKindChecked()) {\n      await toggleGroupByKind();\n    }\n    await waitFor('.issue-kind');\n    await (await waitFor('.issue-kind .header')).hover();\n    const hideIssuesMenu = await waitFor('.hide-available-issues');\n    assert.isNotNull(hideIssuesMenu);\n  });\n\n  it('should hide all available issues upon click menu entry', async () => {\n    await goToResource('elements/element-reveal-inline-issue.html');\n    await navigateToIssuesTab();\n    if (!await getGroupByKindChecked()) {\n      await toggleGroupByKind();\n    }\n    await waitFor('.issue-kind');\n    assert.isEmpty(await $$('.hidden-issue'));\n    await (await waitFor('.issue-kind .header')).hover();\n    const hideIssuesMenu = await waitFor('.hide-available-issues');\n    await hideIssuesMenu.click();\n    const menuItem = await waitFor('[aria-label=\"Hide all current Page Errors\"]');\n    await menuItem.click();\n    await waitFor('.hidden-issue');\n  });\n});\n"]}