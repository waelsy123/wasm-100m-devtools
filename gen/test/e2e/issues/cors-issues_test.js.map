{"version":3,"file":"cors-issues_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/issues/cors-issues_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {assertNotNullOrUndefined, getBrowserAndPages, goToResource} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {ensureResourceSectionIsExpanded, expandIssue, getIssueByTitle, getResourcesElement, navigateToIssuesTab, waitForTableFromResourceSectionContents} from '../helpers/issues-helpers.js';\n\ndescribe('CORS issues', async () => {\n  it('should display CORS violations with the correct affected resources', async () => {\n    await goToResource('issues/cors-issue.html');\n    const {target} = getBrowserAndPages();\n    await target.evaluate(async () => {\n      // @ts-ignore\n      await window.doCorsFetches(`https://devtools.oopif.test:${document.location.port}`);\n    });\n    await navigateToIssuesTab();\n    await expandIssue();\n    const issueElement = await getIssueByTitle('Ensure CORS response header values are valid');\n    assertNotNullOrUndefined(issueElement);\n    const section = await getResourcesElement('requests', issueElement, '.cors-issue-affected-resource-label');\n    const text = await section.label.evaluate(el => el.textContent);\n    assert.strictEqual(text, '3 requests');\n    await ensureResourceSectionIsExpanded(section);\n    const expectedTableRows = [\n      [\n        'Request',\n        'Status',\n        'Preflight Request (if problematic)',\n        'Header',\n        'Problem',\n        'Invalid Value (if available)',\n      ],\n      [\n        /^devtools.oopif.test:.*/,\n        'blocked',\n        '',\n        'Access-Control-Allow-Origin',\n        'Missing Header',\n        '',\n      ],\n      [\n        /^devtools.oopif.test:.*/,\n        'blocked',\n        /^devtools.oopif.test:.*/,\n        'Access-Control-Allow-Origin',\n        'Missing Header',\n        '',\n      ],\n      [\n        /.*invalid-preflight.*/,\n        'blocked',\n        /.*invalid-preflight.*/,\n        'Access-Control-Allow-Origin',\n        'Missing Header',\n        '',\n      ],\n    ];\n    await waitForTableFromResourceSectionContents(section.content, expectedTableRows);\n  });\n\n  it('should display credentialed+wildcard CORS issues with the correct affected resources', async () => {\n    await goToResource('empty.html');\n    const {target} = getBrowserAndPages();\n    await target.evaluate(async () => {\n      try {\n        const url = new URL('./issues/origin-wildcard.rawresponse', document.location.toString())\n                        .toString()\n                        .replace('localhost', 'devtools.oopif.test');\n        await fetch(url, {credentials: 'include'});\n      } catch (e) {\n      }\n    });\n    await navigateToIssuesTab();\n    await expandIssue();\n    const issueElement =\n        await getIssueByTitle('Ensure credentialed requests are not sent to CORS resources with origin wildcards');\n    assertNotNullOrUndefined(issueElement);\n    const section = await getResourcesElement('request', issueElement, '.cors-issue-affected-resource-label');\n    const text = await section.label.evaluate(el => el.textContent);\n    assert.strictEqual(text, '1 request');\n    await ensureResourceSectionIsExpanded(section);\n    const expectedTableRows = [\n      [\n        'Request',\n        'Status',\n        'Preflight Request (if problematic)',\n      ],\n      [\n        'origin-wildcard.rawresponse',\n        'blocked',\n        '',\n      ],\n    ];\n    await waitForTableFromResourceSectionContents(section.content, expectedTableRows);\n  });\n\n  it('should display invalid CORS preflight response codes with the correct affected resources', async () => {\n    await goToResource('empty.html');\n    const {target} = getBrowserAndPages();\n    await target.evaluate(async () => {\n      const options = {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({geeting: 'hello'}),\n      };\n      try {\n        const url = new URL('./issues/invalid-response-code.rawresponse', document.location.toString())\n                        .toString()\n                        .replace('localhost', 'devtools.oopif.test');\n        await fetch(url, options);\n      } catch (e) {\n      }\n      try {\n        const url2 = new URL('./issues/redirect.rawresponse', document.location.toString())\n                         .toString()\n                         .replace('localhost', 'devtools.oopif.test');\n        await fetch(url2, options);\n      } catch (e) {\n      }\n    });\n    await navigateToIssuesTab();\n    await expandIssue();\n    const issueElement = await getIssueByTitle('Ensure preflight responses are valid');\n    assertNotNullOrUndefined(issueElement);\n    const section = await getResourcesElement('requests', issueElement, '.cors-issue-affected-resource-label');\n    const text = await section.label.evaluate(el => el.textContent);\n    assert.strictEqual(text, '2 requests');\n    await ensureResourceSectionIsExpanded(section);\n    const expectedTableRows = [\n      [\n        'Request',\n        'Status',\n        'Preflight Request',\n        'Problem',\n      ],\n      [\n        'invalid-response-code.rawresponse',\n        'blocked',\n        'invalid-response-code.rawresponse',\n        'HTTP status of preflight request didn\\'t indicate success',\n      ],\n      [\n        'redirect.rawresponse',\n        'blocked',\n        'redirect.rawresponse',\n        'Response to preflight was a redirect',\n      ],\n    ];\n    await waitForTableFromResourceSectionContents(section.content, expectedTableRows);\n  });\n\n  it('should display CORS ACAO mismatches with the correct affected resources', async () => {\n    await goToResource('empty.html');\n    const {target} = getBrowserAndPages();\n    await target.evaluate(async () => {\n      const options = {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({geeting: 'hello'}),\n      };\n      const url = new URL('./issues/acao-mismatch.rawresponse', document.location.toString())\n                      .toString()\n                      .replace('localhost', 'devtools.oopif.test');\n      try {\n        await fetch(url, options);\n      } catch (e) {\n      }\n      try {\n        await fetch(url);\n      } catch (e) {\n      }\n    });\n    await navigateToIssuesTab();\n    await expandIssue();\n    const issueElement = await getIssueByTitle('Ensure CORS requesting origin matches resource\\'s allowed origin');\n    assertNotNullOrUndefined(issueElement);\n    const section = await getResourcesElement('requests', issueElement, '.cors-issue-affected-resource-label');\n    const text = await section.label.evaluate(el => el.textContent);\n    assert.strictEqual(text, '2 requests');\n    await ensureResourceSectionIsExpanded(section);\n    const expectedTableRows = [\n      [\n        'Request',\n        'Status',\n        'Preflight Request (if problematic)',\n        'Initiator Context',\n        'Allowed Origin (from header)',\n      ],\n      [\n        'acao-mismatch.rawresponse',\n        'blocked',\n        'acao-mismatch.rawresponse',\n        /^https:\\/\\/localhost.*/,\n        'https://devtools.oopif.test',\n      ],\n      [\n        'acao-mismatch.rawresponse',\n        'blocked',\n        '',\n        /^https:\\/\\/localhost.*/,\n        'https://devtools.oopif.test',\n      ],\n    ];\n    await waitForTableFromResourceSectionContents(section.content, expectedTableRows);\n  });\n\n  it('should display invalid CORS ACAC values with the correct affected resources', async () => {\n    await goToResource('empty.html');\n    const {target} = getBrowserAndPages();\n    await target.evaluate(async () => {\n      const url = new URL('./issues/acac-invalid.rawresponse', document.location.toString())\n                      .toString()\n                      .replace('localhost', 'devtools.oopif.test');\n      try {\n        await fetch(url, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({geeting: 'hello'}),\n        });\n      } catch (e) {\n      }\n      try {\n        await fetch(url, {credentials: 'include'});\n      } catch (e) {\n      }\n    });\n    await navigateToIssuesTab();\n    await expandIssue();\n    const issueElement = await getIssueByTitle('Ensure CORS requests include credentials only when allowed');\n    assertNotNullOrUndefined(issueElement);\n    const section = await getResourcesElement('requests', issueElement, '.cors-issue-affected-resource-label');\n    const text = await section.label.evaluate(el => el.textContent);\n    assert.strictEqual(text, '2 requests');\n    await ensureResourceSectionIsExpanded(section);\n    const expectedTableRows = [\n      [\n        'Request',\n        'Status',\n        'Preflight Request (if problematic)',\n        'Access-Control-Allow-Credentials Header Value',\n      ],\n      [\n        'acac-invalid.rawresponse',\n        'blocked',\n        'acac-invalid.rawresponse',\n        'false',\n      ],\n      [\n        'acac-invalid.rawresponse',\n        'blocked',\n        '',\n        'false',\n      ],\n    ];\n    await waitForTableFromResourceSectionContents(section.content, expectedTableRows);\n  });\n\n  it('should display CORS requests using disallowed methods with the correct affected resources', async () => {\n    await goToResource('empty.html');\n    const {target} = getBrowserAndPages();\n    await target.evaluate(async () => {\n      try {\n        const url = new URL('./issues/method-disallowed.rawresponse', document.location.toString())\n                        .toString()\n                        .replace('localhost', 'devtools.oopif.test');\n        await fetch(url, {\n          method: 'PUT',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({geeting: 'hello'}),\n        });\n      } catch (e) {\n      }\n    });\n    await navigateToIssuesTab();\n    await expandIssue();\n    const issueElement = await getIssueByTitle('Ensure CORS request uses allowed method');\n    assertNotNullOrUndefined(issueElement);\n    const section = await getResourcesElement('request', issueElement, '.cors-issue-affected-resource-label');\n    const text = await section.label.evaluate(el => el.textContent);\n    assert.strictEqual(text, '1 request');\n    await ensureResourceSectionIsExpanded(section);\n    const expectedTableRows = [\n      [\n        'Request',\n        'Status',\n        'Preflight Request',\n        'Disallowed Request Method',\n      ],\n      [\n        'method-disallowed.rawresponse',\n        'blocked',\n        'method-disallowed.rawresponse',\n        'PUT',\n      ],\n    ];\n    await waitForTableFromResourceSectionContents(section.content, expectedTableRows);\n  });\n\n  it('should display CORS requests using disallowed headers with the correct affected resources', async () => {\n    await goToResource('empty.html');\n    const {target} = getBrowserAndPages();\n    await target.evaluate(async () => {\n      try {\n        // We can re-use `method-disallowed.rawresponse` for this test.\n        const url = new URL('./issues/method-disallowed.rawresponse', document.location.toString())\n                        .toString()\n                        .replace('localhost', 'devtools.oopif.test');\n        await fetch(url, {\n          headers: {'X-Foo': 'bar'},\n        });\n      } catch (e) {\n      }\n    });\n    await navigateToIssuesTab();\n    await expandIssue();\n    const issueElement = await getIssueByTitle('Ensure CORS request includes only allowed headers');\n    assertNotNullOrUndefined(issueElement);\n    const section = await getResourcesElement('request', issueElement, '.cors-issue-affected-resource-label');\n    const text = await section.label.evaluate(el => el.textContent);\n    assert.strictEqual(text, '1 request');\n    await ensureResourceSectionIsExpanded(section);\n\n    const expectedTableRows = [\n      [\n        'Request',\n        'Status',\n        'Preflight Request',\n        'Disallowed Request Header',\n      ],\n      [\n        'method-disallowed.rawresponse',\n        'blocked',\n        'method-disallowed.rawresponse',\n        'x-foo',\n      ],\n    ];\n    await waitForTableFromResourceSectionContents(section.content, expectedTableRows);\n  });\n\n  it('should display CORS requests redirecting to credentialed URLs', async () => {\n    await goToResource('empty.html');\n    const {target} = getBrowserAndPages();\n    await target.evaluate(async () => {\n      try {\n        const url = new URL('./issues/credentialed-redirect.rawresponse', document.location.toString())\n                        .toString()\n                        .replace('localhost', 'devtools.oopif.test');\n        await fetch(url);\n      } catch (e) {\n      }\n    });\n    await navigateToIssuesTab();\n    await expandIssue();\n    const issueElement =\n        await getIssueByTitle('Ensure CORS requests are not redirected to URLs containing credentials');\n    assertNotNullOrUndefined(issueElement);\n    const section = await getResourcesElement('request', issueElement, '.cors-issue-affected-resource-label');\n    const text = await section.label.evaluate(el => el.textContent);\n    assert.strictEqual(text, '1 request');\n    await ensureResourceSectionIsExpanded(section);\n    const expectedTableRows = [\n      [\n        'Request',\n        'Status',\n      ],\n      [\n        'credentialed-redirect.rawresponse',\n        'blocked',\n      ],\n    ];\n    await waitForTableFromResourceSectionContents(section.content, expectedTableRows);\n  });\n\n  it('should display CORS issues that are disallowed by the mode', async () => {\n    await goToResource('empty.html');\n    const {target} = getBrowserAndPages();\n    await target.evaluate(async () => {\n      try {\n        const url = new URL('/', document.location.toString()).toString().replace('localhost', 'devtools.oopif.test');\n        await fetch(url, {mode: 'same-origin'});\n      } catch (e) {\n      }\n    });\n    await navigateToIssuesTab();\n    await expandIssue();\n    const issueElement =\n        await getIssueByTitle('Ensure only same-origin resources are fetched with same-origin request mode');\n    assertNotNullOrUndefined(issueElement);\n    const section = await getResourcesElement('request', issueElement, '.cors-issue-affected-resource-label');\n    const text = await section.label.evaluate(el => el.textContent);\n    assert.strictEqual(text, '1 request');\n    await ensureResourceSectionIsExpanded(section);\n    const expectedTableRows = [\n      [\n        'Request',\n        'Status',\n        'Initiator Context',\n        'Source Location',\n      ],\n      [\n        /^devtools.oopif.test.*\\//,\n        'blocked',\n        /^https:\\/\\/localhost.*/,\n        /.*:\\d+/,\n      ],\n    ];\n    await waitForTableFromResourceSectionContents(section.content, expectedTableRows);\n  });\n\n  it('should display CORS issues that are unsupported by the scheme', async () => {\n    await goToResource('empty.html');\n    const {target} = getBrowserAndPages();\n    await target.evaluate(async () => {\n      try {\n        const url = new URL('/', document.location.toString())\n                        .toString()\n                        .replace('https://localhost', 'webdav://devtools.oopif.test');\n        await fetch(url);\n      } catch (e) {\n      }\n    });\n    await navigateToIssuesTab();\n    await expandIssue();\n    const issueElement = await getIssueByTitle('Ensure CORS requests are made on supported schemes');\n    assertNotNullOrUndefined(issueElement);\n    const section = await getResourcesElement('request', issueElement, '.cors-issue-affected-resource-label');\n    const text = await section.label.evaluate(el => el.textContent);\n    assert.strictEqual(text, '1 request');\n    await ensureResourceSectionIsExpanded(section);\n    const expectedTableRows = [\n      [\n        'Request',\n        'Status',\n        'Initiator Context',\n        'Source Location',\n        'Unsupported Scheme',\n      ],\n      [\n        /^devtools.oopif.test.*\\//,\n        'blocked',\n        /^https:\\/\\/localhost.*/,\n        /.*:\\d+/,\n        'webdav',\n      ],\n    ];\n    await waitForTableFromResourceSectionContents(section.content, expectedTableRows);\n  });\n\n  it('should display CORS issues that are misconfiguring the redirect mode', async () => {\n    await goToResource('empty.html');\n    const {target} = getBrowserAndPages();\n    await target.evaluate(async () => {\n      try {\n        const url = new URL('/', document.location.toString())\n                        .toString()\n                        .replace('https://localhost', 'webdav://devtools.oopif.test');\n        await fetch(url, {mode: 'no-cors', redirect: 'manual'});\n      } catch (e) {\n      }\n    });\n    await navigateToIssuesTab();\n    await expandIssue();\n    const issueElement = await getIssueByTitle('Ensure no-cors requests configure redirect mode follow');\n    assertNotNullOrUndefined(issueElement);\n    const section = await getResourcesElement('request', issueElement, '.cors-issue-affected-resource-label');\n    const text = await section.label.evaluate(el => el.textContent);\n    assert.strictEqual(text, '1 request');\n    await ensureResourceSectionIsExpanded(section);\n    const expectedTableRows = [\n      [\n        'Request',\n        'Status',\n        'Source Location',\n      ],\n      [\n        /^devtools.oopif.test.*\\//,\n        'blocked',\n        /.*:\\d+/,\n      ],\n    ];\n    await waitForTableFromResourceSectionContents(section.content, expectedTableRows);\n  });\n});\n"]}