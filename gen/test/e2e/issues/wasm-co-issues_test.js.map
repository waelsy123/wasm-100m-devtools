{"version":3,"file":"wasm-co-issues_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/issues/wasm-co-issues_test.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;;AAE7B,+BAA4B;AAE5B,sDAA4F;AAC5F,0EAA8D;AAC9D,oEAA8L;AAE9L,IAAA,8BAAQ,EAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;IACrD,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,MAAM,IAAA,sCAA0B,EAAC,iBAAiB,EAAE,6BAA6B,CAAC,CAAC;IACrF,CAAC,CAAC,CAAC;IAEH,mDAAmD;IACnD,wBAAE,CAAC,IAAI,CAAC,2EAA2E,EAAE,KAAK,IAAI,EAAE;QAC9F,MAAM,IAAA,uCAAmB,GAAE,CAAC;QAC5B,MAAM,IAAA,+BAAW,GAAE,CAAC;QACpB,MAAM,YAAY,GAAG,MAAM,IAAA,mCAAe,EAAC,iEAAiE,CAAC,CAAC;QAC9G,IAAA,oCAAwB,EAAC,YAAY,CAAC,CAAC;QACvC,MAAM,OAAO,GAAG,MAAM,IAAA,uCAAmB,EAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;QAClE,MAAM,IAAI,GAAG,MAAM,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;QAChE,aAAM,CAAC,WAAW,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QACrC,MAAM,IAAA,mDAA+B,EAAC,OAAO,CAAC,CAAC;QAC/C,MAAM,iBAAiB,GAAG;YACxB;gBACE,iBAAiB;gBACjB,eAAe;gBACf,eAAe;gBACf,QAAQ;aACT;YACD;gBACE,yBAAyB;gBACzB,qBAAqB;gBACrB,qBAAqB;gBACrB,iBAAiB;aAClB;SACF,CAAC;QACF,MAAM,IAAA,2DAAuC,EAAC,OAAO,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC;IACpF,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {assertNotNullOrUndefined, goToResourceWithCustomHost} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {ensureResourceSectionIsExpanded, expandIssue, getIssueByTitle, getResourcesElement, navigateToIssuesTab, waitForTableFromResourceSectionContents} from '../helpers/issues-helpers.js';\n\ndescribe('Wasm cross-origin sharing issue', async () => {\n  beforeEach(async () => {\n    await goToResourceWithCustomHost('a.devtools.test', 'issues/wasm-co-sharing.html');\n  });\n\n  // Disabled until wasm module sharing is reenabled.\n  it.skip('[crbug.com/1247980] should appear when cross-origin sharing a wasm module', async () => {\n    await navigateToIssuesTab();\n    await expandIssue();\n    const issueElement = await getIssueByTitle('Share WebAssembly modules only between same-origin environments');\n    assertNotNullOrUndefined(issueElement);\n    const section = await getResourcesElement('module', issueElement);\n    const text = await section.label.evaluate(el => el.textContent);\n    assert.strictEqual(text, '1 module');\n    await ensureResourceSectionIsExpanded(section);\n    const expectedTableRows = [\n      [\n        'Wasm Module URL',\n        'Source Origin',\n        'Target Origin',\n        'Status',\n      ],\n      [\n        /.*a.devtools.test.*wasm/,\n        /.*a.devtools.test.*/,\n        /.*b.devtools.test.*/,\n        /warning|blocked/,\n      ],\n    ];\n    await waitForTableFromResourceSectionContents(section.content, expectedTableRows);\n  });\n});\n"]}