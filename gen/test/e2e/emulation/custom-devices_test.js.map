{"version":3,"file":"custom-devices_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/emulation/custom-devices_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport {assert} from 'chai';\nimport type * as puppeteer from 'puppeteer';\nimport {click, getBrowserAndPages, goToResource, pressKey, tabForward, typeText, waitFor, waitForAria} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {waitForDomNodeToBeVisible} from '../helpers/elements-helpers.js';\nimport {clickZoomDropDown, openDeviceToolbar, reloadDockableFrontEnd, selectDevice, selectEdit, selectTestDevice} from '../helpers/emulation-helpers.js';\n\nconst ADD_DEVICE_BUTTON_SELECTOR = '#custom-device-add-button';\nconst FOCUSED_DEVICE_NAME_FIELD_SELECTOR = '#custom-device-name-field:focus';\nconst EDITOR_ADD_BUTTON_SELECTOR = '.editor-buttons > button:first-child';\nconst FOCUSED_SELECTOR = '*:focus';\n\nasync function elementTextContent(element: puppeteer.ElementHandle): Promise<string> {\n  return await element.evaluate(node => node.textContent || '');\n}\n\nasync function targetTextContent(selector: string): Promise<string> {\n  const {target} = getBrowserAndPages();\n  const handle = await target.waitForSelector(selector);\n  if (!handle) {\n    assert.fail(`targetTextContent: could not find element for ${selector}`);\n  }\n  return elementTextContent(handle);\n}\n\ndescribe('Custom devices', async () => {\n  beforeEach(async function() {\n    await reloadDockableFrontEnd();\n    await goToResource('emulation/custom-ua-ch.html');\n    await waitFor('.tabbed-pane-left-toolbar');\n    await openDeviceToolbar();\n  });\n\n  it('can add and then edit a custom device with UA-CH emulation', async () => {\n    await selectEdit();\n    const add = await waitFor(ADD_DEVICE_BUTTON_SELECTOR);\n    await click(add);\n    await waitFor(FOCUSED_DEVICE_NAME_FIELD_SELECTOR);\n    await typeText('Test device');\n\n    await tabForward();  // Focus width.\n    await tabForward();  // Focus height.\n    await tabForward();  // Focus DPR.\n    await typeText('1.0');\n\n    await tabForward();  // Focus UA string.\n    await typeText('Test device browser 1.0');\n\n    await tabForward();  // Focus device type.\n    await tabForward();  // Focus folder.\n    await pressKey('Enter');\n\n    await tabForward();  // Focus help button\n    await tabForward();  // Focus brand browser.\n    await typeText('Test browser');\n\n    await tabForward();  // Focus brand version.\n    await typeText('1.0');\n\n    await tabForward();  // Focus delete button.\n    await tabForward();  // Focus Add brand button.\n    await pressKey('Space');\n\n    await typeText('Friendly Dragon');\n    await tabForward();  //  Focus second row brand version.\n    await typeText('1.1');\n\n    await tabForward();  // Focus second row delete button.\n    await tabForward();  // Focus Add browser button.\n    await tabForward();  // Focus full version.\n    await typeText('1.1.2345');\n\n    await tabForward();  // Focus platform.\n    await typeText('Cyborg');\n\n    await tabForward();  // Focus platform version.\n    await typeText('C-1');\n\n    await tabForward();  // Focus architecture.\n    await typeText('Bipedal');\n\n    await tabForward();  // Focus device model.\n    await typeText('C-1-Gardener');\n\n    await tabForward();  // Focus add button.\n\n    const finishAdd = await waitFor(FOCUSED_SELECTOR);\n    const finishAddText = await elementTextContent(finishAdd);\n    assert.strictEqual(finishAddText, 'Add');\n    await click(finishAdd);\n\n    // Select the device in the menu.\n    await selectTestDevice();\n\n    // Reload the test page, and verify things working.\n    const {target} = getBrowserAndPages();\n    await target.reload();\n\n    void waitForDomNodeToBeVisible('#res-dump-done');\n    assert.strictEqual(await targetTextContent('#res-ua'), 'Test device browser 1.0');\n    assert.strictEqual(await targetTextContent('#res-mobile'), 'true');\n    assert.strictEqual(await targetTextContent('#res-num-brands'), '2');\n    assert.strictEqual(await targetTextContent('#res-brand-0-name'), 'Test browser');\n    assert.strictEqual(await targetTextContent('#res-brand-0-version'), '1.0');\n    assert.strictEqual(await targetTextContent('#res-brand-1-name'), 'Friendly Dragon');\n    assert.strictEqual(await targetTextContent('#res-brand-1-version'), '1.1');\n    assert.strictEqual(await targetTextContent('#res-platform'), 'Cyborg');\n    assert.strictEqual(await targetTextContent('#res-platform-version'), 'C-1');\n    assert.strictEqual(await targetTextContent('#res-architecture'), 'Bipedal');\n    assert.strictEqual(await targetTextContent('#res-model'), 'C-1-Gardener');\n    assert.strictEqual(await targetTextContent('#res-ua-full-version'), '1.1.2345');\n\n    // Focus the first item in the device list, which should be the custom entry,\n    // and then click the edit button that should appear.\n    const firstDevice = await waitFor('.devices-list-item');\n    await firstDevice.focus();\n\n    const editButton = await waitFor('.toolbar-button[aria-label=\"Edit\"]');\n    await editButton.click();\n\n    // Make sure the device name field is what's focused.\n    await waitFor(FOCUSED_DEVICE_NAME_FIELD_SELECTOR);\n\n    // Skip over to the version field.\n    for (let i = 0; i < 15; ++i) {\n      if (i === 7) {\n        await pressKey('ArrowRight');\n      }\n      await tabForward();\n    }\n\n    // Change the value.\n    await typeText('1.1.5');\n\n    // Save the changes.\n    await pressKey('Enter');\n\n    // Reload the test page, and verify things working.\n    await target.reload();\n\n    void waitForDomNodeToBeVisible('#res-dump-done');\n    assert.strictEqual(await targetTextContent('#res-ua'), 'Test device browser 1.0');\n    assert.strictEqual(await targetTextContent('#res-mobile'), 'true');\n    assert.strictEqual(await targetTextContent('#res-num-brands'), '2');\n    assert.strictEqual(await targetTextContent('#res-brand-0-name'), 'Test browser');\n    assert.strictEqual(await targetTextContent('#res-brand-0-version'), '1.0');\n    assert.strictEqual(await targetTextContent('#res-brand-1-name'), 'Friendly Dragon');\n    assert.strictEqual(await targetTextContent('#res-brand-1-version'), '1.1');\n    assert.strictEqual(await targetTextContent('#res-platform'), 'Cyborg');\n    assert.strictEqual(await targetTextContent('#res-platform-version'), 'C-1');\n    assert.strictEqual(await targetTextContent('#res-architecture'), 'Bipedal');\n    assert.strictEqual(await targetTextContent('#res-model'), 'C-1-Gardener');\n    assert.strictEqual(await targetTextContent('#res-ua-full-version'), '1.1.5');\n  });\n\n  it('can add and properly display a device with a custom resolution', async () => {\n    await selectEdit();\n    const add = await waitFor(ADD_DEVICE_BUTTON_SELECTOR);\n    await click(add);\n    await waitFor(FOCUSED_DEVICE_NAME_FIELD_SELECTOR);\n    await typeText('Prime numbers');\n\n    await tabForward();  // Focus width.\n    await typeText('863');\n    await tabForward();  // Focus height.\n    await typeText('1223');\n    await tabForward();  // Focus DPR.\n    await typeText('1.0');\n    await tabForward();  // Focus UA string.\n    await typeText('Test device browser 1.0');\n\n    const finishAdd = await waitFor(EDITOR_ADD_BUTTON_SELECTOR);\n    const finishAddText = await elementTextContent(finishAdd);\n    assert.strictEqual(finishAddText, 'Add');\n    await click(finishAdd);\n\n    // Select the device in the menu.\n    await selectDevice('Prime numbers');\n\n    const zoomButton = await waitForAria('Zoom');\n    assert.strictEqual(await elementTextContent(zoomButton), '51%');\n\n    // Check fit-to-window text.\n    await clickZoomDropDown();\n\n    const fitButton = await waitFor('[aria-label*=\"Fit to window\"]');\n    assert.strictEqual(await elementTextContent(fitButton), 'Fit to window (51%)');\n    assert.strictEqual(await elementTextContent(zoomButton), '51%');\n\n    const zoomTo100Button = await waitFor('[aria-label*=\"100%\"]');\n    await click(zoomTo100Button);\n    assert.strictEqual(await elementTextContent(fitButton), 'Fit to window (51%)');\n    assert.strictEqual(await elementTextContent(zoomButton), '100%');\n  });\n});\n"]}