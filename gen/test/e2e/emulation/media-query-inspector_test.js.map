{"version":3,"file":"media-query-inspector_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/emulation/media-query-inspector_test.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;;AAE7B,+BAA4B;AAE5B,sDAAkF;AAClF,0EAA8D;AAC9D,0EAAmH;AAEnH,MAAM,+BAA+B,GAAG,yBAAyB,CAAC;AAElE,IAAA,8BAAQ,EAAC,uBAAuB,EAAE,KAAK,IAAI,EAAE;IAC3C,UAAU,CAAC,KAAK;QACd,MAAM,IAAA,6CAAsB,GAAE,CAAC;QAE/B,MAAM,IAAA,wBAAY,EAAC,sCAAsC,CAAC,CAAC;QAC3D,MAAM,IAAA,mBAAO,EAAC,2BAA2B,CAAC,CAAC;QAC3C,MAAM,IAAA,wCAAiB,GAAE,CAAC;QAC1B,MAAM,IAAA,8CAAuB,GAAE,CAAC;IAClC,CAAC,CAAC,CAAC;IAEH,IAAA,wBAAE,EAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;QAC3C,MAAM,gBAAgB,GAAG,MAAM,IAAA,2BAAe,EAAC,KAAK,IAAI,EAAE;YACxD,MAAM,OAAO,GAAG,MAAM,IAAA,cAAE,EAAC,+BAA+B,CAAC,CAAC;YAC1D,OAAO,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC;QACnD,CAAC,CAAC,CAAC;QACH,MAAM,cAAc,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YACnE,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC,CAAC;QACJ,aAAM,CAAC,SAAS,CACZ,cAAc,EACd;YACE,2FAA2F;YAC3F,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,OAAO;YACP,OAAO;SACR,EACD,4BAA4B,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {$$, goToResource, waitFor, waitForFunction} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {openDeviceToolbar, reloadDockableFrontEnd, showMediaQueryInspector} from '../helpers/emulation-helpers.js';\n\nconst MEDIA_INSPECTOR_MARKER_SELECTOR = '.media-inspector-marker';\n\ndescribe('Media query inspector', async () => {\n  beforeEach(async function() {\n    await reloadDockableFrontEnd();\n\n    await goToResource('emulation/media-query-inspector.html');\n    await waitFor('.tabbed-pane-left-toolbar');\n    await openDeviceToolbar();\n    await showMediaQueryInspector();\n  });\n\n  it('lists all the media queries', async () => {\n    const inspectorMarkers = await waitForFunction(async () => {\n      const markers = await $$(MEDIA_INSPECTOR_MARKER_SELECTOR);\n      return markers.length >= 3 ? markers : undefined;\n    });\n    const markersContent = await Promise.all(inspectorMarkers.map(node => {\n      return node.evaluate(node => node.textContent);\n    }));\n    assert.deepEqual(\n        markersContent,\n        [\n          // They are duplicated, as the markers are added both on the left and right of the viewport\n          '300px100px',\n          '100px300px',\n          '800px500px',\n          '500px800px',\n          '801px',\n          '801px',\n        ],\n        'missed media query rule(s)');\n  });\n});\n"]}