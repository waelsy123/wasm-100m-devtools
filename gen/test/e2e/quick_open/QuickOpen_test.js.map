{"version":3,"file":"QuickOpen_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/quick_open/QuickOpen_test.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;;AAE7B,+BAA4B;AAE5B,sDAA8F;AAC9F,0EAA8D;AAC9D,wEAAqE;AACrE,4EAAsH;AACtH,wEAA6E;AAC7E,sEAAmG;AAEnG,KAAK,UAAU,sBAAsB;IACnC,MAAM,EAAC,QAAQ,EAAC,GAAG,IAAA,8BAAkB,GAAE,CAAC;IACxC,MAAM,IAAA,+CAA0B,EAAC,QAAQ,CAAC,CAAC;IAC3C,MAAM,IAAA,gBAAI,EAAC,0BAA0B,EAAE,KAAK,IAAI,EAAE;QAChD,MAAM,IAAA,2CAAqB,GAAE,CAAC;IAChC,CAAC,CAAC,CAAC;IACH,MAAM,IAAA,gBAAI,EAAC,kDAAkD,EAAE,KAAK,IAAI,EAAE;QACxE,MAAM,IAAA,wBAAY,EAAC,wBAAwB,CAAC,CAAC;QAC7C,MAAM,IAAA,yCAAiB,GAAE,CAAC;QAC1B,MAAM,SAAS,GAAG,MAAM,IAAA,6CAAqB,EAAC,CAAC,CAAC,CAAC;QACjD,MAAM,IAAA,iBAAK,EAAC,SAAS,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC;IACH,MAAM,IAAA,gBAAI,EAAC,wDAAwD,EAAE,KAAK,IAAI,EAAE;QAC9E,MAAM,IAAA,mBAAO,EAAC,2BAA2B,CAAC,CAAC;QAC3C,MAAM,IAAA,6CAAwB,EAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;IAC/D,CAAC,CAAC,CAAC;AACL,CAAC;AAED,IAAA,8BAAQ,EAAC,iBAAiB,EAAE,GAAG,EAAE;IAC/B,IAAA,wBAAE,EAAC,uBAAuB,EAAE,KAAK,IAAI,EAAE;QACrC,MAAM,IAAA,wBAAY,EAAC,wBAAwB,CAAC,CAAC;QAC7C,MAAM,IAAA,yCAAiB,GAAE,CAAC;QAC1B,MAAM,cAAc,GAAG,MAAM,IAAA,kDAA0B,EAAC,CAAC,CAAC,CAAC;QAC3D,aAAM,CAAC,WAAW,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;IACzD,CAAC,CAAC,CAAC;IAEH,IAAA,wBAAE,EAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;QAC/D,MAAM,sBAAsB,EAAE,CAAC;QAC/B,MAAM,IAAA,mDAA6B,EAAC,kDAAkD,CAAC,CAAC;QACxF,MAAM,sBAAsB,EAAE,CAAC;IACjC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {click, getBrowserAndPages, goToResource, step, waitFor} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {navigateToElementsTab} from '../helpers/elements-helpers.js';\nimport {getMenuItemAtPosition, getMenuItemTitleAtPosition, openFileQuickOpen} from '../helpers/quick_open-helpers.js';\nimport {togglePreferenceInSettingsTab} from '../helpers/settings-helpers.js';\nimport {listenForSourceFilesLoaded, waitForSourceLoadedEvent} from '../helpers/sources-helpers.js';\n\nasync function openAFileWithQuickMenu() {\n  const {frontend} = getBrowserAndPages();\n  await listenForSourceFilesLoaded(frontend);\n  await step('navigate to elements tab', async () => {\n    await navigateToElementsTab();\n  });\n  await step('open quick open menu and select the first option', async () => {\n    await goToResource('pages/hello-world.html');\n    await openFileQuickOpen();\n    const firstItem = await getMenuItemAtPosition(0);\n    await click(firstItem);\n  });\n  await step('check the sources panel is open with the selected file', async () => {\n    await waitFor('.navigator-file-tree-item');\n    await waitForSourceLoadedEvent(frontend, 'hello-world.html');\n  });\n}\n\ndescribe('Quick Open menu', () => {\n  it('lists available files', async () => {\n    await goToResource('pages/hello-world.html');\n    await openFileQuickOpen();\n    const firstItemTitle = await getMenuItemTitleAtPosition(0);\n    assert.strictEqual(firstItemTitle, 'hello-world.html');\n  });\n\n  it('opens the sources panel when a file is selected', async () => {\n    await openAFileWithQuickMenu();\n    await togglePreferenceInSettingsTab('Focus Sources panel when triggering a breakpoint');\n    await openAFileWithQuickMenu();\n  });\n});\n"]}