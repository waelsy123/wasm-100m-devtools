{"version":3,"file":"search-scope_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/search/search-scope_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {$, $$, getBrowserAndPages, goToResource, timeout, waitFor, waitForFunction} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {triggerFindDialog} from '../helpers/search-helpers.js';\n\ndescribe('The Search Panel', async () => {\n  it('provides results across scopes', async () => {\n    const {frontend} = getBrowserAndPages();\n    const SEARCH_QUERY = '[aria-label=\"Search Query\"]';\n    const SEARCH_RESULTS = '.search-results';\n    const SEARCH_FILE_RESULT = '.search-result';\n    const SEARCH_CHILDREN_RESULT = '.search-match-link';\n\n    // Wait for Devtools to settle before navigating:\n    // https://crbug.com/1150334\n    await timeout(500);\n\n    // Load the search page, which has results in the HTML, JS, and CSS.\n    await goToResource('search/search.html');\n\n    // Launch the search panel.\n    await triggerFindDialog(frontend);\n    await waitFor(SEARCH_QUERY);\n    const inputElement = await $(SEARCH_QUERY);\n    if (!inputElement) {\n      assert.fail('Unable to find search input field');\n    }\n\n    // Go ahead and search.\n    await inputElement.focus();\n    await inputElement.type('searchTestUniqueString');\n    await frontend.keyboard.press('Enter');\n\n    // Wait for results.\n    const resultsContainer = await waitFor(SEARCH_RESULTS);\n\n    const fileResults = await waitForFunction(async () => {\n      const results = await $$(SEARCH_FILE_RESULT, resultsContainer);\n      return results.length === 3 ? results : undefined;\n    });\n\n    interface FileSearchResult {\n      matchesCount: number;\n      fileName: string;\n    }\n\n    const files: FileSearchResult[] = await Promise.all(fileResults.map(result => result.evaluate(value => {\n      const SEARCH_RESULT_FILE_NAME = '.search-result-file-name';\n      const SEARCH_RESULT_MATCHES_COUNT = '.search-result-matches-count';\n\n      const fileNameElement = value.querySelector(SEARCH_RESULT_FILE_NAME);\n      const matchesCountElement = value.querySelector(SEARCH_RESULT_MATCHES_COUNT);\n      if (!fileNameElement) {\n        assert.fail('Could not find search result file name element.');\n      }\n      if (!matchesCountElement) {\n        assert.fail('Could not find search result matches count element.');\n      }\n      // Wrap the entries with the file details.\n      return {\n        fileName: fileNameElement.firstChild && fileNameElement.firstChild.textContent || '',\n        matchesCount: parseInt(matchesCountElement.textContent || '', 10),\n      };\n    })));\n\n    files.sort((a, b) => {\n      return a.matchesCount - b.matchesCount;\n    });\n\n    assert.deepEqual(files, [\n      {fileName: 'search.css', matchesCount: 3},\n      {fileName: 'search.html', matchesCount: 4},\n      {fileName: 'search.js', matchesCount: 5},\n    ]);\n\n    // Now step through the actual entries of the search result.\n    const entryResults = await $$(SEARCH_CHILDREN_RESULT, resultsContainer);\n    const entries = await Promise.all(entryResults.map(result => result.evaluate(value => {\n      const SEARCH_MATCH_LINE_NUMBER = '.search-match-line-number';\n      const SEARCH_MATCH_CONTENT = '.search-match-content';\n\n      const lineNumberElement = value.querySelector(SEARCH_MATCH_LINE_NUMBER);\n      const matchContentElement = value.querySelector(SEARCH_MATCH_CONTENT);\n\n      if (!lineNumberElement) {\n        assert.fail('Could not find search line number element.');\n      }\n      if (!matchContentElement) {\n        assert.fail('Could not find search match content element.');\n      }\n\n      return {\n        line: lineNumberElement.textContent || '',\n        content: matchContentElement.textContent || '',\n      };\n    })));\n\n    assert.deepEqual(entries, [\n      {line: '7', content: 'div.searchTestUniqueString {'},\n      {line: '11', content: 'div.searchTestUniqueString:hover {'},\n      {line: '12', content: '/* another searchTestUniqueString occurence */'},\n      {line: '4', content: 'function searchTestUniqueString() {'},\n      {line: '6', content: '// searchTestUniqueString two occurences on the same line searchTestUniqueString'},\n      {line: '7', content: '// searchTestUniqueString on the next line.'},\n      {line: '12', content: 'searchTestUniqueString();'},\n      {line: '13', content: '// SEARCHTestUniqueString();'},\n      {line: '8', content: 'â€¦eval(\\'function searchTestUniqueString() {}\\');</script>'},\n      {line: '10', content: '<div>searchTestUniqueString</div>'},\n      {line: '12', content: '<!-- searchTestUniqueString -->'},\n      {line: '14', content: '<div id=\"searchTestUniqueString\">div text</div>'},\n    ]);\n  });\n});\n"]}