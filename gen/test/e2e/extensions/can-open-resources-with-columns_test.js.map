{"version":3,"file":"can-open-resources-with-columns_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/extensions/can-open-resources-with-columns_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\nimport type {Chrome} from '../../../extension-api/ExtensionAPI.js';\nimport {loadExtension} from '../helpers/extension-helpers.js';\nimport {waitForHighlightedLine, getToolbarText} from '../helpers/sources-helpers.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {getBrowserAndPages, getResourcesPath} from '../../shared/helper.js';\n\ndescribe('The Extension API', async () => {\n  it('can open wasm resources with offset', async () => {\n    const {target} = getBrowserAndPages();\n    await target.goto(`${getResourcesPath()}/sources/wasm/scopes.html`);\n\n    const extension = await loadExtension('TestExtension');\n\n    const resource = `${getResourcesPath()}/sources/wasm/scopes.wasm`;\n\n    await extension.waitForFunction(async (resource: string) => {\n      const resources =\n          await new Promise<Chrome.DevTools.Resource[]>(r => window.chrome.devtools.inspectedWindow.getResources(r));\n      return resources.find(r => r.url === resource);\n    }, undefined, resource);\n\n    // Accepts a wasm offset as column\n    await extension.evaluate(resource => window.chrome.devtools.panels.openResource(resource, 0, 0x4b), resource);\n    await waitForHighlightedLine(0x4b);\n\n    // Selects the right wasm line on an inexact match\n    await extension.evaluate(resource => window.chrome.devtools.panels.openResource(resource, 0, 0x4e), resource);\n    await waitForHighlightedLine(0x4d);\n\n    // Accepts a missing columnNumber\n    await extension.evaluate(resource => window.chrome.devtools.panels.openResource(resource, 0), resource);\n    await waitForHighlightedLine(0);\n\n    // Accepts a wasm offset as column and a callback\n    {\n      const r = await extension.evaluate(\n          resource => new Promise(r => window.chrome.devtools.panels.openResource(resource, 0, 0x4b, () => r(1))),\n          resource);\n      assert.deepEqual(r, 1);\n    }\n    await waitForHighlightedLine(0x4b);\n\n    // Is backwards compatible: accepts a callback with a missing columnNumber\n    {\n      const r = await extension.evaluate(\n          // @ts-expect-error Legacy API\n          resource => new Promise(r => window.chrome.devtools.panels.openResource(resource, 0, () => r(1))), resource);\n      assert.deepEqual(r, 1);\n    }\n    await waitForHighlightedLine(0);\n  });\n\n  it('can open page resources with column numbers', async () => {\n    const {target} = getBrowserAndPages();\n    const resource = `${getResourcesPath()}/sources/wasm/scopes.html`;\n    await target.goto(resource);\n\n    const extension = await loadExtension('TestExtension');\n\n    await extension.waitForFunction(async (resource: string) => {\n      const resources =\n          await new Promise<Chrome.DevTools.Resource[]>(r => window.chrome.devtools.inspectedWindow.getResources(r));\n      return resources.find(r => r.url === resource);\n    }, undefined, resource);\n\n    // Accepts a missing columnNumber\n    await extension.evaluate(resource => window.chrome.devtools.panels.openResource(resource, 2), resource);\n    await waitForHighlightedLine(3);\n\n    // Accepts a column number\n    {\n      await extension.evaluate(resource => window.chrome.devtools.panels.openResource(resource, 29, 160), resource);\n      await waitForHighlightedLine(30);\n      const toolbarText = await getToolbarText();\n      assert.isTrue(toolbarText.includes('Line 30, Column 161'));\n    }\n\n    // Accepts a column number and a callback\n    {\n      const r = await extension.evaluate(\n          resource => new Promise(r => window.chrome.devtools.panels.openResource(resource, 1, 2000, () => r(1))),\n          resource);\n      assert.deepEqual(r, 1);\n      await waitForHighlightedLine(2);\n      const toolbarText = await getToolbarText();\n      assert.isTrue(toolbarText.includes('Line 2, Column 60'));\n    }\n\n    // Is backwards compatible: accepts a callback with a missing columnNumber\n    {\n      const r = await extension.evaluate(\n          // @ts-expect-error Legacy API\n          resource => new Promise(r => window.chrome.devtools.panels.openResource(resource, 2, () => r(1))), resource);\n      assert.deepEqual(r, 1);\n      await waitForHighlightedLine(3);\n    }\n  });\n});\n"]}