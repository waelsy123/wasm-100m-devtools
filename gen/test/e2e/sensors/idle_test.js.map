{"version":3,"file":"idle_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/sensors/idle_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {clearPermissionsOverride, getBrowserAndPages, goToResource, overridePermissions, selectOption, step, waitFor} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {openPanelViaMoreTools} from '../helpers/settings-helpers.js';\n\ndescribe('Idle Emulation on Sensors panel', () => {\n  beforeEach(async () => {\n    await step('opening sensors panel', async () => {\n      await openPanelViaMoreTools('Sensors');\n    });\n  });\n\n  before(async () => {\n    await step('overriding permissions with \\'idle-detection\\'', async () => {\n      // IdleDetector switched permission from 'notifications' to\n      // 'idle-detection', but 'idle-detection' is not in the @types/puppeteer\n      // package, so `as 'notifications'` needed for TypeScript.\n      await overridePermissions(['idle-detection' as 'notifications']);\n    });\n  });\n\n  after(async () => {\n    await step('clearing permissions override', async () => {\n      await clearPermissionsOverride();\n    });\n  });\n\n  async function getState() {\n    const {target} = getBrowserAndPages();\n    return await target.evaluate(() => {\n      const state = document.getElementById('state');\n      return state ? state.innerText : '';\n    });\n  }\n\n  async function waitForState(state: string) {\n    const {target} = getBrowserAndPages();\n    await step(`Waiting for state \\'${state}\\'`, async () => {\n      await target.waitForFunction((_state: string) => {\n        const stateEl = document.getElementById('state');\n        return _state === (stateEl ? stateEl.innerText : '');\n      }, {}, state);\n    });\n  }\n\n  it('includes UI for emulating an idle state', async () => {\n    const select = await waitFor('.idle-section select');\n    const actual = await select.evaluate(node => node.textContent);\n\n    const expected = [\n      'No idle emulation',\n      'User active, screen unlocked',\n      'User active, screen locked',\n      'User idle, screen unlocked',\n      'User idle, screen locked',\n    ].join('');\n    assert.deepEqual(actual, expected);\n  });\n\n  it('changing idle state emulation causes change of the IdleDetector state', async () => {\n    await step('opening idle-detector.html', async () => {\n      await goToResource('sensors/idle-detector.html');\n    });\n\n    const select = await waitFor('.idle-section select');\n\n    // InitialState can be idle as well.\n    const initialState = await getState();\n\n    // Emulate Idle states and verify IdleDetector updates state accordingly.\n    await selectOption(select, '{\"isUserActive\":false,\"isScreenUnlocked\":false}');\n    await waitForState('Idle state: idle, locked.');\n\n    await selectOption(select, '{\"isUserActive\":true,\"isScreenUnlocked\":false}');\n    await waitForState('Idle state: active, locked.');\n\n    await selectOption(select, '{\"isUserActive\":true,\"isScreenUnlocked\":true}');\n    await waitForState('Idle state: active, unlocked.');\n\n    await selectOption(select, '{\"isUserActive\":false,\"isScreenUnlocked\":true}');\n    await waitForState('Idle state: idle, unlocked.');\n\n    // Remove Idle emulation and verify IdleDetector is in initial state.\n    await selectOption(select, 'none');\n    await waitForState(initialState);\n  });\n});\n"]}