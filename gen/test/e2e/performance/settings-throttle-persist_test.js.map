{"version":3,"file":"settings-throttle-persist_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/performance/settings-throttle-persist_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\nimport type {ElementHandle} from 'puppeteer';\n\nimport {reloadDevTools, waitFor, waitForAria} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {navigateToPerformanceTab} from '../helpers/performance-helpers.js';\n\ndescribe('The Performance panel', async function() {\n  // These tests reload panels repeatedly, which can take a longer time.\n  this.timeout(20_000);\n\n  beforeEach(async () => {\n    await navigateToPerformanceTab('empty');\n    await openCaptureSettings('.timeline-settings-pane');\n  });\n\n  async function assertOption(select: ElementHandle<HTMLSelectElement>, expected: string) {\n    assert.strictEqual(await select.evaluate(el => el.selectedOptions.length), 1);\n    assert.strictEqual(await select.evaluate(el => el.selectedOptions[0].getAttribute('aria-label')), expected);\n  }\n\n  async function openCaptureSettings(sectionClassName: string) {\n    const captureSettingsButton = await waitForAria('Capture settings');\n    await captureSettingsButton.click();\n    return await waitFor(sectionClassName);\n  }\n\n  it('can persist throttling conditions', async () => {\n    // Start with no throttling, select an option \"A\".\n    {\n      const select = await waitFor('select', await waitForAria('Network conditions'));\n      await assertOption(select, 'Disabled: No throttling');\n      await select.select('Fast 3G');\n      await assertOption(select, 'Presets: Fast 3G');\n    }\n    // Verify persistence for \"A\", select another option \"B\".\n    await reloadDevTools({queryParams: {panel: 'timeline'}});\n    {\n      const select = await waitFor('select', await waitForAria('Network conditions'));\n      await assertOption(select, 'Presets: Fast 3G');\n      await select.select('Slow 3G');\n      await assertOption(select, 'Presets: Slow 3G');\n    }\n    // Verify persistence for \"B\", disable throttling.\n    await reloadDevTools({queryParams: {panel: 'timeline'}});\n    {\n      const select = await waitFor('select', await waitForAria('Network conditions'));\n      await assertOption(select, 'Presets: Slow 3G');\n      await select.select('No throttling');\n      await assertOption(select, 'Disabled: No throttling');\n    }\n    // Verify persistence of disabled throttling.\n    await reloadDevTools({queryParams: {panel: 'timeline'}});\n    {\n      const select = await waitFor('select', await waitForAria('Network conditions'));\n      await assertOption(select, 'Disabled: No throttling');\n    }\n  });\n});\n"]}