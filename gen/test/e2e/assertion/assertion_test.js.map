{"version":3,"file":"assertion_test.js","sourceRoot":"","sources":["../../../../../../test/e2e/assertion/assertion_test.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;;AAE7B,+BAA4B;AAE5B,yDAAyD;AACzD,sDAA8E;AAC9E,0EAA8D;AAE9D,IAAA,8BAAQ,EAAC,YAAY,EAAE,KAAK;IAC1B,IAAA,wBAAE,EAAC,gBAAgB,EAAE,KAAK,IAAI,EAAE;QAC9B,MAAM,EAAC,QAAQ,EAAC,GAAG,IAAA,8BAAkB,GAAE,CAAC;QACxC,MAAM,IAAA,gBAAI,EAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;YACjE,MAAM,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE;gBAC3B,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,oBAAoB,CAAC,CAAC;YAC9C,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,MAAM,IAAA,wBAAY,EAAC,yBAAyB,CAAC,CAAC;QAC9C,aAAM,CAAC,EAAE,CAAC,0BAAc,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;IAChF,CAAC,CAAC,CAAC;IAEH,IAAA,wBAAE,EAAC,eAAe,EAAE,KAAK,IAAI,EAAE;QAC7B,MAAM,EAAC,QAAQ,EAAC,GAAG,IAAA,8BAAkB,GAAE,CAAC;QACxC,MAAM,IAAA,gBAAI,EAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;YACjE,MAAM,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE;gBAC3B,SAAS,GAAG;oBACV,OAAO,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;gBACtC,CAAC;gBACD,GAAG,EAAE,CAAC;YACR,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,MAAM,IAAA,wBAAY,EAAC,yBAAyB,CAAC,CAAC;QAC9C,aAAM,CAAC,EAAE,CAAC,0BAAc,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;IAChF,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {expectedErrors} from '../../conductor/events.js';\nimport {getBrowserAndPages, goToResource, step} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\n\ndescribe('Assertions', async function() {\n  it('console.assert', async () => {\n    const {frontend} = getBrowserAndPages();\n    await step('Check the evaluation results from console', async () => {\n      await frontend.evaluate(() => {\n        console.assert(false, 'expected failure 1');\n      });\n    });\n    await goToResource('cross_tool/default.html');\n    assert.ok(expectedErrors.some(error => error.includes('expected failure 1')));\n  });\n\n  it('console.error', async () => {\n    const {frontend} = getBrowserAndPages();\n    await step('Check the evaluation results from console', async () => {\n      await frontend.evaluate(() => {\n        function foo() {\n          console.error('expected failure 2');\n        }\n        foo();\n      });\n    });\n    await goToResource('cross_tool/default.html');\n    assert.ok(expectedErrors.some(error => error.includes('expected failure 2')));\n  });\n});\n"]}