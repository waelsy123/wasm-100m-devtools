{"version":3,"file":"test_runner_config.js","sourceRoot":"","sources":["../../../../../test/conductor/test_runner_config.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;;;AAE7B,SAAS,mBAAmB;IAC1B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE;QACxC,OAAO,IAAI,CAAC;KACb;IAED,IAAI;QACF,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;KACxD;IAAC,MAAM;QACN,yDAAyD;QACzD,OAAO,EAAE,CAAC;KACX;AACH,CAAC;AAGD,SAAgB,0BAA0B,CAAI,UAAkB,EAAE,aAA0B;IAC1F,MAAM,MAAM,GAAG,mBAAmB,EAAE,CAAC;IACrC,IAAI,MAAM,IAAI,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE;QAC/C,OAAO,MAAM,CAAC,UAAU,CAAM,CAAC;KAChC;IACD,IAAI,aAAa,KAAK,SAAS,EAAE;QAC/B,OAAO,aAAa,CAAC;KACtB;IACD,OAAO,SAAS,CAAC;AACnB,CAAC;AATD,gEASC;AAED,SAAgB,8BAA8B,CAAI,UAAkB,EAAE,YAAqB;IACzF,MAAM,MAAM,GAAG,mBAAmB,EAAE,CAAC;IACrC,IAAI,MAAM,CAAC,UAAU,CAAC,KAAK,SAAS,EAAE;QACpC,MAAM,IAAI,KAAK,CAAC,YAAY,IAAI,sDAAsD,UAAU,EAAE,CAAC,CAAC;KACrG;IAED,OAAO,MAAM,CAAC,UAAU,CAAM,CAAC;AACjC,CAAC;AAPD,wEAOC","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nfunction getTestRunnerConfig() {\n  if (!process.env.TEST_RUNNER_JSON_CONFIG) {\n    return null;\n  }\n\n  try {\n    return JSON.parse(process.env.TEST_RUNNER_JSON_CONFIG);\n  } catch {\n    // Return an empty object so any lookups return undefined\n    return {};\n  }\n}\n\nexport function getTestRunnerConfigSetting<T>(settingKey: string, fallbackValue: T): T;\nexport function getTestRunnerConfigSetting<T>(settingKey: string, fallbackValue: T|undefined): T|undefined {\n  const config = getTestRunnerConfig();\n  if (config && config.hasOwnProperty(settingKey)) {\n    return config[settingKey] as T;\n  }\n  if (fallbackValue !== undefined) {\n    return fallbackValue;\n  }\n  return undefined;\n}\n\nexport function requireTestRunnerConfigSetting<T>(settingKey: string, errorMessage?: string): T {\n  const config = getTestRunnerConfig();\n  if (config[settingKey] === undefined) {\n    throw new Error(errorMessage || `Test runner error: could not find required setting ${settingKey}`);\n  }\n\n  return config[settingKey] as T;\n}\n"]}