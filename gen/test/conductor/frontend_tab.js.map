{"version":3,"file":"frontend_tab.js","sourceRoot":"","sources":["../../../../../test/conductor/frontend_tab.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;;;AAQ7B,2CAAqD;AACrD,mEAAmE;AAEnE,gGAAgG;AAChG,MAAM,yBAAyB,GAAwC,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;AAC5G,qHAAqH;AACrH,MAAM,2BAA2B,GAAwC,CAAC,kBAAkB,CAAC,CAAC;AAC9F,MAAM,UAAU,GAAG,gCAAgC,CAAC;AAcpD;;;GAGG;AACH,MAAa,mBAAmB;IAUD;IATpB,YAAY,CAAS;IAEtB,MAAM,CAAU,WAAW,GAAG;QACpC,IAAI,EAAE,UAAU;QAChB,QAAQ,EAAE,WAAW;KACtB,CAAC;IACF,uDAAuD;IAC/C,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC;IAE9B,YAA6B,IAAoB,EAAE,WAAmB;QAAzC,SAAI,GAAJ,IAAI,CAAgB;QAC/C,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;IAClC,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAC,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAkC;QAEtF,MAAM,cAAc,GAChB,IAAA,kDAA0B,EAAS,4BAA4B,EAAE,6BAA6B,CAAC,CAAC;QACpG,IAAI,CAAC,cAAc,EAAE;YACnB,MAAM,IAAI,KAAK,CAAC,uEAAuE,CAAC,CAAC;SAC1F;QAED,8FAA8F;QAC9F,gGAAgG;QAChG,uDAAuD;QACvD,6FAA6F;QAC7F,sBAAsB;QACtB,MAAM,EAAE,GAAG,mBAAmB,CAAC,UAAU,EAAE,CAAC;QAC5C,MAAM,WAAW,GAAG,YAAY,EAAE,2BAA2B,cAAc,IAAI,cAAc,iBACzF,YAAY,CAAC,OAAO,CAAC,kBAAkB,QAAQ,EAAE,CAAC;QAEtD,MAAM,QAAQ,GAAG,MAAM,OAAO,CAAC,OAAO,EAAE,CAAC;QACzC,IAAA,oCAAwB,EAAC,QAAQ,CAAC,CAAC;QACnC,MAAM,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,EAAC,SAAS,EAAE,yBAAyB,EAAC,CAAC,CAAC;QAEzE,MAAM,GAAG,GAAG,IAAI,mBAAmB,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;QAC3D,OAAO,GAAG,CAAC;IACb,CAAC;IAED,iGAAiG;IACjG,KAAK,CAAC,KAAK;QACT,oCAAoC;QACpC,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,CAAC;QAErD,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC;IACtB,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,UAAyC,EAAE;QACtD,+EAA+E;QAC/E,MAAM,EAAC,aAAa,GAAG,mBAAmB,CAAC,WAAW,EAAE,OAAO,GAAG,KAAK,EAAE,WAAW,GAAG,EAAE,EAAC,GAAG,OAAO,CAAC;QAErG,IAAI,aAAa,CAAC,IAAI,KAAK,mBAAmB,CAAC,WAAW,CAAC,IAAI,EAAE;YAC/D,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBAC9B,UAAU,CAAC,YAAY,CAAC,OAAO,CAAC,mBAAmB,EAAE,IAAI,IAAI,GAAG,CAAC,CAAC;YACpE,CAAC,EAAE,aAAa,CAAC,IAAI,CAAC,CAAC;SACxB;QAED,6DAA6D;QAC7D,MAAM,8BAA8B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChD,sEAAsE;QACtE,yDAAyD;QACzD,IAAI,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC;QAE7E,IAAI,WAAW,CAAC,KAAK,EAAE;YACrB,GAAG,IAAI,UAAU,WAAW,CAAC,KAAK,EAAE,CAAC;SACtC;QAED,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAC,SAAS,EAAE,yBAAyB,EAAC,CAAC,CAAC;QAElE,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,aAAa,CAAC,QAAQ,EAAE;YAChD,MAAM,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;SACzD;IACH,CAAC;IAED;;;;OAIG;IACH,QAAQ;QACN,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;QACrC,OAAO,GAAG,CAAC,QAAQ,CAAC;IACtB,CAAC;;AAlFH,kDAmFC;AAEM,KAAK,UAAU,8BAA8B,CAAC,MAAsB;IACzE,MAAM,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,EAAC,SAAS,EAAE,2BAA2B,EAAC,CAAC,CAAC;AAC1E,CAAC;AAFD,wEAEC;AAED,SAAS,YAAY,CAAC,OAA0B;IAC9C,MAAM,YAAY,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;IAC1C,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,YAAY,CAAC,CAAC;IAClC,IAAI,GAAG,CAAC,IAAI,EAAE;QACZ,OAAO,GAAG,CAAC,IAAI,CAAC;KACjB;IACD,MAAM,IAAI,KAAK,CAAC,8BAA8B,YAAY,EAAE,CAAC,CAAC;AAChE,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable no-console */\n\n// use require here due to\n// https://github.com/evanw/esbuild/issues/587#issuecomment-901397213\nimport puppeteer = require('puppeteer');\n\nimport {installPageErrorHandlers} from './events.js';\nimport {getTestRunnerConfigSetting} from './test_runner_config.js';\n\n// When loading DevTools with target.goto, we wait for it to be fully loaded using these events.\nconst DEVTOOLS_WAITUNTIL_EVENTS: puppeteer.PuppeteerLifeCycleEvent[] = ['networkidle2', 'domcontentloaded'];\n// When loading an empty page (including within the devtools window), we wait for it to be loaded using these events.\nconst EMPTY_PAGE_WAITUNTIL_EVENTS: puppeteer.PuppeteerLifeCycleEvent[] = ['domcontentloaded'];\nconst EMPTY_PAGE = 'data:text/html,<!DOCTYPE html>';\n\nexport interface DevToolsFrontendCreationOptions {\n  browser: puppeteer.Browser;\n  testServerPort: number;\n  targetId: string;\n}\n\nexport interface DevToolsFrontendReloadOptions {\n  selectedPanel?: {name: string, selector?: string};\n  canDock?: boolean;\n  queryParams?: {panel?: string};\n}\n\n/**\n * Wrapper class around `puppeteer.Page` that helps with setting up and\n * managing a DevTools frontend tab.\n */\nexport class DevToolsFrontendTab {\n  readonly #frontendUrl: string;\n\n  private static readonly DEFAULT_TAB = {\n    name: 'elements',\n    selector: '.elements',\n  };\n  // We use the counter to give each tab a unique origin.\n  private static tabCounter = 0;\n\n  private constructor(readonly page: puppeteer.Page, frontendUrl: string) {\n    this.#frontendUrl = frontendUrl;\n  }\n\n  static async create({browser, testServerPort, targetId}: DevToolsFrontendCreationOptions):\n      Promise<DevToolsFrontendTab> {\n    const devToolsAppURL =\n        getTestRunnerConfigSetting<string>('hosted-server-devtools-url', 'front_end/devtools_app.html');\n    if (!devToolsAppURL) {\n      throw new Error('Could not load DevTools. hosted-server-devtools-url config not found.');\n    }\n\n    // We load the DevTools frontend on a unique origin. Otherwise we would share 'localhost' with\n    // target pages. This could cause difficult to debug problems as things like window.localStorage\n    // would be shared and requests would be \"same-origin\".\n    // We also use a unique ID per DevTools frontend instance, to avoid the same issue with other\n    // frontend instances.\n    const id = DevToolsFrontendTab.tabCounter++;\n    const frontendUrl = `https://i${id}.devtools-frontend.test:${testServerPort}/${devToolsAppURL}?ws=localhost:${\n        getDebugPort(browser)}/devtools/page/${targetId}`;\n\n    const frontend = await browser.newPage();\n    installPageErrorHandlers(frontend);\n    await frontend.goto(frontendUrl, {waitUntil: DEVTOOLS_WAITUNTIL_EVENTS});\n\n    const tab = new DevToolsFrontendTab(frontend, frontendUrl);\n    return tab;\n  }\n\n  /** Same as `reload` but also clears out experiments and settings (window.localStorage really) */\n  async reset(): Promise<void> {\n    // Clear any local storage settings.\n    await this.page.evaluate(() => localStorage.clear());\n\n    await this.reload();\n  }\n\n  async reload(options: DevToolsFrontendReloadOptions = {}): Promise<void> {\n    // For the unspecified case wait for loading, then wait for the elements panel.\n    const {selectedPanel = DevToolsFrontendTab.DEFAULT_TAB, canDock = false, queryParams = {}} = options;\n\n    if (selectedPanel.name !== DevToolsFrontendTab.DEFAULT_TAB.name) {\n      await this.page.evaluate(name => {\n        globalThis.localStorage.setItem('panel-selectedTab', `\"${name}\"`);\n      }, selectedPanel.name);\n    }\n\n    // Reload the DevTools frontend and await the elements panel.\n    await loadEmptyPageAndWaitForContent(this.page);\n    // omit \"can_dock=\" when it's false because appending \"can_dock=false\"\n    // will make getElementPosition in shared helpers unhappy\n    let url = canDock ? `${this.#frontendUrl}&can_dock=true` : this.#frontendUrl;\n\n    if (queryParams.panel) {\n      url += `&panel=${queryParams.panel}`;\n    }\n\n    await this.page.goto(url, {waitUntil: DEVTOOLS_WAITUNTIL_EVENTS});\n\n    if (!queryParams.panel && selectedPanel.selector) {\n      await this.page.waitForSelector(selectedPanel.selector);\n    }\n  }\n\n  /**\n   * Returns the current hostname of this frontend tab. This might not be\n   * consistent with the intial URL in case the page was navigated to\n   * a different origin.\n   */\n  hostname(): string {\n    const url = new URL(this.page.url());\n    return url.hostname;\n  }\n}\n\nexport async function loadEmptyPageAndWaitForContent(target: puppeteer.Page) {\n  await target.goto(EMPTY_PAGE, {waitUntil: EMPTY_PAGE_WAITUNTIL_EVENTS});\n}\n\nfunction getDebugPort(browser: puppeteer.Browser) {\n  const websocketUrl = browser.wsEndpoint();\n  const url = new URL(websocketUrl);\n  if (url.port) {\n    return url.port;\n  }\n  throw new Error(`Unable to find debug port: ${websocketUrl}`);\n}\n"]}