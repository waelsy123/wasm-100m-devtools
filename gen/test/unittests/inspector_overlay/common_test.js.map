{"version":3,"file":"common_test.js","sourceRoot":"","sources":["../../../../../../test/unittests/inspector_overlay/common_test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,MAAM,EAAC,MAAM,EAAC,GAAG,IAAI,CAAC;AAEtB,OAAO,EAAC,aAAa,EAAE,OAAO,EAAE,eAAe,EAAC,MAAM,sCAAsC,CAAC;AAE7F,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;IAC7B,EAAE,CAAC,yBAAyB,EAAE,GAAG,EAAE;QACjC,MAAM,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE,cAAc,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kDAAkD,EAAE,GAAG,EAAE;QAC1D,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAE9C,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,0CAA0C,CAAC,CAAC;QACxF,MAAM,KAAK,GAAG,OAAO,CAAC,WAAW,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAEnD,MAAM,CAAC,UAAU,CAAC,KAAK,EAAE,eAAe,EAAE,oCAAoC,CAAC,CAAC;QAChF,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,EAAE,OAAO,EAAE,6BAA6B,CAAC,CAAC;QAE5E,MAAM,SAAS,GAAG,eAAe,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;QAE1D,MAAM,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,EAAE,iCAAiC,CAAC,CAAC;QACtE,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,WAAW,EAAE,aAAa,EAAE,gCAAgC,CAAC,CAAC;QAE3F,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,6CAA6C,CAAC,CAAC;QAC9F,OAAO,CAAC,cAAc,EAAE,CAAC;QAEzB,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC,EAAE,0BAA0B,CAAC,CAAC;IAC/E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yBAAyB,EAAE,GAAG,EAAE;QACjC,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC;QACpC,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC9B,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,QAAQ,EAAE,CAAC,CAAC,CAAC;IAC1E,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nconst {assert} = chai;\n\nimport {createElement, Overlay, createTextChild} from '../../../inspector_overlay/common.js';\n\ndescribe('common helper', () => {\n  it('can create DOM elements', () => {\n    assert.instanceOf(createElement('div', 'test'), HTMLDivElement);\n  });\n\n  it('exposes DOM manipulation methods on DOM elements', () => {\n    const wrapper = document.createElement('div');\n\n    assert.isTrue(Boolean(wrapper.createChild), 'createChild is available on DOM elements');\n    const child = wrapper.createChild('span', 'child');\n\n    assert.instanceOf(child, HTMLSpanElement, 'The right span element got created');\n    assert.strictEqual(child.className, 'child', 'The right className got set');\n\n    const textChild = createTextChild(wrapper, 'hello world');\n\n    assert.instanceOf(textChild, Text, 'The right text node got created');\n    assert.strictEqual(textChild.textContent, 'hello world', 'The right text content got set');\n\n    assert.isTrue(Boolean(wrapper.removeChildren), 'removeChildren is available on DOM elements');\n    wrapper.removeChildren();\n\n    assert.strictEqual(wrapper.childElementCount, 0, 'All children got removed');\n  });\n\n  it('sets the right platform', () => {\n    const overlay = new Overlay(window);\n    const platform = 'mac';\n    overlay.setPlatform(platform);\n    assert.isTrue(document.body.classList.contains(`platform-${platform}`));\n  });\n});\n"]}