{"version":3,"file":"EvaluatableJavaScriptSubstring_test.js","sourceRoot":"","sources":["../../../../../../../../test/unittests/front_end/entrypoints/formatter_worker/EvaluatableJavaScriptSubstring_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nconst {assert} = chai;\n\nimport * as FormatterWorker from '../../../../../front_end/entrypoints/formatter_worker/formatter_worker.js';\n\nfunction evaluatableJavaScriptSubstring(text: string): string {\n  return FormatterWorker.FormatterWorker.evaluatableJavaScriptSubstring(text);\n}\n\ndescribe('EvaluatableJavaScriptSubstring', () => {\n  it('handles identifiers correctly', () => {\n    assert.strictEqual(evaluatableJavaScriptSubstring('obj'), 'obj');\n    assert.strictEqual(evaluatableJavaScriptSubstring('obj]'), 'obj');\n    assert.strictEqual(evaluatableJavaScriptSubstring('obj)'), 'obj');\n    assert.strictEqual(evaluatableJavaScriptSubstring('obj='), 'obj');\n    assert.strictEqual(evaluatableJavaScriptSubstring('a+b'), 'a');\n  });\n\n  it('handles strings correctly', () => {\n    assert.strictEqual(evaluatableJavaScriptSubstring('\"o\"'), '\"o\"');\n    assert.strictEqual(evaluatableJavaScriptSubstring('\\'o\\''), '\\'o\\'');\n  });\n\n  it('handles numbers correctly', () => {\n    assert.strictEqual(evaluatableJavaScriptSubstring('1'), '1');\n    assert.strictEqual(evaluatableJavaScriptSubstring('1.40'), '1.40');\n  });\n\n  it('handles `this` correctly', () => {\n    assert.strictEqual(evaluatableJavaScriptSubstring('this'), 'this');\n    assert.strictEqual(evaluatableJavaScriptSubstring('this='), 'this');\n    assert.strictEqual(evaluatableJavaScriptSubstring('this = 1'), 'this');\n  });\n\n  it('handles named property access chains correctly', () => {\n    assert.strictEqual(evaluatableJavaScriptSubstring('a.b.c.d'), 'a.b.c.d');\n    assert.strictEqual(evaluatableJavaScriptSubstring('a.b.c.d = 1'), 'a.b.c.d');\n    assert.strictEqual(evaluatableJavaScriptSubstring('this.b.c.d'), 'this.b.c.d');\n    assert.strictEqual(evaluatableJavaScriptSubstring('this.b.c.d = 42'), 'this.b.c.d');\n    assert.strictEqual(evaluatableJavaScriptSubstring('\"foo\".toString'), '\"foo\".toString');\n  });\n\n  it('handles keyed property access chains correctly', () => {\n    assert.strictEqual(evaluatableJavaScriptSubstring('this[\"a\"]'), 'this[\"a\"]');\n    assert.strictEqual(evaluatableJavaScriptSubstring('this[\"a\"])'), 'this[\"a\"]');\n    assert.strictEqual(evaluatableJavaScriptSubstring('bar[foo][baz]'), 'bar[foo][baz]');\n    assert.strictEqual(evaluatableJavaScriptSubstring('bar[foo][baz] = '), 'bar[foo][baz]');\n    assert.strictEqual(evaluatableJavaScriptSubstring('obj[x + 1][0]'), 'obj[x + 1][0]');\n    assert.strictEqual(evaluatableJavaScriptSubstring('bar[foo[baz]]'), 'bar[foo[baz]]');\n    assert.strictEqual(evaluatableJavaScriptSubstring('bar[foo[baz]])'), 'bar[foo[baz]]');\n    assert.strictEqual(evaluatableJavaScriptSubstring('\"bar\"[0])'), '\"bar\"[0]');\n  });\n\n  it('handles mixed property access chain correctly', () => {\n    assert.strictEqual(evaluatableJavaScriptSubstring('a[b[c()]].x.#y'), 'a[b[c()]].x.#y');\n  });\n\n  it('handles private field access correctly', () => {\n    assert.strictEqual(evaluatableJavaScriptSubstring('this.#x'), 'this.#x');\n    assert.strictEqual(evaluatableJavaScriptSubstring('this.#x = 1'), 'this.#x');\n    assert.strictEqual(evaluatableJavaScriptSubstring('bar.#foo'), 'bar.#foo');\n  });\n\n  it('removes leading and trailing punctators', () => {\n    assert.strictEqual(evaluatableJavaScriptSubstring('.[)x.y.z'), 'x.y.z');\n    assert.strictEqual(evaluatableJavaScriptSubstring('x.y.z])='), 'x.y.z');\n    assert.strictEqual(evaluatableJavaScriptSubstring('.[)x.y.z])='), 'x.y.z');\n    assert.strictEqual(evaluatableJavaScriptSubstring('x.y.'), 'x.y');\n  });\n});\n"]}