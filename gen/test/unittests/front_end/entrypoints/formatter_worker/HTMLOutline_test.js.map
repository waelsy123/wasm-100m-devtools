{"version":3,"file":"HTMLOutline_test.js","sourceRoot":"","sources":["../../../../../../../../test/unittests/front_end/entrypoints/formatter_worker/HTMLOutline_test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,MAAM,EAAC,MAAM,EAAC,GAAG,IAAI,CAAC;AAEtB,OAAO,KAAK,eAAe,MAAM,2EAA2E,CAAC;AAO7G,SAAS,WAAW,CAAC,IAAY;IAC/B,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;QAC3B,MAAM,KAAK,GAAW,EAAE,CAAC;QACzB,eAAe,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,EAAC,KAAK,EAAE,WAAW,EAAC,EAAE,EAAE;YACrE,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC;YACrB,IAAI,WAAW,EAAE;gBACf,OAAO,CAAC,KAAK,CAAC,CAAC;aAChB;QACH,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC;AAED,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE;IAC3B,EAAE,CAAC,0BAA0B,EAAE,KAAK,IAAI,EAAE;QACxC,MAAM,KAAK,GAAG,MAAM,WAAW,CAAC;;;;;;UAM1B,CAAC,CAAC;QACR,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE;YACtB,EAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE,EAAC;YACrD,EAAC,KAAK,EAAE,8CAA8C,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE,EAAC;YAC5F,EAAC,KAAK,EAAE,eAAe,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE,EAAC;YAC7D,EAAC,KAAK,EAAE,eAAe,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE,EAAC;SAC9D,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;QAC1C,MAAM,KAAK,GAAG,MAAM,WAAW,CAAC;;;;;;;;;;;;;CAanC,CAAC,CAAC;QACC,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE;YACtB,EAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE,EAAC;YACvD,EAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE,EAAC;SACxD,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nconst {assert} = chai;\n\nimport * as FormatterWorker from '../../../../../front_end/entrypoints/formatter_worker/formatter_worker.js';\n\ntype Item = {\n  title: string,\n  subtitle?: string, line: number, column: number,\n};\n\nfunction htmlOutline(text: string): Promise<Item[]> {\n  return new Promise(resolve => {\n    const items: Item[] = [];\n    FormatterWorker.HTMLOutline.htmlOutline(text, ({chunk, isLastChunk}) => {\n      items.push(...chunk);\n      if (isLastChunk) {\n        resolve(items);\n      }\n    });\n  });\n}\n\ndescribe('HTMLOutline', () => {\n  it('handles inline <script>s', async () => {\n    const items = await htmlOutline(`<script>\n  function first() {}\n  function IrrelevantFunctionSeekOrMissEKGFreqUnderflow() {}\n  function someFunction1() {}\n  function someFunction2() {}\n  debugger;\n</script>`);\n    assert.deepEqual(items, [\n      {title: 'first', subtitle: '()', line: 1, column: 11},\n      {title: 'IrrelevantFunctionSeekOrMissEKGFreqUnderflow', subtitle: '()', line: 2, column: 11},\n      {title: 'someFunction1', subtitle: '()', line: 3, column: 11},\n      {title: 'someFunction2', subtitle: '()', line: 4, column: 11},\n    ]);\n  });\n\n  it('handles multiple <script>s', async () => {\n    const items = await htmlOutline(`<!DOCTYPE html>\n<html>\n  <head>\n    <script type=\"text/javascript\">function add(x, y) { return x + y; }</script>\n  </head>\n  <body>\n    <script>\n      const sub = (a, b) => {\n        return x + y;\n      }\n    </script>\n  </body>\n</html>\n`);\n    assert.deepEqual(items, [\n      {title: 'add', subtitle: '(x, y)', line: 3, column: 44},\n      {title: 'sub', subtitle: '(a, b)', line: 7, column: 12},\n    ]);\n  });\n});\n"]}