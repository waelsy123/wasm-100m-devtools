{"version":3,"file":"view_registration_test.js","sourceRoot":"","sources":["../../../../../../../../test/unittests/front_end/entrypoints/meta/view_registration_test.ts"],"names":[],"mappings":"AAAA,gEAAgE;AAChE,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,KAAK,SAAS,MAAM,wEAAwE,CAAC;AACpG,OAAO,KAAK,EAAE,MAAM,8CAA8C,CAAC;AACnE,OAAO,EAAC,uBAAuB,EAAC,MAAM,qCAAqC,CAAC;AAE5E,MAAM,EAAC,MAAM,EAAC,GAAG,IAAI,CAAC;AACtB,MAAM,QAAS,SAAQ,EAAE,CAAC,MAAM,CAAC,MAAM;IACrC,eAAe,CAAC,SAAiB;QAC/B,OAAO,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,mBAAmB,EAAE,CAAC;IACrE,CAAC;CACF;AACD,MAAM,MAAM,GAAG,UAAU,CAAC;AAC1B,MAAM,SAAS,GAAG,MAAM,CAAC;AACzB,MAAM,aAAa,GAAG,WAAW,CAAC;AAClC,MAAM,KAAK,GAAG,EAAE,CAAC;AACjB,uBAAuB,CAAC,mBAAmB,EAAE,GAAG,EAAE;IAChD,MAAM,CAAC,GAAG,EAAE;QACV,EAAE,CAAC,WAAW,CAAC,qBAAqB,CAAC;YACnC,QAAQ,qBAAyC;YACjD,EAAE,EAAE,MAAM;YACV,aAAa,EAAE,GAAsC,EAAE,CAAC,aAAkD;YAC1G,KAAK,EAAE,GAAsC,EAAE,CAAC,SAA8C;YAC9F,KAAK;YACL,WAAW,6BAA0C;YACrD,UAAU,EAAE,KAAK;YACjB,KAAK,CAAC,QAAQ;gBACZ,OAAO,IAAI,QAAQ,EAAE,CAAC;YACxB,CAAC;SACF,CAAC,CAAC;QACH,iFAAiF;QACjF,yBAAyB;QACzB,EAAE,CAAC,WAAW,CAAC,wBAAwB,CAAC;YACtC,IAAI,qBAAyC;YAC7C,QAAQ,EAAE,EAAE,CAAC,WAAW,CAAC,0BAA0B,CAAC,KAAK;YACzD,KAAK,CAAC,YAAY;gBAChB,OAAO,IAAI,QAAQ,EAAE,CAAC;YACxB,CAAC;SACF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;QAC3C,MAAM,iBAAiB,GAAG,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,MAAM,CAAqC,CAAC;QACjH,MAAM,UAAU,GAAG,MAAM,iBAAiB,CAAC,MAAM,EAAE,CAAC;QACpD,MAAM,CAAC,UAAU,CAAC,UAAU,EAAE,QAAQ,EAAE,6BAA6B,CAAC,CAAC;QACvE,MAAM,CAAC,WAAW,CAAC,iBAAiB,CAAC,KAAK,EAAE,EAAE,SAAS,EAAE,sCAAsC,CAAC,CAAC;QACjG,MAAM,CAAC,WAAW,CAAC,iBAAiB,CAAC,aAAa,EAAE,EAAE,aAAa,EAAE,4CAA4C,CAAC,CAAC;IACrH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gDAAgD,EAAE,GAAG,EAAE;QACxD,MAAM,WAAW,GAAG,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;QAC5F,MAAM,gBAAgB,GAAG,WAAW,CAAC,MAAM,CACvC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,aAAa;YACxC,OAAO,CAAC,QAAQ,EAAE,KAAK,EAAE,CAAC,WAAW,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC;QAChF,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,kEAAkE,CAAC,CAAC;IACrH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wCAAwC,EAAE,GAAG,EAAE;QAChD,MAAM,aAAa,GAAG,EAAE,CAAC,WAAW,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC;QACtE,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAC7B,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE;YACvB,EAAE,CAAC,WAAW,CAAC,qBAAqB,CAAC;gBACnC,EAAE,EAAE,MAAM;gBACV,aAAa,EAAE,GAAsC,EAAE,CAAC,aAAkD;gBAC1G,KAAK,EAAE,GAAsC,EAAE,CAAC,SAA8C;gBAC9F,KAAK,CAAC,QAAQ;oBACZ,OAAO,IAAI,QAAQ,EAAE,CAAC;gBACxB,CAAC;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../../../../front_end/core/platform/platform.js';\nimport * as QuickOpen from '../../../../../front_end/ui/legacy/components/quick_open/quick_open.js';\nimport * as UI from '../../../../../front_end/ui/legacy/legacy.js';\nimport {describeWithEnvironment} from '../../helpers/EnvironmentHelpers.js';\n\nconst {assert} = chai;\nclass MockView extends UI.Widget.Widget implements UI.View.ViewLocationResolver {\n  resolveLocation(_location: string) {\n    return UI.ViewManager.ViewManager.instance().createStackLocation();\n  }\n}\nconst viewId = 'mockView';\nconst viewTitle = 'Mock';\nconst commandPrompt = 'Show Mock';\nconst order = 10;\ndescribeWithEnvironment('View registration', () => {\n  before(() => {\n    UI.ViewManager.registerViewExtension({\n      location: UI.ViewManager.ViewLocationValues.PANEL,\n      id: viewId,\n      commandPrompt: (): Platform.UIString.LocalizedString => commandPrompt as Platform.UIString.LocalizedString,\n      title: (): Platform.UIString.LocalizedString => viewTitle as Platform.UIString.LocalizedString,\n      order,\n      persistence: UI.ViewManager.ViewPersistence.PERMANENT,\n      hasToolbar: false,\n      async loadView() {\n        return new MockView();\n      },\n    });\n    // The location resolver needs to be registered to add the command to show a view\n    // from the command menu.\n    UI.ViewManager.registerLocationResolver({\n      name: UI.ViewManager.ViewLocationValues.PANEL,\n      category: UI.ViewManager.ViewLocationCategoryValues.PANEL,\n      async loadResolver() {\n        return new MockView();\n      },\n    });\n  });\n\n  it('retrieves a registered view', async () => {\n    const preRegisteredView = UI.ViewManager.ViewManager.instance().view(viewId) as UI.ViewManager.PreRegisteredView;\n    const mockWidget = await preRegisteredView.widget();\n    assert.instanceOf(mockWidget, MockView, 'View did not load correctly');\n    assert.strictEqual(preRegisteredView.title(), viewTitle, 'View title is not returned correctly');\n    assert.strictEqual(preRegisteredView.commandPrompt(), commandPrompt, 'Command for view is not returned correctly');\n  });\n\n  it('adds command for showing a pre registered view', () => {\n    const allCommands = QuickOpen.CommandMenu.CommandMenu.instance({forceNew: true}).commands();\n    const filteredCommands = allCommands.filter(\n        command => command.title() === commandPrompt &&\n            command.category() === UI.ViewManager.ViewLocationCategoryValues.PANEL);\n    assert.strictEqual(filteredCommands.length, 1, 'Command for showing a preregistered view was not added correctly');\n  });\n\n  it('deletes a registered view using its id', () => {\n    const removalResult = UI.ViewManager.maybeRemoveViewExtension(viewId);\n    assert.isTrue(removalResult);\n    assert.doesNotThrow(() => {\n      UI.ViewManager.registerViewExtension({\n        id: viewId,\n        commandPrompt: (): Platform.UIString.LocalizedString => commandPrompt as Platform.UIString.LocalizedString,\n        title: (): Platform.UIString.LocalizedString => viewTitle as Platform.UIString.LocalizedString,\n        async loadView() {\n          return new MockView();\n        },\n      });\n    });\n  });\n});\n"]}