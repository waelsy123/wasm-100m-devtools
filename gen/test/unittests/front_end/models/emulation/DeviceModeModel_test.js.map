{"version":3,"file":"DeviceModeModel_test.js","sourceRoot":"","sources":["../../../../../../../../test/unittests/front_end/models/emulation/DeviceModeModel_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as EmulationModel from '../../../../../front_end/models/emulation/emulation.js';\n\ndescribe('Insets', () => {\n  it('can be instantiated without issues', () => {\n    const insets = new EmulationModel.DeviceModeModel.Insets(1, 2, 3, 4);\n    assert.strictEqual(insets.left, 1, 'left value was not set correctly');\n    assert.strictEqual(insets.top, 2, 'top value was not set correctly');\n    assert.strictEqual(insets.right, 3, 'right value was not set correctly');\n    assert.strictEqual(insets.bottom, 4, 'bottom value was not set correctly');\n  });\n\n  it('is able to check if it is equal to another Insets', () => {\n    const insets1 = new EmulationModel.DeviceModeModel.Insets(1, 2, 3, 4);\n    const insets2 = new EmulationModel.DeviceModeModel.Insets(5, 6, 7, 7);\n    const insets3 = new EmulationModel.DeviceModeModel.Insets(1, 2, 3, 4);\n    const result1 = insets1.isEqual(insets2);\n    const result2 = insets1.isEqual(insets3);\n    assert.isFalse(result1, 'insets2 was considered equal');\n    assert.isTrue(result2, 'insets3 was not considered equal');\n  });\n});\n\ndescribe('Rect', () => {\n  it('can be instantiated without issues', () => {\n    const rect = new EmulationModel.DeviceModeModel.Rect(1, 2, 3, 4);\n    assert.strictEqual(rect.left, 1, 'left value was not set correctly');\n    assert.strictEqual(rect.top, 2, 'top value was not set correctly');\n    assert.strictEqual(rect.width, 3, 'width value was not set correctly');\n    assert.strictEqual(rect.height, 4, 'height value was not set correctly');\n  });\n\n  it('is able to check if it is equal to another Rect', () => {\n    const rect1 = new EmulationModel.DeviceModeModel.Rect(1, 2, 3, 4);\n    const rect2 = new EmulationModel.DeviceModeModel.Rect(5, 6, 7, 7);\n    const rect3 = new EmulationModel.DeviceModeModel.Rect(1, 2, 3, 4);\n    const result1 = rect1.isEqual(rect2);\n    const result2 = rect1.isEqual(rect3);\n    assert.isFalse(result1, 'rect2 was considered equal');\n    assert.isTrue(result2, 'rect3 was not considered equal');\n  });\n\n  it('is able to be scaled to a certain value', () => {\n    const rect = new EmulationModel.DeviceModeModel.Rect(1, 2, 3, 4);\n    const resultRect = rect.scale(2);\n    assert.strictEqual(resultRect.left, 2, 'left value was not set correctly');\n    assert.strictEqual(resultRect.top, 4, 'top value was not set correctly');\n    assert.strictEqual(resultRect.width, 6, 'width value was not set correctly');\n    assert.strictEqual(resultRect.height, 8, 'height value was not set correctly');\n  });\n\n  it('is able to return a rectangle relative to an origin', () => {\n    const rect = new EmulationModel.DeviceModeModel.Rect(5, 6, 7, 8);\n    const origin = new EmulationModel.DeviceModeModel.Rect(1, 2, 3, 4);\n    const result = rect.relativeTo(origin);\n    assert.strictEqual(result.left, 4, 'left value was not set correctly');\n    assert.strictEqual(result.top, 4, 'top value was not set correctly');\n    assert.strictEqual(result.width, 7, 'width value was not set correctly');\n    assert.strictEqual(result.height, 8, 'height value was not set correctly');\n  });\n\n  it('is able to return a rectangle rebased to an origin', () => {\n    const rect = new EmulationModel.DeviceModeModel.Rect(5, 6, 7, 8);\n    const origin = new EmulationModel.DeviceModeModel.Rect(1, 2, 3, 4);\n    const result = rect.rebaseTo(origin);\n    assert.strictEqual(result.left, 6, 'left value was not set correctly');\n    assert.strictEqual(result.top, 8, 'top value was not set correctly');\n    assert.strictEqual(result.width, 7, 'width value was not set correctly');\n    assert.strictEqual(result.height, 8, 'height value was not set correctly');\n  });\n});\n"]}