{"version":3,"file":"NetworkPersistenceManager_test.js","sourceRoot":"","sources":["../../../../../../../../test/unittests/front_end/models/persistence/NetworkPersistenceManager_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nconst {assert} = chai;\n\nimport * as Bindings from '../../../../../front_end/models/bindings/bindings.js';\nimport * as Persistence from '../../../../../front_end/models/persistence/persistence.js';\nimport * as Root from '../../../../../front_end/core/root/root.js';\nimport * as SDK from '../../../../../front_end/core/sdk/sdk.js';\nimport * as Workspace from '../../../../../front_end/models/workspace/workspace.js';\nimport type * as Platform from '../../../../../front_end/core/platform/platform.js';\nimport {describeWithMockConnection} from '../../helpers/MockConnection.js';\nimport {initializeGlobalVars, deinitializeGlobalVars, createTarget} from '../../helpers/EnvironmentHelpers.js';\nimport {createUISourceCode} from '../../helpers/UISourceCodeHelpers.js';\n\nasync function setUpEnvironment() {\n  const workspace = Workspace.Workspace.WorkspaceImpl.instance();\n  const targetManager = SDK.TargetManager.TargetManager.instance();\n  const debuggerWorkspaceBinding =\n      Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance({forceNew: true, targetManager, workspace});\n  const breakpointManager = Bindings.BreakpointManager.BreakpointManager.instance(\n      {forceNew: true, targetManager, workspace, debuggerWorkspaceBinding});\n  Persistence.Persistence.PersistenceImpl.instance({forceNew: true, workspace, breakpointManager});\n  const networkPersistenceManager =\n      Persistence.NetworkPersistenceManager.NetworkPersistenceManager.instance({forceNew: true, workspace});\n  return {networkPersistenceManager};\n}\n\nasync function setUpHeaderOverrides() {\n  createTarget();\n  const {networkPersistenceManager} = await setUpEnvironment();\n  const uiSourceCodeMap = new Map<string, Workspace.UISourceCode.UISourceCode>();\n  const fileSystem = {\n    fileSystemPath: () => 'file:///path/to/overrides',\n    fileSystemBaseURL: 'file:///path/to/overrides/',\n    uiSourceCodeForURL: (url: string): Workspace.UISourceCode.UISourceCode | null => uiSourceCodeMap.get(url) || null,\n  } as unknown as Persistence.FileSystemWorkspaceBinding.FileSystem;\n\n  const globalHeaders = `[\n    {\n      \"applyTo\": \"*\",\n      \"headers\": {\n        \"age\": \"overridden\"\n      }\n    }\n  ]`;\n\n  const exampleHeaders = `[\n    {\n      \"applyTo\": \"index.html\",\n      \"headers\": {\n        \"index-only\": \"only added to index.html\"\n      }\n    },\n    {\n      \"applyTo\": \"*.css\",\n      \"headers\": {\n        \"css-only\": \"only added to css files\"\n      }\n    },\n    {\n      \"applyTo\": \"path/to/*.js\",\n      \"headers\": {\n        \"another-header\": \"only added to specific path\"\n      }\n    }\n  ]`;\n\n  const exampleSourceCode = {\n    requestContent: () => {\n      return Promise.resolve({content: exampleHeaders});\n    },\n    url: () => 'file:///path/to/overrides/www.example.com/.headers',\n    project: () => fileSystem,\n    name: () => '.headers',\n  } as unknown as Workspace.UISourceCode.UISourceCode;\n\n  const globalSourceCode = {\n    requestContent: () => {\n      return Promise.resolve({content: globalHeaders});\n    },\n    url: () => 'file:///path/to/overrides/.headers',\n    project: () => fileSystem,\n    name: () => '.headers',\n  } as unknown as Workspace.UISourceCode.UISourceCode;\n\n  uiSourceCodeMap.set(exampleSourceCode.url(), exampleSourceCode);\n  uiSourceCodeMap.set(globalSourceCode.url(), globalSourceCode);\n\n  const mockProject = {\n    uiSourceCodes: () => [exampleSourceCode, globalSourceCode],\n    id: () => 'file:///path/to/overrides',\n  } as unknown as Workspace.Workspace.Project;\n\n  await networkPersistenceManager.setProject(mockProject);\n  SDK.NetworkManager.MultitargetNetworkManager.instance().setInterceptionHandlerForPatterns = async () => {};\n  await networkPersistenceManager.updateInterceptionPatternsForTests();\n  return {networkPersistenceManager};\n}\n\ndescribeWithMockConnection('NetworkPersistenceManager', () => {\n  beforeEach(() => {\n    Root.Runtime.experiments.register(Root.Runtime.ExperimentName.HEADER_OVERRIDES, '');\n    Root.Runtime.experiments.enableForTest(Root.Runtime.ExperimentName.HEADER_OVERRIDES);\n  });\n\n  it('merges request headers with override without overlap', async () => {\n    const {networkPersistenceManager} = await setUpHeaderOverrides();\n    const interceptedRequest = {\n      request: {\n        url: 'https://www.example.com/',\n      },\n      responseHeaders: [\n        {name: 'server', value: 'DevTools mock server'},\n      ],\n    } as SDK.NetworkManager.InterceptedRequest;\n\n    const expected = [\n      {name: 'server', value: 'DevTools mock server'},\n      {name: 'age', value: 'overridden'},\n      {name: 'index-only', value: 'only added to index.html'},\n    ];\n    assert.deepEqual(await networkPersistenceManager.handleHeaderInterception(interceptedRequest), expected);\n  });\n\n  it('merges request headers with override with overlap', async () => {\n    const {networkPersistenceManager} = await setUpHeaderOverrides();\n    const interceptedRequest = {\n      request: {\n        url: 'https://www.example.com/index.html',\n      },\n      responseHeaders: [\n        {name: 'server', value: 'DevTools mock server'},\n        {name: 'age', value: '1'},\n      ],\n    } as SDK.NetworkManager.InterceptedRequest;\n\n    const expected = [\n      {name: 'server', value: 'DevTools mock server'},\n      {name: 'age', value: 'overridden'},\n      {name: 'index-only', value: 'only added to index.html'},\n    ];\n    assert.deepEqual(await networkPersistenceManager.handleHeaderInterception(interceptedRequest), expected);\n  });\n\n  it('merges request headers with override with file type wildcard', async () => {\n    const {networkPersistenceManager} = await setUpHeaderOverrides();\n    const interceptedRequest = {\n      request: {\n        url: 'https://www.example.com/styles.css',\n      },\n      responseHeaders: [\n        {name: 'server', value: 'DevTools mock server'},\n        {name: 'age', value: '1'},\n      ],\n    } as SDK.NetworkManager.InterceptedRequest;\n\n    const expected = [\n      {name: 'server', value: 'DevTools mock server'},\n      {name: 'age', value: 'overridden'},\n      {name: 'css-only', value: 'only added to css files'},\n    ];\n    assert.deepEqual(await networkPersistenceManager.handleHeaderInterception(interceptedRequest), expected);\n  });\n\n  it('merges request headers with override with specific path', async () => {\n    const {networkPersistenceManager} = await setUpHeaderOverrides();\n    const interceptedRequest = {\n      request: {\n        url: 'https://www.example.com/path/to/script.js',\n      },\n      responseHeaders: [\n        {name: 'server', value: 'DevTools mock server'},\n        {name: 'age', value: '1'},\n      ],\n    } as SDK.NetworkManager.InterceptedRequest;\n\n    const expected = [\n      {name: 'server', value: 'DevTools mock server'},\n      {name: 'age', value: 'overridden'},\n      {name: 'another-header', value: 'only added to specific path'},\n    ];\n    assert.deepEqual(await networkPersistenceManager.handleHeaderInterception(interceptedRequest), expected);\n  });\n\n  it('merges request headers only when domain matches', async () => {\n    const {networkPersistenceManager} = await setUpHeaderOverrides();\n    const interceptedRequest = {\n      request: {\n        url: 'https://www.web.dev/index.html',\n      },\n      responseHeaders: [\n        {name: 'server', value: 'DevTools mock server'},\n      ],\n    } as SDK.NetworkManager.InterceptedRequest;\n\n    const expected = [\n      {name: 'server', value: 'DevTools mock server'},\n      {name: 'age', value: 'overridden'},\n    ];\n    assert.deepEqual(await networkPersistenceManager.handleHeaderInterception(interceptedRequest), expected);\n  });\n\n  it('updates active state when target detach and attach', async () => {\n    const {networkPersistenceManager} = await setUpEnvironment();\n    const {project} =\n        createUISourceCode({url: 'file:///tmp' as Platform.DevToolsPath.UrlString, mimeType: 'text/plain'});\n    await networkPersistenceManager.setProject(project);\n    const targetManager = SDK.TargetManager.TargetManager.instance();\n    assert.isNull(targetManager.mainTarget());\n    assert.isFalse(networkPersistenceManager.active());\n\n    const target = await createTarget();\n    assert.isTrue(networkPersistenceManager.active());\n\n    await targetManager.removeTarget(target);\n\n    assert.isFalse(networkPersistenceManager.active());\n  });\n});\n\ndescribe('NetworkPersistenceManager', () => {\n  before(async () => {\n    await initializeGlobalVars();\n  });\n  after(async () => {\n    await deinitializeGlobalVars();\n  });\n\n  it('escapes patterns to be used in RegExes', () => {\n    assert.strictEqual(Persistence.NetworkPersistenceManager.escapeRegex('www.example.com/'), 'www\\\\.example\\\\.com/');\n    assert.strictEqual(\n        Persistence.NetworkPersistenceManager.escapeRegex('www.example.com/index.html'),\n        'www\\\\.example\\\\.com/index\\\\.html');\n    assert.strictEqual(\n        Persistence.NetworkPersistenceManager.escapeRegex('www.example.com/*'), 'www\\\\.example\\\\.com/.*');\n    assert.strictEqual(\n        Persistence.NetworkPersistenceManager.escapeRegex('www.example.com/*.js'), 'www\\\\.example\\\\.com/.*\\\\.js');\n    assert.strictEqual(\n        Persistence.NetworkPersistenceManager.escapeRegex('www.example.com/file([{with-special$_^chars}])'),\n        'www\\\\.example\\\\.com/file\\\\(\\\\[\\\\{with\\\\-special\\\\$_\\\\^chars\\\\}\\\\]\\\\)');\n    assert.strictEqual(\n        Persistence.NetworkPersistenceManager.escapeRegex('www.example.com/page.html?foo=bar'),\n        'www\\\\.example\\\\.com/page\\\\.html\\\\?foo=bar');\n    assert.strictEqual(\n        Persistence.NetworkPersistenceManager.escapeRegex('www.example.com/*?foo=bar'),\n        'www\\\\.example\\\\.com/.*\\\\?foo=bar');\n  });\n\n  it('detects when the tail of a path matches with a default index file', () => {\n    assert.deepEqual(\n        Persistence.NetworkPersistenceManager.extractDirectoryIndex('index.html'), {head: '', tail: 'index.html'});\n    assert.deepEqual(\n        Persistence.NetworkPersistenceManager.extractDirectoryIndex('index.htm'), {head: '', tail: 'index.htm'});\n    assert.deepEqual(\n        Persistence.NetworkPersistenceManager.extractDirectoryIndex('index.php'), {head: '', tail: 'index.php'});\n    assert.deepEqual(Persistence.NetworkPersistenceManager.extractDirectoryIndex('index.ht'), {head: 'index.ht'});\n    assert.deepEqual(Persistence.NetworkPersistenceManager.extractDirectoryIndex('*.html'), {head: '', tail: '*.html'});\n    assert.deepEqual(Persistence.NetworkPersistenceManager.extractDirectoryIndex('*.htm'), {head: '', tail: '*.htm'});\n    assert.deepEqual(\n        Persistence.NetworkPersistenceManager.extractDirectoryIndex('path/*.html'), {head: 'path/', tail: '*.html'});\n    assert.deepEqual(Persistence.NetworkPersistenceManager.extractDirectoryIndex('foo*.html'), {head: 'foo*.html'});\n    assert.deepEqual(Persistence.NetworkPersistenceManager.extractDirectoryIndex('a*'), {head: 'a*'});\n    assert.deepEqual(Persistence.NetworkPersistenceManager.extractDirectoryIndex('a/*'), {head: 'a/', tail: '*'});\n  });\n\n  it('merges headers which do not overlap', async () => {\n    const {networkPersistenceManager} = await setUpEnvironment();\n    const baseHeaders = [{\n      name: 'age',\n      value: '0',\n    }];\n    const overrideHeaders = {\n      'accept-ranges': 'bytes',\n    };\n    const merged = [\n      {name: 'age', value: '0'},\n      {name: 'accept-ranges', value: 'bytes'},\n    ];\n    assert.deepEqual(networkPersistenceManager.mergeHeaders(baseHeaders, overrideHeaders), merged);\n  });\n\n  it('merges headers which overlap', async () => {\n    const {networkPersistenceManager} = await setUpEnvironment();\n    const baseHeaders = [{\n      name: 'age',\n      value: '0',\n    }];\n    const overrideHeaders = {\n      'accept-ranges': 'bytes',\n      'age': '1',\n    };\n    const merged = [\n      {name: 'age', value: '1'},\n      {name: 'accept-ranges', value: 'bytes'},\n    ];\n    assert.deepEqual(networkPersistenceManager.mergeHeaders(baseHeaders, overrideHeaders), merged);\n  });\n\n  it('generates header patterns', async () => {\n    const {networkPersistenceManager} = await setUpEnvironment();\n    const headers = `[\n      {\n        \"applyTo\": \"*\",\n        \"headers\": {\n          \"age\": \"0\"\n        }\n      },\n      {\n        \"applyTo\": \"page.html\",\n        \"headers\": {\n          \"age\": \"1\"\n        }\n      },\n      {\n        \"applyTo\": \"index.html\",\n        \"headers\": {\n          \"age\": \"2\"\n        }\n      },\n      {\n        \"applyTo\": \"nested/path/*.js\",\n        \"headers\": {\n          \"age\": \"3\"\n        }\n      },\n      {\n        \"applyTo\": \"*/path/*.js\",\n        \"headers\": {\n          \"age\": \"4\"\n        }\n      }\n    ]`;\n\n    const fileSystem = {\n      fileSystemPath: () => 'file:///path/to/overrides',\n      fileSystemBaseURL: 'file:///path/to/overrides/',\n    } as unknown as Persistence.FileSystemWorkspaceBinding.FileSystem;\n\n    const uiSourceCode = {\n      requestContent: () => {\n        return Promise.resolve({content: headers});\n      },\n      url: () => 'file:///path/to/overrides/www.example.com/.headers',\n      project: () => fileSystem,\n    } as unknown as Workspace.UISourceCode.UISourceCode;\n\n    const expectedPatterns = [\n      'http?://www.example.com/*',\n      'http?://www.example.com/page.html',\n      'http?://www.example.com/index.html',\n      'http?://www.example.com/',\n      'http?://www.example.com/nested/path/*.js',\n      'http?://www.example.com/*/path/*.js',\n    ];\n\n    const {headerPatterns, path, overridesWithRegex} =\n        await networkPersistenceManager.generateHeaderPatterns(uiSourceCode);\n    assert.deepEqual(Array.from(headerPatterns).sort(), expectedPatterns.sort());\n\n    const expectedMapping = [\n      {\n        applyTo: /^https?:\\/\\/www\\.example\\.com\\/(.*)?$/.toString(),\n        headers: {age: '0'},\n      },\n      {\n        applyTo: /^https?:\\/\\/www\\.example\\.com\\/page\\.html$/.toString(),\n        headers: {age: '1'},\n      },\n      {\n        applyTo: /^https?:\\/\\/www\\.example\\.com\\/(index\\.html)?$/.toString(),\n        headers: {age: '2'},\n      },\n      {\n        applyTo: /^https?:\\/\\/www\\.example\\.com\\/nested\\/path\\/.*\\.js$/.toString(),\n        headers: {age: '3'},\n      },\n      {\n        applyTo: /^https?:\\/\\/www\\.example\\.com\\/.*\\/path\\/.*\\.js$/.toString(),\n        headers: {age: '4'},\n      },\n    ];\n\n    assert.strictEqual(path, 'www.example.com/');\n    const actualMapping = overridesWithRegex.map(\n        override => ({applyTo: override.applyToRegex.toString(), headers: override.headers}),\n    );\n    assert.deepEqual(actualMapping, expectedMapping);\n  });\n});\n"]}