{"version":3,"file":"AttributionReportingIssue_test.js","sourceRoot":"","sources":["../../../../../../../../test/unittests/front_end/models/issues_manager/AttributionReportingIssue_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nconst {assert} = chai;\n\nimport type * as SDK from '../../../../../front_end/core/sdk/sdk.js';\nimport * as IssuesManager from '../../../../../front_end/models/issues_manager/issues_manager.js';\nimport * as Protocol from '../../../../../front_end/generated/protocol.js';\n\nimport {MockIssuesModel} from './MockIssuesModel.js';\n\ndescribe('AttributionReportingIssue', () => {\n  const mockModel = new MockIssuesModel([]) as unknown as SDK.IssuesModel.IssuesModel;\n  function createProtocolIssueWithDetails(\n      attributionReportingIssueDetails: Protocol.Audits.AttributionReportingIssueDetails):\n      Protocol.Audits.InspectorIssue {\n    return {\n      code: Protocol.Audits.InspectorIssueCode.AttributionReportingIssue,\n      details: {attributionReportingIssueDetails},\n    };\n  }\n\n  it('creates different frontend issues for the same InvalidAttributionData protocol issue', () => {\n    const violationType = Protocol.Audits.AttributionReportingIssueType.InvalidAttributionData;\n    const invalidDataDetails = {violationType, invalidParameter: 'NotANumber'};\n    const missingDataDetails = {violationType};\n\n    const invalidDataFrontendIssue =\n        IssuesManager.AttributionReportingIssue.AttributionReportingIssue.fromInspectorIssue(\n            mockModel, createProtocolIssueWithDetails(invalidDataDetails));\n    const missingDataFrontendIssue =\n        IssuesManager.AttributionReportingIssue.AttributionReportingIssue.fromInspectorIssue(\n            mockModel, createProtocolIssueWithDetails(missingDataDetails));\n\n    assert.notStrictEqual(invalidDataFrontendIssue[0].code(), missingDataFrontendIssue[0].code());\n  });\n\n  it('creates different frontend issues for the same AttributionSourceUntrustworthyOrigin protocol issue', () => {\n    const violationType = Protocol.Audits.AttributionReportingIssueType.AttributionSourceUntrustworthyOrigin;\n    const withFrameDetails = {violationType, frame: {frameId: 'frameId1' as Protocol.Page.FrameId}};\n    const withoutFrameDetails = {violationType};\n\n    const frontendIssueWithFrame = IssuesManager.AttributionReportingIssue.AttributionReportingIssue.fromInspectorIssue(\n        mockModel, createProtocolIssueWithDetails(withFrameDetails));\n    const frontendIssueWithoutFrame =\n        IssuesManager.AttributionReportingIssue.AttributionReportingIssue.fromInspectorIssue(\n            mockModel, createProtocolIssueWithDetails(withoutFrameDetails));\n\n    assert.notStrictEqual(frontendIssueWithFrame[0].code(), frontendIssueWithoutFrame[0].code());\n  });\n\n  it('creates different frontend issues for the same AttributionUntrustworthyOrigin protocol issue', () => {\n    const violationType = Protocol.Audits.AttributionReportingIssueType.AttributionUntrustworthyOrigin;\n    const withFrameDetails = {violationType, frame: {frameId: 'frameId1' as Protocol.Page.FrameId}};\n    const withoutFrameDetails = {violationType};\n\n    const frontendIssueWithFrame = IssuesManager.AttributionReportingIssue.AttributionReportingIssue.fromInspectorIssue(\n        mockModel, createProtocolIssueWithDetails(withFrameDetails));\n    const frontendIssueWithoutFrame =\n        IssuesManager.AttributionReportingIssue.AttributionReportingIssue.fromInspectorIssue(\n            mockModel, createProtocolIssueWithDetails(withoutFrameDetails));\n\n    assert.notStrictEqual(frontendIssueWithFrame[0].code(), frontendIssueWithoutFrame[0].code());\n  });\n});\n"]}