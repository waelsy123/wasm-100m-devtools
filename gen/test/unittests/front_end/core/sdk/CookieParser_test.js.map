{"version":3,"file":"CookieParser_test.js","sourceRoot":"","sources":["../../../../../../../../test/unittests/front_end/core/sdk/CookieParser_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nconst {assert} = chai;\n\nimport * as SDK from '../../../../../front_end/core/sdk/sdk.js';\nimport * as Protocol from '../../../../../front_end/generated/protocol.js';\n\nfunction ensureCookiesExistOrFailTest(cookies: SDK.Cookie.Cookie[]|null): cookies is SDK.Cookie.Cookie[] {\n  if (!cookies) {\n    assert.fail('expected cookies to exist');\n    return false;\n  }\n  return true;\n}\n\ninterface CookieExpectation {\n  name: string;\n  value: string;\n  httpOnly?: boolean;\n  sameSite?: Protocol.Network.CookieSameSite;\n  secure?: boolean;\n  session?: boolean;\n  path?: string;\n  domain?: string;\n  expires?: null|number|string;\n  size?: number;\n  priority?: Protocol.Network.CookiePriority;\n}\n\nconst requestDate = new Date('Mon Oct 18 2010 17:00:00 GMT+0000');\n\nconst cookieExpectationDefaults: CookieExpectation = {\n  name: 'name',\n  value: 'value',\n  httpOnly: false,\n  sameSite: undefined,\n  secure: false,\n  session: true,\n  path: undefined,\n  domain: undefined,\n  expires: null,\n  size: undefined,\n  priority: Protocol.Network.CookiePriority.Medium,\n};\n\nfunction expectCookie(cookie: SDK.Cookie.Cookie, cookieExpectation: CookieExpectation) {\n  const expectation = {...cookieExpectationDefaults, ...cookieExpectation};\n  assert.strictEqual(cookie.name(), expectation.name, 'name');\n  assert.strictEqual(cookie.value(), expectation.value, 'value');\n  assert.strictEqual(cookie.httpOnly(), expectation.httpOnly, 'httpOnly');\n  assert.strictEqual(cookie.sameSite(), expectation.sameSite, 'sameSite');\n  assert.strictEqual(cookie.secure(), expectation.secure, 'secure');\n  assert.strictEqual(cookie.session(), expectation.session, 'session');\n  assert.strictEqual(cookie.path(), expectation.path, 'path');\n  assert.strictEqual(cookie.domain(), expectation.domain, 'domain');\n  const date = cookie.expiresDate(requestDate);\n  if (typeof expectation.expires === 'string') {\n    assert.isNotNull(date);\n    assert.strictEqual((date as Date).toISOString(), expectation.expires, 'expires');\n  } else if (typeof expectation.expires === 'number') {\n    assert.isNotNull(date);\n    assert.strictEqual((date as Date).getTime(), expectation.expires, 'expires');\n  } else {\n    assert.strictEqual(date, expectation.expires, 'expires');\n  }\n  assert.strictEqual(cookie.size(), expectation.size, 'size');\n  assert.strictEqual(cookie.priority(), expectation.priority, 'priority');\n}\n\ndescribe('CookieParser', () => {\n  function parseAndExpectSetCookies(setCookieString: string, cookieExpectations: CookieExpectation[]) {\n    const cookies = SDK.CookieParser.CookieParser.parseSetCookie(setCookieString);\n    if (ensureCookiesExistOrFailTest(cookies)) {\n      assert.lengthOf(\n          cookies, cookieExpectations.length,\n          'Expected number of parsed cookies to agree with number of expected cookies');\n      for (let i = 0; i < cookieExpectations.length; ++i) {\n        expectCookie(cookies[i], cookieExpectations[i]);\n      }\n    }\n  }\n\n  describe('parseSetCookie', () => {\n    it('parses basic cookies', () => {\n      parseAndExpectSetCookies('foo=bar', [{name: 'foo', value: 'bar', size: 7}]);\n    });\n\n    it('recognises expires attribute', () => {\n      parseAndExpectSetCookies(\n          'foo=bar; expires=Wed, 21 Oct 2015 07:28:00 GMT;',\n          [{name: 'foo', value: 'bar', expires: '2015-10-21T07:28:00.000Z', session: false, size: 47}]);\n      parseAndExpectSetCookies(\n          'foo=bar; expires=Wed, 21 Oct 2015 07:28:00 GMT;',\n          [{name: 'foo', value: 'bar', expires: '2015-10-21T07:28:00.000Z', session: false, size: 47}]);\n    });\n\n    it('handles multiple SetCookies separated by line breaks', () => {\n      parseAndExpectSetCookies(\n          `a=b\n      c=d\n      f`,\n          [{name: 'a', value: 'b', size: 10}, {name: 'c', value: 'd', size: 10}, {name: '', value: 'f', size: 1}]);\n    });\n\n    it('handles path and domain values ', () => {\n      parseAndExpectSetCookies(\n          'cookie1 = value; Path=/; Domain=.example.com;',\n          [{name: 'cookie1', value: 'value', path: '/', domain: '.example.com', size: 45}]);\n    });\n\n    it('handles a domain value with leading spaces', () => {\n      parseAndExpectSetCookies(\n          'cookie1 = value; Path=/; Domain=  .example.com;',\n          [{name: 'cookie1', value: 'value', path: '/', domain: '.example.com', size: 47}]);\n    });\n\n    it('handles multiple cookies with path and domain values', () => {\n      parseAndExpectSetCookies(\n          `cookie1 = value; Path=/; Domain=  .example.com\n      Cookie2 = value2; Path = /foo; Domain = foo.example.com`,\n          [\n            {name: 'cookie1', value: 'value', path: '/', domain: '.example.com', size: 53},\n            {name: 'Cookie2', value: 'value2', path: '/foo', domain: 'foo.example.com', size: 55},\n          ]);\n    });\n\n    it('handles multiple cookies with an invalid attribute', () => {\n      parseAndExpectSetCookies(\n          `cookie1 = value; expires = Mon, Oct 18 2010 17:00 GMT+0000; Domain   =.example.com\n      Cookie2 = value2; Path = /foo; DOMAIN = foo.example.com; HttpOnly; Secure; Discard;`,\n          [\n            {name: 'cookie1', value: 'value', expires: 1287421200000, domain: '.example.com', session: false, size: 89},\n            {\n              name: 'Cookie2',\n              value: 'value2',\n              path: '/foo',\n              domain: 'foo.example.com',\n              httpOnly: true,\n              secure: true,\n              size: 83,\n            },\n          ]);\n    });\n\n    it('handles multiple cookies with an invalid attribute', () => {\n      parseAndExpectSetCookies(\n          `cookie1 = value; max-age= 1440; Domain   =.example.com\n      Cookie2 = value2; Path = /foo; DOMAIN = foo.example.com; HttpOnly; Secure; Discard;`,\n          [\n            {name: 'cookie1', value: 'value', expires: 1287422640000, domain: '.example.com', session: false, size: 61},\n            {\n              name: 'Cookie2',\n              value: 'value2',\n              path: '/foo',\n              domain: 'foo.example.com',\n              httpOnly: true,\n              secure: true,\n              size: 83,\n            },\n          ]);\n    });\n\n    describe('handles the SameSite attribute', () => {\n      it('with value Lax', () => {\n        parseAndExpectSetCookies('cookie1 = value; HttpOnly; Secure; SameSite=Lax', [{\n                                   name: 'cookie1',\n                                   value: 'value',\n                                   httpOnly: true,\n                                   secure: true,\n                                   sameSite: Protocol.Network.CookieSameSite.Lax,\n                                   size: 47,\n                                 }]);\n      });\n      it('with value None', () => {\n        parseAndExpectSetCookies('cookie1 = value; HttpOnly; Secure; SameSite=None', [{\n                                   name: 'cookie1',\n                                   value: 'value',\n                                   httpOnly: true,\n                                   secure: true,\n                                   sameSite: Protocol.Network.CookieSameSite.None,\n                                   size: 48,\n                                 }]);\n      });\n      it('with value Strict', () => {\n        parseAndExpectSetCookies('cookie1 = value; HttpOnly; Secure; SameSite=Strict', [{\n                                   name: 'cookie1',\n                                   value: 'value',\n                                   httpOnly: true,\n                                   secure: true,\n                                   sameSite: Protocol.Network.CookieSameSite.Strict,\n                                   size: 50,\n                                 }]);\n      });\n    });\n\n    it('handles cookies without a name', () => {\n      parseAndExpectSetCookies(\n          'cookie1; Path=/; Domain=.example.com;',\n          [{name: '', value: 'cookie1', path: '/', domain: '.example.com', size: 37}]);\n    });\n\n    it('handles cookies without a value', () => {\n      parseAndExpectSetCookies(\n          'cookie1=; Path=/; Domain=.example.com;',\n          [{name: 'cookie1', value: '', path: '/', domain: '.example.com', size: 38}]);\n    });\n\n    it('handles cookies with whitespace in the name', () => {\n      parseAndExpectSetCookies(\n          '   cookie 1  =value1; Path=/; Domain=.example.com;',\n          [{name: 'cookie 1', value: 'value1', path: '/', domain: '.example.com', size: 50}]);\n    });\n\n    describe('it handles the priority attribute', () => {\n      it('with value Low', () => {\n        parseAndExpectSetCookies('cookie1=; Path=/; Domain=.example.com; Priority=Low', [{\n                                   name: 'cookie1',\n                                   value: '',\n                                   path: '/',\n                                   domain: '.example.com',\n                                   priority: Protocol.Network.CookiePriority.Low,\n                                   size: 51,\n                                 }]);\n      });\n      it('with value Medium', () => {\n        parseAndExpectSetCookies('cookie1=; Path=/; Domain=.example.com; Priority=Medium', [{\n                                   name: 'cookie1',\n                                   value: '',\n                                   path: '/',\n                                   domain: '.example.com',\n                                   priority: Protocol.Network.CookiePriority.Medium,\n                                   size: 54,\n                                 }]);\n      });\n      it('with value High', () => {\n        parseAndExpectSetCookies('cookie1=; Path=/; Domain=.example.com; Priority=High', [{\n                                   name: 'cookie1',\n                                   value: '',\n                                   path: '/',\n                                   domain: '.example.com',\n                                   priority: Protocol.Network.CookiePriority.High,\n                                   size: 52,\n                                 }]);\n      });\n    });\n  });\n});\n"]}