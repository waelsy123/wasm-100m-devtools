{"version":3,"file":"DOMModel_test.js","sourceRoot":"","sources":["../../../../../../../../test/unittests/front_end/core/sdk/DOMModel_test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EAAC,wBAAwB,EAAC,MAAM,oDAAoD,CAAC;AAE5F,OAAO,EAAC,YAAY,EAAC,MAAM,qCAAqC,CAAC;AACjE,OAAO,EAAC,0BAA0B,EAAC,MAAM,iCAAiC,CAAC;AAE3E,MAAM,EAAC,MAAM,EAAC,GAAG,IAAI,CAAC;AAEtB,0BAA0B,CAAC,UAAU,EAAE,GAAG,EAAE;IAC1C,IAAI,GAAqB,CAAC;IAC1B,MAAM,CAAC,KAAK,IAAI,EAAE;QAChB,GAAG,GAAG,MAAM,MAAM,CAAC,0CAA0C,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,iDAAiD,EAAE,GAAG,EAAE;QACzD,MAAM,YAAY,GAAG,YAAY,EAAE,CAAC;QACpC,MAAM,MAAM,GAAG,YAAY,CAAC,EAAC,YAAY,EAAC,CAAC,CAAC;QAC5C,MAAM,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACrD,wBAAwB,CAAC,QAAQ,CAAC,CAAC;QACnC,wBAAwB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAEzC,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,EAAE,oBAAoB,CAAC,CAAC;QAE5D,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC7B,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC,CAAC;QAE3C,QAAQ,CAAC,eAAe,EAAE,CAAC;QAC3B,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assertNotNullOrUndefined} from '../../../../../front_end/core/platform/platform.js';\nimport type * as SDKModule from '../../../../../front_end/core/sdk/sdk.js';\nimport {createTarget} from '../../helpers/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../helpers/MockConnection.js';\n\nconst {assert} = chai;\n\ndescribeWithMockConnection('DOMModel', () => {\n  let SDK: typeof SDKModule;\n  before(async () => {\n    SDK = await import('../../../../../front_end/core/sdk/sdk.js');\n  });\n  it('updates the document on an documentUpdate event', () => {\n    const parentTarget = createTarget();\n    const target = createTarget({parentTarget});\n    const domModel = target.model(SDK.DOMModel.DOMModel);\n    assertNotNullOrUndefined(domModel);\n    assertNotNullOrUndefined(domModel.agent);\n\n    const spy = sinon.spy(domModel.agent, 'invoke_getDocument');\n\n    assert.isTrue(spy.notCalled);\n    assert.isNull(domModel.existingDocument());\n\n    domModel.documentUpdated();\n    assert.isTrue(spy.calledOnce);\n  });\n});\n"]}