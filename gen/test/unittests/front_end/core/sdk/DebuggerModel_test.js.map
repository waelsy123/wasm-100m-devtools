{"version":3,"file":"DebuggerModel_test.js","sourceRoot":"","sources":["../../../../../../../../test/unittests/front_end/core/sdk/DebuggerModel_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as SDKModule from '../../../../../front_end/core/sdk/sdk.js';\nimport type * as Platform from '../../../../../front_end/core/platform/platform.js';\nimport type * as Protocol from '../../../../../front_end/generated/protocol.js';\n\nimport {createTarget, describeWithEnvironment} from '../../helpers/EnvironmentHelpers.js';\nimport {describeWithMockConnection, dispatchEvent, setMockConnectionResponseHandler} from '../../helpers/MockConnection.js';\n\nconst {assert} = chai;\n\nconst SCRIPT_ID_ONE = '1' as Protocol.Runtime.ScriptId;\nconst SCRIPT_ID_TWO = '2' as Protocol.Runtime.ScriptId;\n\ndescribeWithMockConnection('DebuggerModel', () => {\n  let SDK: typeof SDKModule;\n  before(async () => {\n    SDK = await import('../../../../../front_end/core/sdk/sdk.js');\n  });\n\n  describe('createRawLocationFromURL', () => {\n    it('yields correct location in the presence of multiple scripts with the same URL', async () => {\n      const target = createTarget();\n      const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel);\n      const url = 'http://localhost/index.html';\n      dispatchEvent(target, 'Debugger.scriptParsed', {\n        scriptId: SCRIPT_ID_ONE,\n        url,\n        startLine: 0,\n        startColumn: 0,\n        endLine: 1,\n        endColumn: 10,\n        executionContextId: 1,\n        hash: '',\n        isLiveEdit: false,\n        sourceMapURL: undefined,\n        hasSourceURL: false,\n        length: 10,\n      });\n      dispatchEvent(target, 'Debugger.scriptParsed', {\n        scriptId: SCRIPT_ID_TWO,\n        url,\n        startLine: 20,\n        startColumn: 0,\n        endLine: 21,\n        endColumn: 10,\n        executionContextId: 1,\n        hash: '',\n        isLiveEdit: false,\n        sourceMapURL: undefined,\n        hasSourceURL: false,\n        length: 10,\n      });\n      assert.strictEqual(debuggerModel?.createRawLocationByURL(url, 0)?.scriptId, SCRIPT_ID_ONE);\n      assert.strictEqual(debuggerModel?.createRawLocationByURL(url, 20, 1)?.scriptId, SCRIPT_ID_TWO);\n      assert.strictEqual(debuggerModel?.createRawLocationByURL(url, 5, 5), null);\n    });\n  });\n\n  const breakpointId1 = 'fs.js:1' as Protocol.Debugger.BreakpointId;\n  const breakpointId2 = 'unsupported' as Protocol.Debugger.BreakpointId;\n\n  describe('setBreakpointByURL', () => {\n    it('correctly sets only a single breakpoint in Node.js internal scripts', async () => {\n      setMockConnectionResponseHandler(\n          'Debugger.setBreakpointByUrl', ({url}): Protocol.Debugger.SetBreakpointByUrlResponse => {\n            if (url === 'fs.js') {\n              return {\n                breakpointId: breakpointId1,\n                locations: [],\n                getError() {\n                  return undefined;\n                },\n              };\n            }\n            return {\n              breakpointId: breakpointId2,\n              locations: [],\n              getError() {\n                return undefined;\n              },\n            };\n          });\n\n      const target = createTarget();\n      target.markAsNodeJSForTest();\n      const model = new SDK.DebuggerModel.DebuggerModel(target);\n      const {breakpointId} = await model.setBreakpointByURL('fs.js' as Platform.DevToolsPath.UrlString, 1);\n      assert.strictEqual(breakpointId, breakpointId1);\n    });\n  });\n\n  describe('scriptsForSourceURL', () => {\n    it('returns the latest script at the front of the result for scripts with the same URL', () => {\n      const target = createTarget();\n      const url = 'http://localhost/index.html';\n      dispatchEvent(target, 'Debugger.scriptParsed', {\n        scriptId: SCRIPT_ID_ONE,\n        url,\n        startLine: 0,\n        startColumn: 0,\n        endLine: 1,\n        endColumn: 10,\n        executionContextId: 1,\n        hash: '',\n        isLiveEdit: false,\n        sourceMapURL: undefined,\n        hasSourceURL: false,\n        length: 10,\n      });\n      dispatchEvent(target, 'Debugger.scriptParsed', {\n        scriptId: SCRIPT_ID_TWO,\n        url,\n        startLine: 20,\n        startColumn: 0,\n        endLine: 21,\n        endColumn: 10,\n        executionContextId: 1,\n        hash: '',\n        isLiveEdit: false,\n        sourceMapURL: undefined,\n        hasSourceURL: false,\n        length: 10,\n      });\n\n      const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel);\n      const scripts = debuggerModel?.scriptsForSourceURL(url) || [];\n\n      assert.strictEqual(scripts[0].scriptId, SCRIPT_ID_TWO);\n      assert.strictEqual(scripts[1].scriptId, SCRIPT_ID_ONE);\n    });\n  });\n});\n\ndescribeWithEnvironment('LocationRanges', () => {\n  let SDK: typeof SDKModule;\n  before(async () => {\n    SDK = await import('../../../../../front_end/core/sdk/sdk.js');\n  });\n\n  function createRange(\n      scriptId: Protocol.Runtime.ScriptId, startLine: number, startColumn: number, endLine: number, endColumn: number) {\n    return new SDK.DebuggerModel.LocationRange(\n        scriptId, new SDK.DebuggerModel.ScriptPosition(startLine, startColumn),\n        new SDK.DebuggerModel.ScriptPosition(endLine, endColumn));\n  }\n\n  function sort(locationRange: SDKModule.DebuggerModel.LocationRange[]) {\n    return locationRange.concat().sort(SDK.DebuggerModel.LocationRange.comparator);\n  }\n\n  function sortAndMerge(locationRange: SDKModule.DebuggerModel.LocationRange[]) {\n    return SDK.DebuggerModel.sortAndMergeRanges(locationRange.concat());\n  }\n\n  function checkIsMaximallyMerged(locationRange: SDKModule.DebuggerModel.LocationRange[]) {\n    for (let i = 1; i < locationRange.length; ++i) {\n      assert.isTrue(locationRange[i - 1].compareTo(locationRange[i]) < 0);\n    }\n  }\n\n  it('can be sorted after scriptId', () => {\n    const locationRanges = [\n      createRange(SCRIPT_ID_TWO, 0, 0, 0, 0),\n      createRange(SCRIPT_ID_ONE, 0, 0, 0, 0),\n    ];\n    const sorted = sort(locationRanges);\n    assert.deepEqual(sorted, locationRanges.reverse());\n  });\n\n  it('can be sorted after line number', () => {\n    let locationRanges = [\n      createRange(SCRIPT_ID_ONE, 3, 0, 0, 0),\n      createRange(SCRIPT_ID_ONE, 0, 0, 0, 0),\n    ];\n    let sorted = sort(locationRanges);\n    assert.deepEqual(sorted, locationRanges.reverse());\n\n    locationRanges = [\n      createRange(SCRIPT_ID_ONE, 0, 0, 3, 0),\n      createRange(SCRIPT_ID_ONE, 0, 0, 0, 0),\n    ];\n    sorted = sort(locationRanges);\n    assert.deepEqual(sorted, locationRanges.reverse());\n  });\n\n  it('can be sorted after column number', () => {\n    let locationRanges = [\n      createRange(SCRIPT_ID_ONE, 0, 3, 0, 0),\n      createRange(SCRIPT_ID_ONE, 0, 0, 0, 0),\n    ];\n    let sorted = sort(locationRanges);\n    assert.deepEqual(sorted, locationRanges.reverse());\n\n    locationRanges = [\n      createRange(SCRIPT_ID_ONE, 0, 0, 0, 3),\n      createRange(SCRIPT_ID_ONE, 0, 0, 0, 0),\n    ];\n    sorted = sort(locationRanges);\n    assert.deepEqual(sorted, locationRanges.reverse());\n  });\n\n  it('can be sorted by scriptId, line and column', () => {\n    const locationRangesExpected = [\n      createRange(SCRIPT_ID_ONE, 0, 3, 0, 0),\n      createRange(SCRIPT_ID_ONE, 0, 3, 0, 5),\n      createRange(SCRIPT_ID_TWO, 3, 3, 3, 5),\n      createRange(SCRIPT_ID_TWO, 5, 4, 5, 8),\n    ];\n\n    const locationRangeToSort = [\n      locationRangesExpected[3],\n      locationRangesExpected[1],\n      locationRangesExpected[2],\n      locationRangesExpected[0],\n    ];\n\n    const sorted = sort(locationRangeToSort);\n    assert.deepEqual(sorted, locationRangesExpected);\n  });\n\n  it('correctly checks overlap', () => {\n    const location1 = createRange(SCRIPT_ID_ONE, 1, 0, 3, 0);\n    const location2 = createRange(SCRIPT_ID_ONE, 0, 0, 5, 0);\n\n    assert.isTrue(location1.overlap(location2));\n    assert.isTrue(location2.overlap(location1));\n    assert.isTrue(location1.overlap(location1));\n  });\n\n  it('correctly checks overlap (end and start overlapping)', () => {\n    const location1 = createRange(SCRIPT_ID_ONE, 1, 0, 3, 0);\n    const location2 = createRange(SCRIPT_ID_ONE, 3, 0, 5, 0);\n\n    assert.isTrue(location1.overlap(location2));\n    assert.isTrue(location2.overlap(location1));\n    assert.isTrue(location1.overlap(location1));\n  });\n\n  it('correctly checks non-overlap', () => {\n    const location1 = createRange(SCRIPT_ID_TWO, 1, 0, 3, 0);\n    const location2 = createRange(SCRIPT_ID_ONE, 3, 1, 5, 0);\n\n    assert.isFalse(location1.overlap(location2));\n    assert.isFalse(location2.overlap(location1));\n  });\n\n  it('can be reduced if equal', () => {\n    const testRange = createRange(SCRIPT_ID_ONE, 0, 3, 3, 3);\n    const locationRangesToBeReduced = [\n      testRange,\n      testRange,\n    ];\n    const reduced = sortAndMerge(locationRangesToBeReduced);\n    assert.deepEqual(reduced, [testRange]);\n    checkIsMaximallyMerged(reduced);\n  });\n\n  it('can be reduced if overlapping (multiple ranges)', () => {\n    const locationRangesToBeReduced = [\n      createRange(SCRIPT_ID_ONE, 0, 5, 5, 3),\n      createRange(SCRIPT_ID_ONE, 0, 3, 3, 3),\n      createRange(SCRIPT_ID_ONE, 5, 3, 10, 10),\n      createRange(SCRIPT_ID_TWO, 5, 4, 10, 10),\n    ];\n    const locationRangesExpected = [\n      createRange(SCRIPT_ID_ONE, 0, 3, 10, 10),\n      locationRangesToBeReduced[3],\n    ];\n    const reduced = sortAndMerge(locationRangesToBeReduced);\n    assert.deepEqual(reduced, locationRangesExpected);\n    checkIsMaximallyMerged(reduced);\n  });\n\n  it('can be reduced if overlapping (same start, different end)', () => {\n    const locationRangesToBeReduced = [\n      createRange(SCRIPT_ID_ONE, 0, 5, 5, 3),\n      createRange(SCRIPT_ID_ONE, 0, 5, 3, 3),\n    ];\n    const locationRangesExpected = [\n      createRange(SCRIPT_ID_ONE, 0, 5, 5, 3),\n    ];\n    const reduced = sortAndMerge(locationRangesToBeReduced);\n    assert.deepEqual(reduced, locationRangesExpected);\n    checkIsMaximallyMerged(reduced);\n  });\n\n  it('can be reduced if overlapping (different start, same end)', () => {\n    const locationRangesToBeReduced = [\n      createRange(SCRIPT_ID_ONE, 0, 3, 5, 3),\n      createRange(SCRIPT_ID_ONE, 0, 5, 5, 3),\n    ];\n    const locationRangesExpected = [\n      createRange(SCRIPT_ID_ONE, 0, 3, 5, 3),\n    ];\n    const reduced = sortAndMerge(locationRangesToBeReduced);\n    assert.deepEqual(reduced, locationRangesExpected);\n    checkIsMaximallyMerged(reduced);\n  });\n\n  it('can be reduced if overlapping (start == other.end)', () => {\n    const locationRangesToBeReduced = [\n      createRange(SCRIPT_ID_ONE, 0, 3, 5, 3),\n      createRange(SCRIPT_ID_ONE, 5, 3, 10, 3),\n    ];\n    const locationRangesExpected = [\n      createRange(SCRIPT_ID_ONE, 0, 3, 10, 3),\n    ];\n    const reduced = sortAndMerge(locationRangesToBeReduced);\n    assert.deepEqual(reduced, locationRangesExpected);\n    checkIsMaximallyMerged(reduced);\n  });\n});\n"]}