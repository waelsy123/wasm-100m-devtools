{"version":3,"file":"ConsoleModel_test.js","sourceRoot":"","sources":["../../../../../../../../test/unittests/front_end/core/sdk/ConsoleModel_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nconst {assert} = chai;\n\nimport type * as Platform from '../../../../../front_end/core/platform/platform.js';\nimport type * as SDKModule from '../../../../../front_end/core/sdk/sdk.js';\nimport type * as Protocol from '../../../../../front_end/generated/protocol.js';\n\ndescribe('ConsoleMessage', () => {\n  let SDK: typeof SDKModule;\n  before(async () => {\n    SDK = await import('../../../../../front_end/core/sdk/sdk.js');\n  });\n  const scriptId1 = '1' as Protocol.Runtime.ScriptId;\n  const scriptId2 = '2' as Protocol.Runtime.ScriptId;\n\n  function newMessage({\n    source = SDK.ConsoleModel.FrontendMessageSource.ConsoleAPI,\n    message = 'Message',\n    url,\n    scriptId,\n    executionContextId,\n    stackTrace,\n  }: {\n    source?: SDKModule.ConsoleModel.MessageSource,\n    message?: string,\n    url?: Platform.DevToolsPath.UrlString,\n    scriptId?: Protocol.Runtime.ScriptId,\n    executionContextId?: number,\n    stackTrace?: Protocol.Runtime.StackTrace,\n  }) {\n    return new SDK.ConsoleModel.ConsoleMessage(\n        null, source, null, message, {url, executionContextId, scriptId, stackTrace});\n  }\n\n  it('compares using message', () => {\n    const a = newMessage({});\n    const b = newMessage({});\n    const c = newMessage({message: 'DifferentMessage'});\n    assert.isTrue(a.isEqual(b));\n    assert.isFalse(b.isEqual(c));\n    assert.isFalse(c.isEqual(a));\n    assert.isTrue(c.isEqual(c));\n  });\n\n  it('compares using source', () => {\n    const a = newMessage({});\n    const b = newMessage({});\n    const c = newMessage({source: SDK.ConsoleModel.FrontendMessageSource.CSS});\n    assert.isTrue(a.isEqual(b));\n    assert.isFalse(b.isEqual(c));\n    assert.isFalse(c.isEqual(a));\n  });\n\n  it('compares using url', () => {\n    const a = newMessage({});\n    const b = newMessage({url: 'http://a.b/c' as Platform.DevToolsPath.UrlString});\n    const c = newMessage({url: 'http://a.b/c' as Platform.DevToolsPath.UrlString});\n    const d = newMessage({url: 'http://a.b/d' as Platform.DevToolsPath.UrlString});\n    assert.isFalse(a.isEqual(b));\n    assert.isTrue(b.isEqual(c));\n    assert.isFalse(c.isEqual(d));\n    assert.isFalse(d.isEqual(a));\n  });\n\n  it('compares using execution context and script id', () => {\n    const a = newMessage({});\n    const b = newMessage({executionContextId: 5, scriptId: scriptId1});\n    const c = newMessage({executionContextId: 5, scriptId: scriptId1});\n    const d = newMessage({executionContextId: 6, scriptId: scriptId1});\n    const e = newMessage({executionContextId: 5, scriptId: scriptId2});\n    assert.isFalse(a.isEqual(b));\n    assert.isFalse(b.isEqual(a));\n    assert.isTrue(b.isEqual(c));\n    assert.isFalse(c.isEqual(d));\n    assert.isFalse(c.isEqual(e));\n  });\n\n  it('compares using script ids in stack traces', () => {\n    const functionName = 'foo';\n    const url = 'http://localhost/foo.js';\n    const lineNumber = 1;\n    const columnNumber = 1;\n    const a =\n        newMessage({stackTrace: {callFrames: [{functionName, scriptId: scriptId1, url, lineNumber, columnNumber}]}});\n    const b =\n        newMessage({stackTrace: {callFrames: [{functionName, scriptId: scriptId2, url, lineNumber, columnNumber}]}});\n    assert.isFalse(a.isEqual(b));\n  });\n});\n"]}