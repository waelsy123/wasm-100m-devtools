{"version":3,"file":"ResourceTreeModel_test.js","sourceRoot":"","sources":["../../../../../../../../test/unittests/front_end/core/sdk/ResourceTreeModel_test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,GAAG,MAAM,0CAA0C,CAAC;AAEhE,OAAO,EAAC,YAAY,EAAC,MAAM,qCAAqC,CAAC;AACjE,OAAO,EAAC,0BAA0B,EAAE,aAAa,EAAC,MAAM,iCAAiC,CAAC;AAE1F,MAAM,EAAC,MAAM,EAAC,GAAG,IAAI,CAAC;AAEtB,0BAA0B,CAAC,mBAAmB,EAAE,GAAG,EAAE;IACnD,IAAI,MAAyB,CAAC;IAC9B,IAAI,iBAA+D,CAAC;IACpE,IAAI,cAAsD,CAAC;IAE3D,UAAU,CAAC,GAAG,EAAE;QACd,MAAM,GAAG,YAAY,EAAE,CAAC;QACxB,iBAAiB,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;QAC1E,cAAc,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;IACnE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mCAAmC,EAAE,GAAG,EAAE;QAC3C,IAAI,CAAC,cAAc,EAAE;YACnB,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;SACtC;QACD,MAAM,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,CAAC;QAClE,iBAAiB,EAAE,UAAU,EAAE,CAAC;QAChC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,EAAE,sBAAsB,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uCAAuC,EAAE,GAAG,EAAE;QAC/C,IAAI,CAAC,cAAc,EAAE;YACnB,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;SACtC;QACD,MAAM,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,CAAC;QAClE,aAAa,CAAC,MAAM,EAAE,qBAAqB,EAAE;YAC3C,KAAK,EAAE;gBACL,EAAE,EAAE,MAAM;gBACV,QAAQ,EAAE,KAAK;gBACf,GAAG,EAAE,oBAAoB;gBACzB,iBAAiB,EAAE,aAAa;gBAChC,cAAc,EAAE,oBAAoB;gBACpC,QAAQ,EAAE,WAAW;gBACrB,iBAAiB,uBAAwC;gBACzD,8BAA8B,2BAAuD;gBACrF,gBAAgB,EAAE,EAAE;aACrB;SACF,CAAC,CAAC;QACH,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,EAAE,sBAAsB,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../../../../front_end/core/sdk/sdk.js';\nimport * as Protocol from '../../../../../front_end/generated/protocol.js';\nimport {createTarget} from '../../helpers/EnvironmentHelpers.js';\nimport {describeWithMockConnection, dispatchEvent} from '../../helpers/MockConnection.js';\n\nconst {assert} = chai;\n\ndescribeWithMockConnection('ResourceTreeModel', () => {\n  let target: SDK.Target.Target;\n  let resourceTreeModel: SDK.ResourceTreeModel.ResourceTreeModel|null;\n  let networkManager: SDK.NetworkManager.NetworkManager|null;\n\n  beforeEach(() => {\n    target = createTarget();\n    resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    networkManager = target.model(SDK.NetworkManager.NetworkManager);\n  });\n\n  it('calls clearRequests on reloadPage', () => {\n    if (!networkManager) {\n      throw new Error('No networkManager');\n    }\n    const clearRequests = sinon.stub(networkManager, 'clearRequests');\n    resourceTreeModel?.reloadPage();\n    assert.isTrue(clearRequests.calledOnce, 'Not called just once');\n  });\n\n  it('calls clearRequests on frameNavigated', () => {\n    if (!networkManager) {\n      throw new Error('No networkManager');\n    }\n    const clearRequests = sinon.stub(networkManager, 'clearRequests');\n    dispatchEvent(target, 'Page.frameNavigated', {\n      frame: {\n        id: 'main',\n        loaderId: 'foo',\n        url: 'http://example.com',\n        domainAndRegistry: 'example.com',\n        securityOrigin: 'http://example.com',\n        mimeType: 'text/html',\n        secureContextType: Protocol.Page.SecureContextType.Secure,\n        crossOriginIsolatedContextType: Protocol.Page.CrossOriginIsolatedContextType.Isolated,\n        gatedAPIFeatures: [],\n      },\n    });\n    assert.isTrue(clearRequests.calledOnce, 'Not called just once');\n  });\n});\n"]}