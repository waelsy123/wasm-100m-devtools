{"version":3,"file":"UISourceCodeHelpers.js","sourceRoot":"","sources":["../../../../../../../test/unittests/front_end/helpers/UISourceCodeHelpers.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,6CAA6C,CAAC;AAEtE,OAAO,KAAK,SAAS,MAAM,uDAAuD,CAAC;AACnF,OAAO,KAAK,QAAQ,MAAM,mDAAmD,CAAC;AAC9E,OAAO,KAAK,SAAS,MAAM,qDAAqD,CAAC;AAEjF,MAAM,UAAU,kBAAkB,CAAC,OAKlC;IAIC,MAAM,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;IAC/D,MAAM,OAAO,GAAG,IAAI,QAAQ,CAAC,2BAA2B,CAAC,2BAA2B,CAChF,SAAS,EAAE,OAAO,CAAC,SAAS,IAAI,YAAY,EAAE,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC,SAAS,EAAE,cAAc,EACxG,KAAK,CAAC,qBAAqB,CAAC,CAAC;IACjC,MAAM,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACrF,MAAM,YAAY,GACd,OAAO,CAAC,kBAAkB,CAAC,OAAO,CAAC,GAAG,EAAE,YAAY,IAAI,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;IACzG,MAAM,eAAe,GAAG,SAAS,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,UAAU,CACpF,OAAO,CAAC,GAAG,EAAE,YAAY,EAAE,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;IACtD,OAAO,CAAC,2BAA2B,CAAC,YAAY,EAAE,eAAe,EAAE,IAAI,CAAC,aAAa,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;IACzG,OAAO,EAAC,YAAY,EAAE,OAAO,EAAC,CAAC;AACjC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../../front_end/core/common/common.js';\nimport type * as Platform from '../../../../front_end/core/platform/platform.js';\nimport * as TextUtils from '../../../../front_end/models/text_utils/text_utils.js';\nimport * as Bindings from '../../../../front_end/models/bindings/bindings.js';\nimport * as Workspace from '../../../../front_end/models/workspace/workspace.js';\n\nexport function createUISourceCode(options: {\n  url: Platform.DevToolsPath.UrlString,\n  content?: string, mimeType: string,\n  projectType?: Workspace.Workspace.projectTypes,\n  projectId?: string,\n}): {\n  project: Bindings.ContentProviderBasedProject.ContentProviderBasedProject,\n  uiSourceCode: Workspace.UISourceCode.UISourceCode,\n} {\n  const workspace = Workspace.Workspace.WorkspaceImpl.instance();\n  const project = new Bindings.ContentProviderBasedProject.ContentProviderBasedProject(\n      workspace, options.projectId || 'PROJECT_ID', Workspace.Workspace.projectTypes.Formatter, 'Test project',\n      false /* isServiceProject*/);\n  const resourceType = Common.ResourceType.ResourceType.fromMimeType(options.mimeType);\n  const uiSourceCode =\n      project.createUISourceCode(options.url, resourceType || Workspace.Workspace.projectTypes.FileSystem);\n  const contentProvider = TextUtils.StaticContentProvider.StaticContentProvider.fromString(\n      options.url, resourceType, options.content || '');\n  project.addUISourceCodeWithProvider(uiSourceCode, contentProvider, null /* metadata*/, options.mimeType);\n  return {uiSourceCode, project};\n}\n"]}