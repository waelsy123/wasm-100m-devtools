{"version":3,"file":"UserMetricsHelpers.js","sourceRoot":"","sources":["../../../../../../../test/unittests/front_end/helpers/UserMetricsHelpers.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,yCAAyC,CAAC;AAEhE;;GAEG;AACH,MAAM,UAAU,sBAAsB,CAAC,UAAkB,EAAE,UAAkB;IAC3E,OAAO,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,4BAA4B,CAAC,IAAI,CAC7F,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,UAAU,KAAK,UAAU,IAAI,KAAK,CAAC,UAAU,KAAK,UAAU,CAAC,CAAC;AACnF,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../../../front_end/core/host/host.js';\n\n/**\n * @returns True, iff a metric event with the provided name and code was recorded. False otherwise.\n */\nexport function recordedMetricsContain(actionName: string, actionCode: number): boolean {\n  return Host.InspectorFrontendHost.InspectorFrontendHostInstance.recordedEnumeratedHistograms.some(\n      event => event.actionName === actionName && event.actionCode === actionCode);\n}\n"]}