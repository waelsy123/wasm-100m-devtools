{"version":3,"file":"ViewLocation_test.js","sourceRoot":"","sources":["../../../../../../../test/unittests/front_end/ui/ViewLocation_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nconst {assert} = chai;\n\nimport * as UI from '../../../../front_end/ui/legacy/legacy.js';\nimport type * as Platform from '../../../../front_end/core/platform/platform.js';\nimport {describeWithEnvironment} from '../helpers/EnvironmentHelpers.js';\n\ndescribeWithEnvironment('ViewLocation', () => {\n  let tabbedLocation: UI.View.TabbedViewLocation;\n  let viewManager: UI.ViewManager.ViewManager;\n  before(async () => {\n    ['first', 'second', 'third', 'fourth'].forEach(title => {\n      UI.ViewManager.registerViewExtension({\n        // @ts-ignore\n        location: 'mock-location',\n        id: title,\n        title: () => title as Platform.UIString.LocalizedString,\n        commandPrompt: () => title as Platform.UIString.LocalizedString,\n        persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n        async loadView() {\n          return new UI.Widget.Widget();\n        },\n      });\n    });\n    viewManager = UI.ViewManager.ViewManager.instance({forceNew: true});\n    tabbedLocation = viewManager.createTabbedLocation(undefined, 'mock-location', true, true);\n  });\n\n  it('Creates an empty tabbed location', () => {\n    assert.deepEqual(tabbedLocation.tabbedPane().tabIds(), []);\n  });\n\n  it('Adds a tab for a selected view', () => {\n    void viewManager.showView('first');\n    void viewManager.showView('second');\n    void viewManager.showView('third');\n\n    assert.deepEqual(tabbedLocation.tabbedPane().tabIds(), ['first', 'second', 'third']);\n  });\n\n  it('Prepends a tab correctly', () => {\n    const thirdTab = tabbedLocation.tabbedPane().tabsById.get('third');\n    if (!thirdTab) {\n      throw new Error('Could not find a tab');\n    }\n    tabbedLocation.tabbedPane().insertBefore(thirdTab, 0);\n    assert.deepEqual(tabbedLocation.tabbedPane().tabIds(), ['third', 'first', 'second']);\n  });\n\n  it('Appends a tab correctly', () => {\n    void viewManager.showView('fourth');\n    assert.deepEqual(tabbedLocation.tabbedPane().tabIds(), ['third', 'first', 'second', 'fourth']);\n  });\n\n  it('Closes a tab correctly', () => {\n    tabbedLocation.tabbedPane().closeTab('second');\n    assert.deepEqual(tabbedLocation.tabbedPane().tabIds(), ['third', 'first', 'fourth']);\n  });\n});\n"]}