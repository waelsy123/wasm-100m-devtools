{"version":3,"file":"Linkifier_test.js","sourceRoot":"","sources":["../../../../../../../../../../test/unittests/front_end/ui/legacy/components/utils/Linkifier_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as ComponentsModule from '../../../../../../../front_end/ui/legacy/components/utils/utils.js';\nimport type * as BindingsModule from '../../../../../../../front_end/models/bindings/bindings.js';\nimport type * as SDKModule from '../../../../../../../front_end/core/sdk/sdk.js';\nimport type * as WorkspaceModule from '../../../../../../../front_end/models/workspace/workspace.js';\nimport type * as Protocol from '../../../../../../../front_end/generated/protocol.js';\n\nimport {createTarget} from '../../../../helpers/EnvironmentHelpers.js';\nimport {describeWithMockConnection, dispatchEvent} from '../../../../helpers/MockConnection.js';\nimport {assertNotNullOrUndefined} from '../../../../../../../front_end/core/platform/platform.js';\n\nconst {assert} = chai;\n\nconst scriptId1 = '1' as Protocol.Runtime.ScriptId;\nconst scriptId2 = '2' as Protocol.Runtime.ScriptId;\nconst executionContextId = 1234 as Protocol.Runtime.ExecutionContextId;\n\ndescribeWithMockConnection('Linkifier', async () => {\n  let SDK: typeof SDKModule;\n  let Components: typeof ComponentsModule;\n  let Bindings: typeof BindingsModule;\n  let Workspace: typeof WorkspaceModule;\n\n  before(async () => {\n    SDK = await import('../../../../../../../front_end/core/sdk/sdk.js');\n    Components = await import('../../../../../../../front_end/ui/legacy/components/utils/utils.js');\n    Bindings = await import('../../../../../../../front_end/models/bindings/bindings.js');\n    Workspace = await import('../../../../../../../front_end/models/workspace/workspace.js');\n  });\n\n  function setUpEnvironment() {\n    const target = createTarget();\n    const linkifier = new Components.Linkifier.Linkifier(100, false, () => {});\n    linkifier.targetAdded(target);\n    const workspace = Workspace.Workspace.WorkspaceImpl.instance();\n    const forceNew = true;\n    const targetManager = target.targetManager();\n    const debuggerWorkspaceBinding =\n        Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance({forceNew, targetManager, workspace});\n    Bindings.ResourceMapping.ResourceMapping.instance({forceNew, targetManager, workspace});\n    Bindings.IgnoreListManager.IgnoreListManager.instance({forceNew, debuggerWorkspaceBinding});\n    return {target, linkifier};\n  }\n\n  it('creates an empty placeholder anchor if the debugger is disabled and no url exists', () => {\n    const {target, linkifier} = setUpEnvironment();\n\n    const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel);\n    assertNotNullOrUndefined(debuggerModel);\n    void debuggerModel.suspendModel();\n\n    const lineNumber = 4;\n    const url = '';\n    const anchor = linkifier.maybeLinkifyScriptLocation(target, scriptId1, url, lineNumber);\n    assertNotNullOrUndefined(anchor);\n    assert.strictEqual(anchor.textContent, '\\u200b');\n\n    const info = Components.Linkifier.Linkifier.linkInfo(anchor);\n    assertNotNullOrUndefined(info);\n    assert.isNull(info.uiLocation);\n  });\n\n  it('resolves url and updates link as soon as debugger is enabled', done => {\n    const {target, linkifier} = setUpEnvironment();\n\n    const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel);\n    assertNotNullOrUndefined(debuggerModel);\n    void debuggerModel.suspendModel();\n\n    const lineNumber = 4;\n    // Explicitly set url to empty string and let it resolve through the live location.\n    const url = '';\n    const anchor = linkifier.maybeLinkifyScriptLocation(target, scriptId1, url, lineNumber);\n    assertNotNullOrUndefined(anchor);\n    assert.strictEqual(anchor.textContent, '\\u200b');\n\n    void debuggerModel.resumeModel();\n    const scriptParsedEvent: Protocol.Debugger.ScriptParsedEvent = {\n      scriptId: scriptId1,\n      url: 'https://www.google.com/script.js',\n      startLine: 0,\n      startColumn: 0,\n      endLine: 10,\n      endColumn: 10,\n      executionContextId,\n      hash: '',\n      isLiveEdit: false,\n      sourceMapURL: undefined,\n      hasSourceURL: false,\n      length: 10,\n    };\n    dispatchEvent(target, 'Debugger.scriptParsed', scriptParsedEvent);\n\n    const callback: MutationCallback = function(mutations: MutationRecord[]) {\n      for (const mutation of mutations) {\n        if (mutation.type === 'childList') {\n          const info = Components.Linkifier.Linkifier.linkInfo(anchor);\n          assertNotNullOrUndefined(info);\n          assertNotNullOrUndefined(info.uiLocation);\n          assert.strictEqual(anchor.textContent, `script.js:${lineNumber + 1}`);\n          observer.disconnect();\n          done();\n        }\n      }\n    };\n    const observer = new MutationObserver(callback);\n    observer.observe(anchor, {childList: true});\n  });\n\n  it('always favors script ID over url', done => {\n    const {target, linkifier} = setUpEnvironment();\n    const lineNumber = 4;\n    const url = 'https://www.google.com/script.js';\n\n    const scriptParsedEvent1: Protocol.Debugger.ScriptParsedEvent = {\n      scriptId: scriptId1,\n      url,\n      startLine: 0,\n      startColumn: 0,\n      endLine: 10,\n      endColumn: 10,\n      executionContextId,\n      hash: '',\n      isLiveEdit: false,\n      sourceMapURL: undefined,\n      hasSourceURL: false,\n      length: 10,\n    };\n    dispatchEvent(target, 'Debugger.scriptParsed', scriptParsedEvent1);\n\n    // Ask for a link to a script that has not been registered yet, but has the same url.\n    const anchor = linkifier.maybeLinkifyScriptLocation(target, scriptId2, url, lineNumber);\n    assertNotNullOrUndefined(anchor);\n\n    // This link should not pick up the first script with the same url, since there's no\n    // warranty that the first script has anything to do with this one (other than having\n    // the same url).\n    const info = Components.Linkifier.Linkifier.linkInfo(anchor);\n    assertNotNullOrUndefined(info);\n    assert.isNull(info.uiLocation);\n\n    const scriptParsedEvent2: Protocol.Debugger.ScriptParsedEvent = {\n      scriptId: scriptId2,\n      url,\n      startLine: 0,\n      startColumn: 0,\n      endLine: 10,\n      endColumn: 10,\n      executionContextId,\n      hash: '',\n      isLiveEdit: false,\n      sourceMapURL: undefined,\n      hasSourceURL: false,\n      length: 10,\n    };\n    dispatchEvent(target, 'Debugger.scriptParsed', scriptParsedEvent2);\n\n    const callback: MutationCallback = function(mutations: MutationRecord[]) {\n      for (const mutation of mutations) {\n        if (mutation.type === 'childList') {\n          const info = Components.Linkifier.Linkifier.linkInfo(anchor);\n          assertNotNullOrUndefined(info);\n          assertNotNullOrUndefined(info.uiLocation);\n\n          // Make sure that a uiSourceCode is linked to that anchor.\n          assertNotNullOrUndefined(info.uiLocation.uiSourceCode);\n          observer.disconnect();\n          done();\n        }\n      }\n    };\n    const observer = new MutationObserver(callback);\n    observer.observe(anchor, {childList: true});\n  });\n\n  it('optionally shows column numbers in the link text', done => {\n    const {target, linkifier} = setUpEnvironment();\n\n    const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel);\n    assertNotNullOrUndefined(debuggerModel);\n    void debuggerModel.suspendModel();\n\n    const lineNumber = 4;\n    const options = {columnNumber: 8, showColumnNumber: true, inlineFrameIndex: 0};\n    // Explicitly set url to empty string and let it resolve through the live location.\n    const url = '';\n    const anchor = linkifier.maybeLinkifyScriptLocation(target, scriptId1, url, lineNumber, options);\n    assertNotNullOrUndefined(anchor);\n    assert.strictEqual(anchor.textContent, '\\u200b');\n\n    void debuggerModel.resumeModel();\n    const scriptParsedEvent: Protocol.Debugger.ScriptParsedEvent = {\n      scriptId: scriptId1,\n      url: 'https://www.google.com/script.js',\n      startLine: 0,\n      startColumn: 0,\n      endLine: 10,\n      endColumn: 10,\n      executionContextId,\n      hash: '',\n      isLiveEdit: false,\n      sourceMapURL: undefined,\n      hasSourceURL: false,\n      length: 10,\n    };\n    dispatchEvent(target, 'Debugger.scriptParsed', scriptParsedEvent);\n\n    const callback: MutationCallback = function(mutations: MutationRecord[]) {\n      for (const mutation of mutations) {\n        if (mutation.type === 'childList') {\n          const info = Components.Linkifier.Linkifier.linkInfo(anchor);\n          assertNotNullOrUndefined(info);\n          assertNotNullOrUndefined(info.uiLocation);\n          assert.strictEqual(anchor.textContent, `script.js:${lineNumber + 1}:${options.columnNumber + 1}`);\n          observer.disconnect();\n          done();\n        }\n      }\n    };\n    const observer = new MutationObserver(callback);\n    observer.observe(anchor, {childList: true});\n  });\n});\n"]}