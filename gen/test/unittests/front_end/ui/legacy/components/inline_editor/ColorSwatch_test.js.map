{"version":3,"file":"ColorSwatch_test.js","sourceRoot":"","sources":["../../../../../../../../../../test/unittests/front_end/ui/legacy/components/inline_editor/ColorSwatch_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../../../../../front_end/core/common/common.js';\nimport {assertNotNullOrUndefined} from '../../../../../../../front_end/core/platform/platform.js';\nimport * as InlineEditor from '../../../../../../../front_end/ui/legacy/components/inline_editor/inline_editor.js';\nimport {assertElement, assertShadowRoot, dispatchClickEvent, renderElementIntoDOM} from '../../../../helpers/DOMHelpers.js';\nimport {describeWithLocale} from '../../../../helpers/EnvironmentHelpers.js';\n\nconst {assert} = chai;\n\nfunction assertSwatch(\n    swatch: InlineEditor.ColorSwatch.ColorSwatch,\n    expected: {backgroundColor?: string, colorTextInSlot?: string, tooltip?: string}) {\n  assertShadowRoot(swatch.shadowRoot);\n\n  const swatchEl = swatch.shadowRoot.querySelector('.color-swatch');\n  const swatchInnerEl = swatch.shadowRoot.querySelector('.color-swatch-inner');\n  const slotEl = swatch.shadowRoot.querySelector('slot');\n  assertElement(swatchEl, HTMLElement);\n  assertElement(swatchInnerEl, HTMLElement);\n  assertNotNullOrUndefined(slotEl);\n\n  if (expected.backgroundColor) {\n    assert.strictEqual(\n        swatchInnerEl.style.backgroundColor, expected.backgroundColor, 'The swatch has the correct color');\n  }\n  if (expected.colorTextInSlot) {\n    assert.strictEqual(slotEl.textContent, expected.colorTextInSlot, 'The slot shows the correct default color');\n  }\n  if (expected.tooltip) {\n    assert.strictEqual(swatchEl.getAttribute('title'), expected.tooltip, 'The tooltip is correct');\n  }\n}\n\nfunction createSwatch(color: Common.Color.Color|string, formatOrUseUserSetting?: string|boolean, tooltip?: string) {\n  const swatch = new InlineEditor.ColorSwatch.ColorSwatch();\n  renderElementIntoDOM(swatch);\n  swatch.renderColor(color, formatOrUseUserSetting, tooltip);\n  return swatch;\n}\n\nfunction getClickTarget(swatch: InlineEditor.ColorSwatch.ColorSwatch) {\n  assertNotNullOrUndefined(swatch.shadowRoot);\n  return swatch.shadowRoot.querySelector('.color-swatch-inner') as HTMLElement;\n}\n\ndescribeWithLocale('ColorSwatch', () => {\n  it('accepts colors as text', () => {\n    const swatch = createSwatch('red');\n\n    assertSwatch(swatch, {\n      backgroundColor: 'red',\n      colorTextInSlot: 'red',\n    });\n  });\n\n  it('accepts colors as color objects', () => {\n    const swatch = createSwatch(Common.Color.Color.parse('red') as Common.Color.Color);\n\n    assertSwatch(swatch, {\n      backgroundColor: 'red',\n      colorTextInSlot: 'red',\n    });\n\n    swatch.renderColor(new Common.Color.Color([1, .5, .2, .5], Common.Color.Format.RGBA));\n\n    assertSwatch(swatch, {\n      backgroundColor: 'rgba(255, 128, 51, 0.5)',\n      colorTextInSlot: 'rgb(255 128 51 / 50%)',\n    });\n  });\n\n  it('renders text only for invalid colors provided as text', () => {\n    const swatch = createSwatch('invalid');\n\n    assertShadowRoot(swatch.shadowRoot);\n    assert.strictEqual(\n        swatch.shadowRoot.querySelectorAll('.color-swatch').length, 0, 'There is no swatch in the component');\n    assert.strictEqual(swatch.shadowRoot.textContent, 'invalid', 'The correct value is displayed');\n  });\n\n  it('accepts a custom color format', () => {\n    const swatch = createSwatch('red', Common.Color.Format.RGB);\n    assertSwatch(swatch, {colorTextInSlot: 'rgb(255 0 0)'});\n\n    swatch.renderColor(new Common.Color.Color([1, .5, .2, .5], Common.Color.Format.HSLA), Common.Color.Format.RGB);\n    assertSwatch(swatch, {colorTextInSlot: 'rgb(255 128 51 / 50%)'});\n  });\n\n  it('displays a default tooltip', () => {\n    const swatch = createSwatch('red');\n\n    assertSwatch(swatch, {tooltip: 'Shift-click to change color format'});\n  });\n\n  it('can display a custom tooltip', () => {\n    const swatch = createSwatch('red', false, 'This is a custom tooltip');\n\n    assertSwatch(swatch, {tooltip: 'This is a custom tooltip'});\n  });\n\n  it('cycles through color format on shift-click', () => {\n    const swatch = createSwatch('red');\n    assertSwatch(swatch, {colorTextInSlot: 'red'});\n\n    const target = getClickTarget(swatch);\n\n    dispatchClickEvent(target);\n    assertSwatch(swatch, {colorTextInSlot: 'red'});\n\n    dispatchClickEvent(target, {shiftKey: true});\n    assertSwatch(swatch, {colorTextInSlot: '#f00'});\n    dispatchClickEvent(target, {shiftKey: true});\n    assertSwatch(swatch, {colorTextInSlot: '#ff0000'});\n    dispatchClickEvent(target, {shiftKey: true});\n    assertSwatch(swatch, {colorTextInSlot: 'red'});\n    dispatchClickEvent(target, {shiftKey: true});\n    assertSwatch(swatch, {colorTextInSlot: 'rgb(255 0 0)'});\n    dispatchClickEvent(target, {shiftKey: true});\n    assertSwatch(swatch, {colorTextInSlot: 'hsl(0deg 100% 50%)'});\n    dispatchClickEvent(target, {shiftKey: true});\n    assertSwatch(swatch, {colorTextInSlot: 'hwb(0deg 0% 0%)'});\n    dispatchClickEvent(target, {shiftKey: true});\n    assertSwatch(swatch, {colorTextInSlot: 'red'});\n  });\n\n  it('dispatches an event when the format changes', () => {\n    const swatch = createSwatch('red');\n    const target = getClickTarget(swatch);\n\n    let currentFormat = swatch.getFormat();\n    swatch.addEventListener(\n        InlineEditor.ColorSwatch.FormatChangedEvent.eventName, (e: InlineEditor.ColorSwatch.FormatChangedEvent) => {\n          currentFormat = e.data.format;\n        });\n\n    assert.strictEqual(currentFormat, Common.Color.Format.Nickname);\n\n    dispatchClickEvent(target, {shiftKey: true});\n    assert.strictEqual(currentFormat, Common.Color.Format.ShortHEX);\n  });\n\n  it('dispatches an event on clicks', () => {\n    const swatch = createSwatch('red');\n    const target = getClickTarget(swatch);\n\n    const swatchClickEventsReceived: Event[] = [];\n    const onClick = (e: Event) => {\n      swatchClickEventsReceived.push(e);\n    };\n    swatch.addEventListener(InlineEditor.ColorSwatch.ClickEvent.eventName, onClick);\n\n    dispatchClickEvent(target);\n    dispatchClickEvent(target);\n    dispatchClickEvent(target);\n    assert.strictEqual(swatchClickEventsReceived.length, 3, 'The right click events were received');\n\n    swatch.removeEventListener(InlineEditor.ColorSwatch.ClickEvent.eventName, onClick);\n\n    dispatchClickEvent(target);\n    assert.strictEqual(swatchClickEventsReceived.length, 3, 'No more click events received after removing listener');\n  });\n\n  it('does not dispatch a swatch-click event on shift-click', () => {\n    const swatch = createSwatch('red');\n    const target = getClickTarget(swatch);\n\n    const swatchClickEventsReceived: Event[] = [];\n    const onClick = (e: Event) => {\n      swatchClickEventsReceived.push(e);\n    };\n    swatch.addEventListener(InlineEditor.ColorSwatch.ClickEvent.eventName, onClick);\n\n    dispatchClickEvent(target, {shiftKey: true});\n    dispatchClickEvent(target, {shiftKey: true});\n    dispatchClickEvent(target, {shiftKey: true});\n\n    assert.strictEqual(swatchClickEventsReceived.length, 0, 'No swatch-click events are received on shift-click');\n\n    swatch.removeEventListener(InlineEditor.ColorSwatch.ClickEvent.eventName, onClick);\n  });\n\n  it('does not dispatch a formatchanged event on click', () => {\n    const swatch = createSwatch('red');\n    const target = getClickTarget(swatch);\n\n    const formatChangedEventsReceived: InlineEditor.ColorSwatch.FormatChangedEvent[] = [];\n    const onClick = (e: InlineEditor.ColorSwatch.FormatChangedEvent) => {\n      formatChangedEventsReceived.push(e);\n    };\n    swatch.addEventListener(InlineEditor.ColorSwatch.FormatChangedEvent.eventName, onClick);\n\n    dispatchClickEvent(target);\n    dispatchClickEvent(target);\n    dispatchClickEvent(target);\n\n    assert.strictEqual(formatChangedEventsReceived.length, 0, 'No formatchanged events are received on click');\n\n    swatch.removeEventListener(InlineEditor.ColorSwatch.FormatChangedEvent.eventName, onClick);\n  });\n});\n"]}