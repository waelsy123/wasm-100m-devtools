{"version":3,"file":"IssueCounter_test.js","sourceRoot":"","sources":["../../../../../../../../../test/unittests/front_end/ui/components/issue_counter/IssueCounter_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assertNotNullOrUndefined} from '../../../../../../front_end/core/platform/platform.js';\nimport * as IssuesManager from '../../../../../../front_end/models/issues_manager/issues_manager.js';\nimport * as IconButton from '../../../../../../front_end/ui/components/icon_button/icon_button.js';\nimport * as IssueCounter from '../../../../../../front_end/ui/components/issue_counter/issue_counter.js';\nimport {assertElement, assertElements, assertShadowRoot, renderElementIntoDOM} from '../../../helpers/DOMHelpers.js';\nimport {describeWithLocale} from '../../../helpers/EnvironmentHelpers.js';\nimport {MockIssuesManager} from '../../../models/issues_manager/MockIssuesManager.js';\n\nconst {assert} = chai;\n\nconst renderIssueCounter = (data: IssueCounter.IssueCounter.IssueCounterData):\n    {component: IssueCounter.IssueCounter.IssueCounter, shadowRoot: ShadowRoot} => {\n      const component = new IssueCounter.IssueCounter.IssueCounter();\n      component.data = data;\n      renderElementIntoDOM(component);\n      assertShadowRoot(component.shadowRoot);\n      return {component, shadowRoot: component.shadowRoot};\n    };\n\nexport const extractIconGroups =\n    (shadowRoot: ShadowRoot): {iconData: IconButton.Icon.IconData, label: string|null}[] => {\n      const iconButton = shadowRoot.querySelector('icon-button');\n      assertElement(iconButton, IconButton.IconButton.IconButton);\n      const iconButtonShadowRoot = iconButton.shadowRoot;\n      assertNotNullOrUndefined(iconButtonShadowRoot);\n      const icons = iconButtonShadowRoot.querySelectorAll('.status-icon');\n      assertElements(icons, IconButton.Icon.Icon);\n      const labels = iconButtonShadowRoot.querySelectorAll('.icon-button-title');\n      assertElements(labels, HTMLSpanElement);\n      assert(icons.length === labels.length, 'Expected icons and labels to appear in pairs');\n      const iconGroups = [];\n      for (let i = 0; i < icons.length; ++i) {\n        const labelElement = labels[i];\n        const label = window.getComputedStyle(labelElement).display === 'none' ? null : labelElement.textContent;\n        iconGroups.push({iconData: icons[i].data, label});\n      }\n      return iconGroups;\n    };\n\nexport const extractButton = (shadowRoot: ShadowRoot): HTMLButtonElement => {\n  const iconButton = shadowRoot.querySelector('icon-button');\n  assertElement(iconButton, IconButton.IconButton.IconButton);\n  const iconButtonShadowRoot = iconButton.shadowRoot;\n  assertNotNullOrUndefined(iconButtonShadowRoot);\n  const button = iconButtonShadowRoot.querySelector('button');\n  assertElement(button, HTMLButtonElement);\n  return button;\n};\n\ndescribeWithLocale('IssueCounter', () => {\n  describe('with omitting zero-count issue kinds', () => {\n    it('renders correctly', () => {\n      const issuesManager = new MockIssuesManager([]);\n      const {shadowRoot} = renderIssueCounter({\n        issuesManager: issuesManager as unknown as IssuesManager.IssuesManager.IssuesManager,\n        throttlerTimeout: 0,\n      });\n\n      const icons = extractIconGroups(shadowRoot);\n      assert.strictEqual(icons.length, 2);\n      assert.deepEqual(icons.map(c => c.label), ['2', '1']);\n      const iconNames = icons.map(c => 'iconName' in c.iconData ? c.iconData.iconName : undefined);\n      assert.deepEqual(iconNames, ['issue-cross-icon', 'issue-exclamation-icon']);\n    });\n\n    it('updates correctly', () => {\n      const issuesManager = new MockIssuesManager([]);\n      const {shadowRoot} = renderIssueCounter({\n        issuesManager: issuesManager as unknown as IssuesManager.IssuesManager.IssuesManager,\n        throttlerTimeout: 0,\n      });\n\n      {\n        const icons = extractIconGroups(shadowRoot);\n        assert.strictEqual(icons.length, 2);\n        assert.deepEqual(icons.map(c => c.label), ['2', '1']);\n        const iconNames = icons.map(c => 'iconName' in c.iconData ? c.iconData.iconName : undefined);\n        assert.deepEqual(iconNames, ['issue-cross-icon', 'issue-exclamation-icon']);\n      }\n\n      issuesManager.incrementIssueCountsOfAllKinds();\n\n      {\n        const icons = extractIconGroups(shadowRoot);\n        assert.strictEqual(icons.length, 3);\n        assert.deepEqual(icons.map(c => c.label), ['3', '2', '1']);\n        const iconNames = icons.map(c => 'iconName' in c.iconData ? c.iconData.iconName : undefined);\n        assert.deepEqual(iconNames, ['issue-cross-icon', 'issue-exclamation-icon', 'issue-text-icon']);\n      }\n    });\n\n    it('updates correctly through setter', () => {\n      const issuesManager = new MockIssuesManager([]);\n      const {component, shadowRoot} = renderIssueCounter({\n        issuesManager: issuesManager as unknown as IssuesManager.IssuesManager.IssuesManager,\n        throttlerTimeout: 0,\n      });\n\n      {\n        const icons = extractIconGroups(shadowRoot);\n        assert.strictEqual(icons.length, 2);\n        assert.deepEqual(icons.map(c => c.label), ['2', '1']);\n        const iconNames = icons.map(c => 'iconName' in c.iconData ? c.iconData.iconName : undefined);\n        assert.deepEqual(iconNames, ['issue-cross-icon', 'issue-exclamation-icon']);\n      }\n\n      component.data = {...component.data, displayMode: IssueCounter.IssueCounter.DisplayMode.OnlyMostImportant};\n\n      {\n        const icons = extractIconGroups(shadowRoot);\n        assert.strictEqual(icons.length, 1);\n        assert.deepEqual(icons.map(c => c.label), ['2']);\n        const iconNames = icons.map(c => 'iconName' in c.iconData ? c.iconData.iconName : undefined);\n        assert.deepEqual(iconNames, ['issue-cross-icon']);\n      }\n    });\n\n    it('Aria label is added correctly', () => {\n      const expectedAccessibleName = 'Accessible Name';\n      const issuesManager = new MockIssuesManager([]);\n      const {shadowRoot} = renderIssueCounter({\n        issuesManager: issuesManager as unknown as IssuesManager.IssuesManager.IssuesManager,\n        throttlerTimeout: 0,\n        accessibleName: expectedAccessibleName,\n      });\n\n      const button = extractButton(shadowRoot);\n      const accessibleName = button.getAttribute('aria-label');\n\n      assert.strictEqual(accessibleName, expectedAccessibleName);\n    });\n  });\n\n  describe('without omitting zero count issue kinds', () => {\n    it('renders correctly', () => {\n      const issuesManager = new MockIssuesManager([]);\n      const {shadowRoot} = renderIssueCounter({\n        issuesManager: issuesManager as unknown as IssuesManager.IssuesManager.IssuesManager,\n        displayMode: IssueCounter.IssueCounter.DisplayMode.ShowAlways,\n        throttlerTimeout: 0,\n      });\n\n      const icons = extractIconGroups(shadowRoot);\n      assert.strictEqual(icons.length, 3);\n      assert.deepEqual(icons.map(c => c.label), ['2', '1', '0']);\n      const iconNames = icons.map(c => 'iconName' in c.iconData ? c.iconData.iconName : undefined);\n      assert.deepEqual(iconNames, ['issue-cross-icon', 'issue-exclamation-icon', 'issue-text-icon']);\n    });\n\n    it('updates correctly', () => {\n      const issuesManager = new MockIssuesManager([]);\n      const {shadowRoot} = renderIssueCounter({\n        issuesManager: issuesManager as unknown as IssuesManager.IssuesManager.IssuesManager,\n        displayMode: IssueCounter.IssueCounter.DisplayMode.ShowAlways,\n        throttlerTimeout: 0,\n      });\n\n      {\n        const icons = extractIconGroups(shadowRoot);\n        assert.strictEqual(icons.length, 3);\n        assert.deepEqual(icons.map(c => c.label), ['2', '1', '0']);\n        const iconNames = icons.map(c => 'iconName' in c.iconData ? c.iconData.iconName : undefined);\n        assert.deepEqual(iconNames, ['issue-cross-icon', 'issue-exclamation-icon', 'issue-text-icon']);\n      }\n\n      issuesManager.incrementIssueCountsOfAllKinds();\n\n      {\n        const icons = extractIconGroups(shadowRoot);\n        assert.strictEqual(icons.length, 3);\n        assert.deepEqual(icons.map(c => c.label), ['3', '2', '1']);\n        const iconNames = icons.map(c => 'iconName' in c.iconData ? c.iconData.iconName : undefined);\n        assert.deepEqual(iconNames, ['issue-cross-icon', 'issue-exclamation-icon', 'issue-text-icon']);\n      }\n    });\n  });\n\n  describe('in compact mode', () => {\n    it('renders correctly', () => {\n      const issuesManager = new MockIssuesManager([]);\n      const {shadowRoot} = renderIssueCounter({\n        issuesManager: issuesManager as unknown as IssuesManager.IssuesManager.IssuesManager,\n        throttlerTimeout: 0,\n        compact: true,\n      });\n\n      const icons = extractIconGroups(shadowRoot);\n      assert.strictEqual(icons.length, 1);\n      assert.deepEqual(icons.map(c => c.label), [null]);\n      const iconNames = icons.map(c => 'iconName' in c.iconData ? c.iconData.iconName : undefined);\n      assert.deepEqual(iconNames, ['issue-cross-icon']);\n    });\n\n    it('renders correctly with only improvement issues', () => {\n      const issuesManager = new MockIssuesManager([]);\n      issuesManager.setNumberOfIssues(new Map([\n        [IssuesManager.Issue.IssueKind.Improvement, 3],\n        [IssuesManager.Issue.IssueKind.BreakingChange, 0],\n        [IssuesManager.Issue.IssueKind.PageError, 0],\n      ]));\n      const {shadowRoot} = renderIssueCounter({\n        issuesManager: issuesManager as unknown as IssuesManager.IssuesManager.IssuesManager,\n        throttlerTimeout: 0,\n        compact: true,\n      });\n\n      const icons = extractIconGroups(shadowRoot);\n      assert.strictEqual(icons.length, 1);\n      assert.deepEqual(icons.map(c => c.label), [null]);\n      const iconNames = icons.map(c => 'iconName' in c.iconData ? c.iconData.iconName : undefined);\n      assert.deepEqual(iconNames, ['issue-text-icon']);\n    });\n  });\n});\n\ndescribeWithLocale('getIssueCountsEnumeration', () => {\n  it('formats issue counts correctly', () => {\n    const issuesManager = new MockIssuesManager([]);\n    const string = IssueCounter.IssueCounter.getIssueCountsEnumeration(\n        issuesManager as unknown as IssuesManager.IssuesManager.IssuesManager);\n    assert.strictEqual(string, '2 page errors, 1 breaking change');\n  });\n  it('formats issue counts correctly when displaying zero entries', () => {\n    const issuesManager = new MockIssuesManager([]);\n    const string = IssueCounter.IssueCounter.getIssueCountsEnumeration(\n        issuesManager as unknown as IssuesManager.IssuesManager.IssuesManager, false);\n    assert.strictEqual(string, '2 page errors, 1 breaking change, 0 possible improvements');\n  });\n});\n"]}