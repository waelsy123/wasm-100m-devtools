{"version":3,"file":"MarkdownLink_test.js","sourceRoot":"","sources":["../../../../../../../../test/unittests/front_end/ui/components/MarkdownLink_test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,YAAY,MAAM,uEAAuE,CAAC;AACtG,OAAO,KAAK,EAAE,MAAM,8CAA8C,CAAC;AACnE,OAAO,EAAC,gBAAgB,EAAE,yBAAyB,EAAE,oBAAoB,EAAC,MAAM,6BAA6B,CAAC;AAE9G,MAAM,EAAC,MAAM,EAAC,GAAG,IAAI,CAAC;AAEtB,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;IAC5B,MAAM,CAAC,KAAK,IAAI,EAAE;QAChB,YAAY,CAAC,gBAAgB,CAAC,aAAa,CAAC,GAAG,CAAC,WAAW,EAAE,oBAAoB,CAAC,CAAC;IACrF,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,wBAAwB,EAAE,GAAG,EAAE;QAChC,MAAM,SAAS,GAAG,IAAI,YAAY,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;QAC/D,SAAS,CAAC,IAAI,GAAG,EAAC,GAAG,EAAE,WAAW,EAAE,KAAK,EAAE,WAAW,EAAC,CAAC;QACxD,oBAAoB,CAAC,SAAS,CAAC,CAAC;QAChC,gBAAgB,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QACvC,MAAM,aAAa,GAAG,yBAAyB,CAAC,SAAS,EAAE,QAAQ,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrF,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAChC,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;QAC3D,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,EAAE,qBAAqB,CAAC,CAAC;IAChE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as MarkdownView from '../../../../../front_end/ui/components/markdown_view/markdown_view.js';\nimport * as UI from '../../../../../front_end/ui/legacy/legacy.js';\nimport {assertShadowRoot, getElementWithinComponent, renderElementIntoDOM} from '../../helpers/DOMHelpers.js';\n\nconst {assert} = chai;\n\ndescribe('MarkdownLink', () => {\n  before(async () => {\n    MarkdownView.MarkdownLinksMap.markdownLinks.set('test-link', 'http://exampleLink');\n  });\n  it('renders link correctly', () => {\n    const component = new MarkdownView.MarkdownLink.MarkdownLink();\n    component.data = {key: 'test-link', title: 'Test link'};\n    renderElementIntoDOM(component);\n    assertShadowRoot(component.shadowRoot);\n    const linkComponent = getElementWithinComponent(component, 'x-link', UI.XLink.XLink);\n    assert.isNotNull(linkComponent);\n    assert.strictEqual(linkComponent.textContent, 'Test link');\n    assert.strictEqual(linkComponent.href, 'http://examplelink/');\n  });\n});\n"]}