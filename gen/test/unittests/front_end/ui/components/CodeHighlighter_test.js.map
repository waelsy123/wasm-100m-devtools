{"version":3,"file":"CodeHighlighter_test.js","sourceRoot":"","sources":["../../../../../../../../test/unittests/front_end/ui/components/CodeHighlighter_test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,eAAe,MAAM,6EAA6E,CAAC;AAE/G,MAAM,EAAC,MAAM,EAAC,GAAG,IAAI,CAAC;AAEtB,SAAS,WAAW,CAAC,IAAY;IAC/B,MAAM,KAAK,GAAG,qBAAqB,EAAE,MAAM,GAAuB,EAAE,CAAC;IACrE,KAAK,IAAI,GAAG,GAAG,CAAC,IAAI;QAClB,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/B,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;QAC/C,IAAI,IAAI,GAAG,GAAG,EAAE;YACd,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;SAC1C;QACD,IAAI,CAAC,KAAK,EAAE;YACV,MAAM;SACP;QACD,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClC,GAAG,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;KACrC;IACD,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,SAAS,aAAa,CAAC,IAAY,EAAE,QAAgB;IACnD,OAAO,KAAK,IAAI,EAAE;QAChB,MAAM,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC,EAAE,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC3E,MAAM,WAAW,GAAG,MAAM,eAAe,CAAC,eAAe,CAAC,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QACpF,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,WAAW,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,KAAK,EAAQ,EAAE;YAC1C,MAAM,CAAC,WAAW,CACd,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAClF,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;AACJ,CAAC;AAED,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC/B,mBAAmB;IACnB,EAAE,CAAC,0BAA0B,EAAE,aAAa,CAAC;;;EAG7C,EAAE,iBAAiB,CAAC,CAAC,CAAC;IAEtB,EAAE,CAAC,0BAA0B,EAAE,aAAa,CAAC;;;EAG7C,EAAE,iBAAiB,CAAC,CAAC,CAAC;IAEtB,EAAE,CAAC,mBAAmB,EAAE,aAAa,CAAC;;CAEvC,EAAE,UAAU,CAAC,CAAC,CAAC;IAEd,EAAE,CAAC,oBAAoB,EAAE,aAAa,CAAC;;;;cAI3B,EAAE,WAAW,CAAC,CAAC,CAAC;IAE5B,EAAE,CAAC,mBAAmB,EAAE,aAAa,CAAC;;;;;EAKtC,EAAE,UAAU,CAAC,CAAC,CAAC;IAEf,EAAE,CAAC,oBAAoB,EAAE,aAAa,CAAC;;;;;CAKxC,EAAE,kBAAkB,CAAC,CAAC,CAAC;IAEtB,EAAE,CAAC,oBAAoB,EAAE,aAAa,CAAC;;;;EAIvC,EAAE,kBAAkB,CAAC,CAAC,CAAC;IAEvB,EAAE,CAAC,wBAAwB,EAAE,aAAa,CAAC;;;;CAI5C,EAAE,eAAe,CAAC,CAAC,CAAC;IAEnB,EAAE,CAAC,sBAAsB,EAAE,aAAa,CAAC;;;CAG1C,EAAE,eAAe,CAAC,CAAC,CAAC;IAEnB,EAAE,CAAC,0BAA0B,EAAE,aAAa,CAAC;;CAE9C,EAAE,WAAW,CAAC,CAAC,CAAC;IACf,kBAAkB;AACpB,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as CodeHighlighter from '../../../../../front_end/ui/components/code_highlighter/code_highlighter.js';\n\nconst {assert} = chai;\n\nfunction parseTokens(code: string): [string, string][] {\n  const token = /\\[(\\S+) ([^\\]]+)\\]/g, tokens: [string, string][] = [];\n  for (let pos = 0;;) {\n    const match = token.exec(code);\n    const next = match ? match.index : code.length;\n    if (next > pos) {\n      tokens.push([code.slice(pos, next), '']);\n    }\n    if (!match) {\n      break;\n    }\n    tokens.push([match[2], match[1]]);\n    pos = match.index + match[0].length;\n  }\n  return tokens;\n}\n\nfunction testHighlight(code: string, mimeType: string) {\n  return async () => {\n    const tokens = parseTokens(code), rawCode = tokens.map(t => t[0]).join('');\n    const highlighter = await CodeHighlighter.CodeHighlighter.create(rawCode, mimeType);\n    let i = 0;\n    highlighter.highlight((text, style): void => {\n      assert.strictEqual(\n          JSON.stringify([text, style.replace(/\\btoken-/g, '').split(' ').sort().join('&')]),\n          JSON.stringify(tokens[i++] || ['', '']));\n    });\n  };\n}\n\ndescribe('CodeHighlighter', () => {\n  // clang-format off\n  it('can highlight JavaScript', testHighlight(`\n[keyword function] [variable foo]([variable bar]) {\n  [keyword return] [number 22];\n}`, 'text/javascript'));\n\n  it('can highlight TypeScript', testHighlight(`\n[keyword type] [type X] = {\n  [property x]: [type boolean]\n}`, 'text/typescript'));\n\n  it('can highlight JSX', testHighlight(`\n[keyword const] [variable t] = <[tag div] [attribute disabled]>hello</[tag div]>\n`, 'text/jsx'));\n\n  it('can highlight HTML', testHighlight(`\n[meta <!doctype html>]\n<[tag html] [attribute lang]=[attribute-value ar]>\n  ...\n</[tag html]>`, 'text/html'));\n\n  it('can highlight CSS', testHighlight(`\n[tag span].[type cls]#[atom id] {\n  [property font-weight]: [atom bold];\n  [property color]: [number #ff2];\n  [property width]: [number 4px];\n}`, 'text/css'));\n\n  it('can highlight WAST', testHighlight(`\n([keyword module]\n ([keyword type] [variable $t] ([keyword func] ([keyword param] [type i32])))\n ([keyword func] [variable $max] [comment (; 1 ;)] ([keyword param] [variable $0] [type i32]) ([keyword result] [type i32])\n   ([keyword get_local] [variable $0])))\n`, 'text/webassembly'));\n\n  it('can highlight JSON', testHighlight(`\n{\n  [property \"one\"]: [number 2],\n  [property \"two\"]: [atom true]\n}`, 'application/json'));\n\n  it('can highlight Markdown', testHighlight(`\n[heading&meta #][heading  Head]\n\nParagraph with [emphasis&meta *][emphasis emphasized][emphasis&meta *] text.\n`, 'text/markdown'));\n\n  it('can highlight Python', testHighlight(`\n[keyword def] [variable f]([variable x] = [atom True]):\n  [keyword return] [variable x] * [number 10];\n`, 'text/x-python'));\n\n  it('can highlight Shell code', testHighlight(`\n[builtin cat] [string \"a\"]\n`, 'text/x-sh'));\n  // clang_format on\n});\n"]}