{"version":3,"file":"TextPrompt_test.js","sourceRoot":"","sources":["../../../../../../../../test/unittests/front_end/ui/components/TextPrompt_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as TextPrompt from '../../../../../front_end/ui/components/text_prompt/text_prompt.js';\n\nimport {assertElements, assertShadowRoot, renderElementIntoDOM} from '../../helpers/DOMHelpers.js';\n\nconst {assert} = chai;\n\nconst renderTextPrompt = (data: TextPrompt.TextPrompt.TextPromptData): TextPrompt.TextPrompt.TextPrompt => {\n  const component = new TextPrompt.TextPrompt.TextPrompt();\n  component.data = data;\n  return component;\n};\n\nconst defaultTextPromptData: TextPrompt.TextPrompt.TextPromptData = {\n  ariaLabel: 'Quick open prompt',\n  prefix: 'Open',\n  suggestion: 'File',\n};\n\ndescribe('TextPrompt', () => {\n  it('renders one text prompt correctly', () => {\n    const component = renderTextPrompt(defaultTextPromptData);\n    renderElementIntoDOM(component);\n    assertShadowRoot(component.shadowRoot);\n\n    const textPromptPrefixs = component.shadowRoot.querySelectorAll('.prefix');\n    assert.strictEqual(textPromptPrefixs.length, 1);\n    assertElements(textPromptPrefixs, HTMLSpanElement);\n\n    const textPromptInputs = component.shadowRoot.querySelectorAll('.text-prompt-input');\n    assert.strictEqual(textPromptInputs.length, 1);\n    assertElements(textPromptInputs, HTMLSpanElement);\n    assert.deepEqual(component.data, defaultTextPromptData);\n  });\n\n  describe('data setter', () => {\n    it('sets the prefix correctly', () => {\n      const component = renderTextPrompt(defaultTextPromptData);\n      renderElementIntoDOM(component);\n      assertShadowRoot(component.shadowRoot);\n\n      component.setPrefix('Run');\n\n      const textPromptPrefixs = component.shadowRoot.querySelectorAll('.prefix');\n      assert.strictEqual(textPromptPrefixs.length, 1);\n      assert.strictEqual(textPromptPrefixs[0].textContent?.trim(), 'Run');\n    });\n    it('sets the suggestion correctly', () => {\n      const component = renderTextPrompt(defaultTextPromptData);\n      renderElementIntoDOM(component);\n      assertShadowRoot(component.shadowRoot);\n\n      component.setSuggestion('Command');\n\n      const textPromptSuggestions = component.shadowRoot.querySelectorAll('.suggestion');\n      assert.strictEqual(textPromptSuggestions.length, 1);\n      assert.strictEqual((textPromptSuggestions[0] as HTMLInputElement).value.trim(), 'Command');\n    });\n    it('sets the input text correctly', () => {\n      const component = renderTextPrompt(defaultTextPromptData);\n      renderElementIntoDOM(component);\n      assertShadowRoot(component.shadowRoot);\n\n      component.setText('text');\n\n      const textPromptInputs = component.shadowRoot.querySelectorAll('.input');\n      assert.strictEqual(textPromptInputs.length, 1);\n      assert.strictEqual((textPromptInputs[0] as HTMLInputElement).value.trim(), 'text');\n    });\n    it('sets the input and suggestion text correctly', () => {\n      const component = renderTextPrompt(defaultTextPromptData);\n      renderElementIntoDOM(component);\n      assertShadowRoot(component.shadowRoot);\n\n      component.setText('@');\n      component.setSuggestion('Command');\n\n      const textPromptInputs = component.shadowRoot.querySelectorAll('.input');\n      assert.strictEqual((textPromptInputs[0] as HTMLInputElement).value.trim(), '@');\n      const textPromptSuggestions = component.shadowRoot.querySelectorAll('.suggestion');\n      assert.strictEqual((textPromptSuggestions[0] as HTMLInputElement).value.trim(), '@Command');\n    });\n  });\n  it('focus on the input element correctly', () => {\n    const component = renderTextPrompt(defaultTextPromptData);\n    renderElementIntoDOM(component);\n    assertShadowRoot(component.shadowRoot);\n\n    const textPromptInput = component.shadowRoot.querySelectorAll('.text-prompt-input')[0];\n    assert.isFalse(textPromptInput.hasFocus());\n\n    component.focus();\n    assert.isTrue(textPromptInput.hasFocus());\n  });\n});\n"]}