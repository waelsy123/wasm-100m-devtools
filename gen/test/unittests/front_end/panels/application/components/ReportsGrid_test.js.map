{"version":3,"file":"ReportsGrid_test.js","sourceRoot":"","sources":["../../../../../../../../../test/unittests/front_end/panels/application/components/ReportsGrid_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Root from '../../../../../../front_end/core/root/root.js';\nimport * as Protocol from '../../../../../../front_end/generated/protocol.js';\nimport * as ApplicationComponents from '../../../../../../front_end/panels/application/components/components.js';\nimport * as DataGrid from '../../../../../../front_end/ui/components/data_grid/data_grid.js';\nimport * as Coordinator from '../../../../../../front_end/ui/components/render_coordinator/render_coordinator.js';\nimport {assertShadowRoot, getElementWithinComponent, renderElementIntoDOM} from '../../../helpers/DOMHelpers.js';\nimport {describeWithEnvironment} from '../../../helpers/EnvironmentHelpers.js';\nimport {getHeaderCells, getValuesOfAllBodyRows} from '../../../ui/components/DataGridHelpers.js';\n\nconst {assert} = chai;\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\nconst renderReportsGrid =\n    async(data?: ApplicationComponents.ReportsGrid.ReportsGridData|null): Promise<HTMLElement> => {\n  const component = new ApplicationComponents.ReportsGrid.ReportsGrid();\n  if (data) {\n    component.data = data;\n  }\n  renderElementIntoDOM(component);\n  assertShadowRoot(component.shadowRoot);\n  await coordinator.done();\n  if (!data) {\n    return component;\n  }\n\n  const controller = getElementWithinComponent(\n      component, 'devtools-data-grid-controller', DataGrid.DataGridController.DataGridController);\n  assertShadowRoot(controller.shadowRoot);\n  const datagrid = getElementWithinComponent(controller, 'devtools-data-grid', DataGrid.DataGrid.DataGrid);\n  assertShadowRoot(datagrid.shadowRoot);\n  return datagrid;\n};\n\nconst getHeaderText = (cell: HTMLTableCellElement): string|null => {\n  return cell.textContent?.trim() ||\n      cell.querySelector('devtools-resources-reports-grid-status-header')?.shadowRoot?.textContent?.trim() || null;\n};\n\ndescribeWithEnvironment('ReportsGrid', async () => {\n  it('displays placeholder text if no data', async () => {\n    const component = await renderReportsGrid();\n    assertShadowRoot(component.shadowRoot);\n\n    const placeholder = component.shadowRoot.querySelector('.reporting-placeholder div');\n    assert.strictEqual(placeholder?.textContent, 'No reports to display');\n  });\n\n  it('renders grid with correct content', async () => {\n    const body = {\n      columnNumber: 8,\n      id: 'PrefixedStorageInfo',\n      lineNumber: 15,\n      message:\n          '\\'window.webkitStorageInfo\\' is deprecated. Please use \\'navigator.webkitTemporaryStorage\\' or \\'navigator.webkitPersistentStorage\\' instead.',\n      sourceFile: 'https://example.com/script.js',\n    };\n    const data = {\n      reports: [{\n        id: 'some_id' as Protocol.Network.ReportId,\n        initiatorUrl: 'https://example.com/script.js',\n        destination: 'main-endpoint',\n        type: 'deprecation',\n        timestamp: 1632747042.12696,\n        depth: 1,\n        completedAttempts: 0,\n        body: JSON.stringify(body),\n        status: Protocol.Network.ReportStatus.Queued,\n      }],\n    };\n\n    const dataGrid = await renderReportsGrid(data);\n    assertShadowRoot(dataGrid.shadowRoot);\n\n    const headerCells = getHeaderCells(dataGrid.shadowRoot);\n    const values = Array.from(headerCells, getHeaderText);\n    assert.deepEqual(values, ['URL', 'Type', 'Status', 'Destination', 'Generated at', 'Body']);\n\n    const rowValues = getValuesOfAllBodyRows(dataGrid.shadowRoot);\n    assert.strictEqual(rowValues[0][0], 'https://example.com/script.js', 'URL does not match');\n    assert.strictEqual(rowValues[0][1], 'deprecation', 'Type does not match');\n    assert.strictEqual(rowValues[0][2], 'Queued', 'Status does not match');\n    assert.strictEqual(rowValues[0][3], 'main-endpoint', 'Destination does not match');\n    assert.strictEqual(rowValues[0][5], JSON.stringify(JSON.stringify(body)), 'Body does not match');\n  });\n\n  it('renders ID column if experiment is enabled', async () => {\n    Root.Runtime.experiments.enableForTest('protocolMonitor');\n    const body = {\n      columnNumber: 8,\n      id: 'PrefixedStorageInfo',\n      lineNumber: 15,\n      message:\n          '\\'window.webkitStorageInfo\\' is deprecated. Please use \\'navigator.webkitTemporaryStorage\\' or \\'navigator.webkitPersistentStorage\\' instead.',\n      sourceFile: 'https://example.com/script.js',\n    };\n    const data = {\n      reports: [{\n        id: 'some_id' as Protocol.Network.ReportId,\n        initiatorUrl: 'https://example.com/script.js',\n        destination: 'main-endpoint',\n        type: 'deprecation',\n        timestamp: 1632747042.12696,\n        depth: 1,\n        completedAttempts: 0,\n        body: JSON.stringify(body),\n        status: Protocol.Network.ReportStatus.Queued,\n      }],\n    };\n\n    const dataGrid = await renderReportsGrid(data);\n    assertShadowRoot(dataGrid.shadowRoot);\n\n    const headerCells = getHeaderCells(dataGrid.shadowRoot);\n    const values = Array.from(headerCells, getHeaderText);\n    assert.deepEqual(values, ['ID', 'URL', 'Type', 'Status', 'Destination', 'Generated at', 'Body']);\n\n    const rowValues = getValuesOfAllBodyRows(dataGrid.shadowRoot);\n    assert.strictEqual(rowValues[0][0], 'some_id', 'ID does not match');\n    assert.strictEqual(rowValues[0][1], 'https://example.com/script.js', 'URL does not match');\n    assert.strictEqual(rowValues[0][2], 'deprecation', 'Type does not match');\n    assert.strictEqual(rowValues[0][3], 'Queued', 'Status does not match');\n    assert.strictEqual(rowValues[0][4], 'main-endpoint', 'Destination does not match');\n    assert.strictEqual(rowValues[0][6], JSON.stringify(JSON.stringify(body)), 'Body does not match');\n  });\n});\n"]}