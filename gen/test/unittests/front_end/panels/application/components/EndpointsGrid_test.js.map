{"version":3,"file":"EndpointsGrid_test.js","sourceRoot":"","sources":["../../../../../../../../../test/unittests/front_end/panels/application/components/EndpointsGrid_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as ApplicationComponents from '../../../../../../front_end/panels/application/components/components.js';\nimport * as DataGrid from '../../../../../../front_end/ui/components/data_grid/data_grid.js';\nimport * as Coordinator from '../../../../../../front_end/ui/components/render_coordinator/render_coordinator.js';\nimport {assertShadowRoot, getElementWithinComponent, renderElementIntoDOM} from '../../../helpers/DOMHelpers.js';\nimport {describeWithLocale} from '../../../helpers/EnvironmentHelpers.js';\nimport {getHeaderCells, getValuesOfAllBodyRows} from '../../../ui/components/DataGridHelpers.js';\n\nconst {assert} = chai;\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\nconst renderEndpointsGrid =\n    async(data?: ApplicationComponents.EndpointsGrid.EndpointsGridData|null): Promise<HTMLElement> => {\n  const component = new ApplicationComponents.EndpointsGrid.EndpointsGrid();\n  if (data) {\n    component.data = data;\n  }\n  renderElementIntoDOM(component);\n  assertShadowRoot(component.shadowRoot);\n  await coordinator.done();\n  if (!data) {\n    return component;\n  }\n\n  const controller = getElementWithinComponent(\n      component, 'devtools-data-grid-controller', DataGrid.DataGridController.DataGridController);\n  assertShadowRoot(controller.shadowRoot);\n  const datagrid = getElementWithinComponent(controller, 'devtools-data-grid', DataGrid.DataGrid.DataGrid);\n  assertShadowRoot(datagrid.shadowRoot);\n  return datagrid;\n};\n\nconst getHeaderText = (cell: HTMLTableCellElement): string|null => {\n  return cell.textContent?.trim() ||\n      cell.querySelector('devtools-resources-endpoints-grid-status-header')?.shadowRoot?.textContent?.trim() || null;\n};\n\ndescribeWithLocale('EndpointsGrid', async () => {\n  it('displays placeholder text if no data', async () => {\n    const component = new ApplicationComponents.EndpointsGrid.EndpointsGrid();\n    renderElementIntoDOM(component);\n    assertShadowRoot(component.shadowRoot);\n    await coordinator.done();\n\n    const placeholder = component.shadowRoot.querySelector('.reporting-placeholder div');\n    assert.strictEqual(placeholder?.textContent, 'No endpoints to display');\n  });\n\n  it('renders grid with correct content', async () => {\n    const endpoints = new Map([\n      [\n        'https://www.my-page.com',\n        [\n          {url: 'https://www.reports-endpoint/main', groupName: 'main-endpoint'},\n          {url: 'https://www.reports-endpoint/default', groupName: 'default'},\n        ],\n      ],\n      [\n        'https://www.other-page.com',\n        [\n          {url: 'https://www.csp-reports/csp', groupName: 'csp-endpoint'},\n        ],\n      ],\n    ]);\n    const data = {endpoints};\n\n    const dataGrid = await renderEndpointsGrid(data);\n    assertShadowRoot(dataGrid.shadowRoot);\n\n    const headerCells = getHeaderCells(dataGrid.shadowRoot);\n    const values = Array.from(headerCells, getHeaderText);\n    assert.deepEqual(values, ['Origin', 'Name', 'URL']);\n\n    const rowValues = getValuesOfAllBodyRows(dataGrid.shadowRoot);\n    assert.strictEqual(rowValues.length, 3);\n    assert.strictEqual(rowValues[0][0], 'https://www.my-page.com', 'Endpoint origin does not match');\n    assert.strictEqual(rowValues[0][1], 'main-endpoint', 'Endpoint name does not match');\n    assert.strictEqual(rowValues[0][2], 'https://www.reports-endpoint/main', 'Endpoint URL does not match');\n    assert.strictEqual(rowValues[1][0], 'https://www.my-page.com', 'Endpoint origin does not match');\n    assert.strictEqual(rowValues[1][1], 'default', 'Endpoint name does not match');\n    assert.strictEqual(rowValues[1][2], 'https://www.reports-endpoint/default', 'Endpoint URL does not match');\n    assert.strictEqual(rowValues[2][0], 'https://www.other-page.com', 'Endpoint origin does not match');\n    assert.strictEqual(rowValues[2][1], 'csp-endpoint', 'Endpoint name does not match');\n    assert.strictEqual(rowValues[2][2], 'https://www.csp-reports/csp', 'Endpoint URL does not match');\n  });\n});\n"]}