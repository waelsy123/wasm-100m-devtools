{"version":3,"file":"LayoutPane_test.js","sourceRoot":"","sources":["../../../../../../../../../test/unittests/front_end/panels/elements/components/LayoutPane_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../../../../front_end/core/common/common.js';\nimport * as ElementsComponents from '../../../../../../front_end/panels/elements/components/components.js';\nimport {assertElement, assertShadowRoot, getEventPromise, renderElementIntoDOM} from '../../../helpers/DOMHelpers.js';\nimport {describeWithLocale} from '../../../helpers/EnvironmentHelpers.js';\n\nconst {assert} = chai;\n\ndescribeWithLocale('LayoutPane', async () => {\n  function queryLabels(component: HTMLElement, selector: string) {\n    assertShadowRoot(component.shadowRoot);\n    return Array.from(component.shadowRoot.querySelectorAll(selector)).map(label => {\n      const input = label.querySelector('[data-input]');\n      assertElement(input, HTMLElement);\n\n      return {\n        label: label.getAttribute('title'),\n        input: input.tagName,\n      };\n    });\n  }\n\n  it('renders settings', async () => {\n    const component = new ElementsComponents.LayoutPane.LayoutPane();\n    renderElementIntoDOM(component);\n\n    component.data = {\n      gridElements: [],\n      settings: [\n        {\n          name: 'booleanSetting',\n          type: Common.Settings.SettingType.BOOLEAN,\n          value: false,\n          title: 'Boolean setting title',\n          options: [\n            {\n              title: 'Set true',\n              value: true,\n            },\n            {\n              title: 'Set false',\n              value: false,\n            },\n          ],\n        },\n        {\n          name: 'enumSetting',\n          type: Common.Settings.SettingType.ENUM,\n          value: 'both',\n          title: 'Enum setting title',\n          options: [\n            {\n              title: 'Set both',\n              value: 'both',\n            },\n            {\n              title: 'Set none',\n              value: 'none',\n            },\n          ],\n        },\n      ],\n    };\n\n    assert.deepEqual(queryLabels(component, '[data-enum-setting]'), [{label: 'Enum setting title', input: 'SELECT'}]);\n    assert.deepEqual(\n        queryLabels(component, '[data-boolean-setting]'), [{label: 'Boolean setting title', input: 'INPUT'}]);\n  });\n\n  it('sends event when a setting is changed', async () => {\n    const component = new ElementsComponents.LayoutPane.LayoutPane();\n    renderElementIntoDOM(component);\n\n    component.data = {\n      gridElements: [],\n      settings: [\n        {\n          name: 'booleanSetting',\n          type: Common.Settings.SettingType.BOOLEAN,\n          value: false,\n          title: 'Boolean setting title',\n          options: [\n            {\n              title: 'Set true',\n              value: true,\n            },\n            {\n              title: 'Set false',\n              value: false,\n            },\n          ],\n        },\n      ],\n    };\n\n    assertShadowRoot(component.shadowRoot);\n\n    const input = component.shadowRoot.querySelector('[data-input]');\n    assertElement(input, HTMLInputElement);\n\n    const eventPromise =\n        getEventPromise<ElementsComponents.LayoutPane.SettingChangedEvent>(component, 'settingchanged');\n\n    input.click();\n\n    const event = await eventPromise;\n    assert.deepEqual(event.data, {setting: 'booleanSetting', value: true});\n  });\n\n  it('renders grid elements', async () => {\n    const component = new ElementsComponents.LayoutPane.LayoutPane();\n    renderElementIntoDOM(component);\n\n    component.data = {\n      gridElements: [\n        {\n          id: 1,\n          color: 'red',\n          name: 'div',\n          domId: 'elementId',\n          enabled: false,\n          reveal: () => {},\n          toggle: () => {},\n          setColor: () => {},\n          highlight: () => {},\n          hideHighlight: () => {},\n        },\n        {\n          id: 2,\n          color: 'blue',\n          name: 'span',\n          domClasses: ['class1', 'class2'],\n          enabled: false,\n          reveal: () => {},\n          toggle: () => {},\n          setColor: () => {},\n          highlight: () => {},\n          hideHighlight: () => {},\n        },\n        {\n          id: 3,\n          color: 'green',\n          name: 'div',\n          enabled: false,\n          reveal: () => {},\n          toggle: () => {},\n          setColor: () => {},\n          highlight: () => {},\n          hideHighlight: () => {},\n        },\n      ],\n      settings: [],\n    };\n\n    assertShadowRoot(component.shadowRoot);\n\n    assert.strictEqual(queryLabels(component, '[data-element]').length, 3);\n  });\n\n  it('renders flex elements', async () => {\n    const component = new ElementsComponents.LayoutPane.LayoutPane();\n    renderElementIntoDOM(component);\n\n    component.data = {\n      gridElements: [],\n      flexContainerElements: [\n        {\n          id: 1,\n          color: 'red',\n          name: 'div',\n          domId: 'elementId',\n          enabled: false,\n          reveal: () => {},\n          toggle: () => {},\n          setColor: () => {},\n          highlight: () => {},\n          hideHighlight: () => {},\n        },\n        {\n          id: 2,\n          color: 'blue',\n          name: 'span',\n          domClasses: ['class1', 'class2'],\n          enabled: false,\n          reveal: () => {},\n          toggle: () => {},\n          setColor: () => {},\n          highlight: () => {},\n          hideHighlight: () => {},\n        },\n        {\n          id: 3,\n          color: 'green',\n          name: 'div',\n          enabled: false,\n          reveal: () => {},\n          toggle: () => {},\n          setColor: () => {},\n          highlight: () => {},\n          hideHighlight: () => {},\n        },\n      ],\n      settings: [],\n    };\n\n    assertShadowRoot(component.shadowRoot);\n\n    assert.strictEqual(queryLabels(component, '[data-element]').length, 3);\n  });\n\n  it('send an event when an element overlay is toggled', async () => {\n    const component = new ElementsComponents.LayoutPane.LayoutPane();\n    renderElementIntoDOM(component);\n\n    let called = 0;\n    component.data = {\n      gridElements: [\n        {\n          id: 1,\n          color: 'red',\n          name: 'div',\n          enabled: false,\n          reveal: () => {},\n          toggle: value => {\n            called++;\n            assert.strictEqual(value, true);\n          },\n          setColor: () => {},\n          highlight: () => {},\n          hideHighlight: () => {},\n        },\n      ],\n      settings: [],\n    };\n\n    assertShadowRoot(component.shadowRoot);\n\n    const input = component.shadowRoot.querySelector('[data-input]');\n    assertElement(input, HTMLInputElement);\n    input.click();\n    assert.strictEqual(called, 1);\n  });\n\n  it('send an event when an element’s Show element button is pressed', async () => {\n    const component = new ElementsComponents.LayoutPane.LayoutPane();\n    let called = 0;\n    component.data = {\n      gridElements: [\n        {\n          id: 1,\n          color: 'red',\n          name: 'div',\n          enabled: false,\n          reveal: () => {\n            called++;\n          },\n          toggle: () => {},\n          setColor: () => {},\n          highlight: () => {},\n          hideHighlight: () => {},\n        },\n      ],\n      settings: [],\n    };\n    renderElementIntoDOM(component);\n    assertShadowRoot(component.shadowRoot);\n    const button = component.shadowRoot.querySelector('button.show-element');\n    assertElement(button, HTMLButtonElement);\n    button.click();\n    assert.strictEqual(called, 1);\n  });\n\n  it('expands/collapses <details> using ArrowLeft/ArrowRight keys', async () => {\n    const component = new ElementsComponents.LayoutPane.LayoutPane();\n    component.data = {\n      gridElements: [],\n      settings: [],\n    };\n    renderElementIntoDOM(component);\n    assertShadowRoot(component.shadowRoot);\n    const details = component.shadowRoot.querySelector('details');\n    assertElement(details, HTMLDetailsElement);\n    const summary = details.querySelector('summary');\n    assertElement(summary, HTMLElement);\n    assert(details.open, 'The first details were not expanded by default');\n    summary.dispatchEvent(new KeyboardEvent('keydown', {bubbles: true, cancelable: true, key: 'ArrowLeft'}));\n    assert(!details.open, 'The details were not collapsed after sending ArrowLeft');\n    summary.dispatchEvent(new KeyboardEvent('keydown', {bubbles: true, cancelable: true, key: 'ArrowRight'}));\n    assert(details.open, 'The details were not expanded after sending ArrowRight');\n  });\n});\n"]}