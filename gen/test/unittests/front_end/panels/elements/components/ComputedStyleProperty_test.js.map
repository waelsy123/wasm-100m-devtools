{"version":3,"file":"ComputedStyleProperty_test.js","sourceRoot":"","sources":["../../../../../../../../../test/unittests/front_end/panels/elements/components/ComputedStyleProperty_test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,kBAAkB,MAAM,sEAAsE,CAAC;AAC3G,OAAO,EAAC,gBAAgB,EAAE,oBAAoB,EAAC,MAAM,gCAAgC,CAAC;AAEtF,MAAM,EAAC,MAAM,EAAC,GAAG,IAAI,CAAC;AAEtB,MAAM,WAAW,GAAG;IAClB,SAAS,EAAE,KAAK;IAChB,SAAS,EAAE,IAAI;IACf,kBAAkB,EAAE,GAAG,EAAE,GAAE,CAAC;CAC7B,CAAC;AAEF,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;IACrC,EAAE,CAAC,sCAAsC,EAAE,GAAG,EAAE;QAC9C,MAAM,SAAS,GAAG,IAAI,kBAAkB,CAAC,qBAAqB,CAAC,qBAAqB,EAAE,CAAC;QACvF,oBAAoB,CAAC,SAAS,CAAC,CAAC;QAChC,MAAM,IAAI,GAAG;YACX,GAAG,WAAW;YACd,SAAS,EAAE,KAAK;YAChB,SAAS,EAAE,IAAI;SAChB,CAAC;QACF,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC;QAEtB,gBAAgB,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAEvC,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC,CAAC;QACnF,MAAM,CAAC,SAAS,CACZ,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAC5C;YACE,eAAe;YACf,gBAAgB;SACjB,EACD,+DAA+D,CAAC,CAAC;IACvE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qFAAqF,EAAE,GAAG,EAAE;QAC7F,MAAM,SAAS,GAAG,IAAI,kBAAkB,CAAC,qBAAqB,CAAC,qBAAqB,EAAE,CAAC;QACvF,oBAAoB,CAAC,SAAS,CAAC,CAAC;QAChC,IAAI,0BAA0B,GAAG,KAAK,CAAC;QACvC,MAAM,IAAI,GAAG;YACX,GAAG,WAAW;YACd,kBAAkB,EAAE,GAAG,EAAE;gBACvB,0BAA0B,GAAG,IAAI,CAAC;YACpC,CAAC;SACF,CAAC;QACF,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC;QAEtB,gBAAgB,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QACvC,MAAM,IAAI,GAAG,SAAS,CAAC,UAAU,CAAC,aAAa,CAAc,OAAO,CAAC,CAAC;QACtE,IAAI,CAAC,IAAI,EAAE;YACT,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;YACtC,OAAO;SACR;QACD,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,MAAM,CAAC,MAAM,CAAC,0BAA0B,EAAE,6DAA6D,CAAC,CAAC;IAC3G,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as ElementsComponents from '../../../../../../front_end/panels/elements/components/components.js';\nimport {assertShadowRoot, renderElementIntoDOM} from '../../../helpers/DOMHelpers.js';\n\nconst {assert} = chai;\n\nconst initialData = {\n  inherited: false,\n  traceable: true,\n  onNavigateToSource: () => {},\n};\n\ndescribe('ComputedStyleProperty', () => {\n  it('renders inherited property correctly', () => {\n    const component = new ElementsComponents.ComputedStyleProperty.ComputedStyleProperty();\n    renderElementIntoDOM(component);\n    const data = {\n      ...initialData,\n      traceable: false,\n      inherited: true,\n    };\n    component.data = data;\n\n    assertShadowRoot(component.shadowRoot);\n\n    const slots = Array.from(component.shadowRoot.querySelectorAll('.inherited slot'));\n    assert.deepEqual(\n        slots.map(slot => slot.getAttribute('name')),\n        [\n          'property-name',\n          'property-value',\n        ],\n        'should contain name and value slots under .inherited selector');\n  });\n\n  it('renders a clickable goto icon that calls onNavigateToSource when it contains traces', () => {\n    const component = new ElementsComponents.ComputedStyleProperty.ComputedStyleProperty();\n    renderElementIntoDOM(component);\n    let isOnNavigateToSourceCalled = false;\n    const data = {\n      ...initialData,\n      onNavigateToSource: () => {\n        isOnNavigateToSourceCalled = true;\n      },\n    };\n    component.data = data;\n\n    assertShadowRoot(component.shadowRoot);\n    const goto = component.shadowRoot.querySelector<HTMLElement>('.goto');\n    if (!goto) {\n      assert.fail('goto icon should exist');\n      return;\n    }\n    goto.click();\n    assert.isTrue(isOnNavigateToSourceCalled, 'goto icon should be clickable that calls onNavigateToSource');\n  });\n});\n"]}