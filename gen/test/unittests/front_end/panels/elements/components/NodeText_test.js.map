{"version":3,"file":"NodeText_test.js","sourceRoot":"","sources":["../../../../../../../../../test/unittests/front_end/panels/elements/components/NodeText_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as ElementsComponents from '../../../../../../front_end/panels/elements/components/components.js';\nimport {assertElement, assertShadowRoot, renderElementIntoDOM} from '../../../helpers/DOMHelpers.js';\n\nimport {assertNodeTextContent} from './ElementsComponentsHelper.js';\n\nconst {assert} = chai;\n\ndescribe('NodeText', async () => {\n  it('renders element with a title', async () => {\n    const component = new ElementsComponents.NodeText.NodeText();\n    renderElementIntoDOM(component);\n    component.data = {\n      nodeTitle: 'test',\n    };\n    assertNodeTextContent(component, 'test');\n  });\n\n  it('renders element with a title and id', async () => {\n    const component = new ElementsComponents.NodeText.NodeText();\n    renderElementIntoDOM(component);\n    component.data = {\n      nodeTitle: 'test',\n      nodeId: 'id',\n    };\n    assertNodeTextContent(component, 'test#id');\n  });\n\n  it('renders element with a title, id and classes', async () => {\n    const component = new ElementsComponents.NodeText.NodeText();\n    renderElementIntoDOM(component);\n    component.data = {\n      nodeTitle: 'test',\n      nodeId: 'id',\n      nodeClasses: ['class1', 'class2'],\n    };\n    assertNodeTextContent(component, 'test#id.class1.class2');\n  });\n\n  it('renders element with a title, id and empty classes', async () => {\n    const component = new ElementsComponents.NodeText.NodeText();\n    renderElementIntoDOM(component);\n    component.data = {\n      nodeTitle: 'test',\n      nodeId: 'id',\n      nodeClasses: [],\n    };\n    assertNodeTextContent(component, 'test#id');\n  });\n\n  it('applies the multiple descriptors class when a node has both an ID and some classes', () => {\n    const component = new ElementsComponents.NodeText.NodeText();\n    renderElementIntoDOM(component);\n    component.data = {\n      nodeTitle: 'test',\n      nodeId: 'id',\n      nodeClasses: ['foo'],\n    };\n    assertShadowRoot(component.shadowRoot);\n    const idLabel = component.shadowRoot.querySelector('.node-label-id');\n    const classLabel = component.shadowRoot.querySelector('.node-label-class');\n    assertElement(idLabel, HTMLSpanElement);\n    assertElement(classLabel, HTMLSpanElement);\n    assert.isTrue(idLabel.classList.contains('node-multiple-descriptors'));\n    assert.isTrue(classLabel.classList.contains('node-multiple-descriptors'));\n  });\n\n  it('does not apply the multiple descriptors class when the node has only an ID', () => {\n    const component = new ElementsComponents.NodeText.NodeText();\n    renderElementIntoDOM(component);\n    component.data = {\n      nodeTitle: 'test',\n      nodeId: 'id',\n      nodeClasses: [],\n    };\n    assertShadowRoot(component.shadowRoot);\n    const idLabel = component.shadowRoot.querySelector('.node-label-id');\n    assertElement(idLabel, HTMLSpanElement);\n    assert.isFalse(idLabel.classList.contains('node-multiple-descriptors'));\n  });\n});\n"]}