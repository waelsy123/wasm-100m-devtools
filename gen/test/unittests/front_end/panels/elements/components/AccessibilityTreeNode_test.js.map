{"version":3,"file":"AccessibilityTreeNode_test.js","sourceRoot":"","sources":["../../../../../../../../../test/unittests/front_end/panels/elements/components/AccessibilityTreeNode_test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,kBAAkB,MAAM,sEAAsE,CAAC;AAC3G,OAAO,KAAK,WAAW,MAAM,oFAAoF,CAAC;AAClH,OAAO,EAAC,gBAAgB,EAAE,oBAAoB,EAAC,MAAM,gCAAgC,CAAC;AACtF,OAAO,EAAC,kBAAkB,EAAC,MAAM,wCAAwC,CAAC;AAE1E,MAAM,WAAW,GAAG,WAAW,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC;AAE/E,kBAAkB,CAAC,uBAAuB,EAAE,GAAG,EAAE;IAC/C,EAAE,CAAC,qDAAqD,EAAE,KAAK,IAAI,EAAE;QACnE,MAAM,SAAS,GAAG,IAAI,kBAAkB,CAAC,qBAAqB,CAAC,qBAAqB,EAAE,CAAC;QACvF,oBAAoB,CAAC,SAAS,CAAC,CAAC;QAEhC,SAAS,CAAC,IAAI,GAAG;YACf,IAAI,EAAE,UAAU;YAChB,IAAI,EAAE,UAAU;YAChB,OAAO,EAAE,KAAK;YACd,UAAU,EAAE,EAAE;SACf,CAAC;QAEF,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;QACzB,gBAAgB,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAEvC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,UAAU,CAAC,WAAW,EAAE,wBAAwB,CAAC,CAAC;IACjF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;QAClD,MAAM,SAAS,GAAG,IAAI,kBAAkB,CAAC,qBAAqB,CAAC,qBAAqB,EAAE,CAAC;QACvF,oBAAoB,CAAC,SAAS,CAAC,CAAC;QAEhC,SAAS,CAAC,IAAI,GAAG;YACf,IAAI,EAAE,UAAU;YAChB,IAAI,EAAE,UAAU;YAChB,OAAO,EAAE,IAAI;YACb,UAAU,EAAE,EAAE;SACf,CAAC;QACF,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;QAEzB,gBAAgB,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAEvC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,UAAU,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as ElementsComponents from '../../../../../../front_end/panels/elements/components/components.js';\nimport * as Coordinator from '../../../../../../front_end/ui/components/render_coordinator/render_coordinator.js';\nimport {assertShadowRoot, renderElementIntoDOM} from '../../../helpers/DOMHelpers.js';\nimport {describeWithLocale} from '../../../helpers/EnvironmentHelpers.js';\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\ndescribeWithLocale('AccessibilityTreeNode', () => {\n  it('renders role and name correctly for unignored nodes', async () => {\n    const component = new ElementsComponents.AccessibilityTreeNode.AccessibilityTreeNode();\n    renderElementIntoDOM(component);\n\n    component.data = {\n      name: 'NodeName',\n      role: 'NodeRole',\n      ignored: false,\n      properties: [],\n    };\n\n    await coordinator.done();\n    assertShadowRoot(component.shadowRoot);\n\n    assert.strictEqual(component.shadowRoot.textContent, 'NodeRole\\xa0\"NodeName\"');\n  });\n\n  it('renders ignored nodes as \"ignored\"', async () => {\n    const component = new ElementsComponents.AccessibilityTreeNode.AccessibilityTreeNode();\n    renderElementIntoDOM(component);\n\n    component.data = {\n      name: 'NodeName',\n      role: 'NodeRole',\n      ignored: true,\n      properties: [],\n    };\n    await coordinator.done();\n\n    assertShadowRoot(component.shadowRoot);\n\n    assert.strictEqual(component.shadowRoot.textContent, 'Ignored');\n  });\n});\n"]}