{"version":3,"file":"ElementsPanel_test.js","sourceRoot":"","sources":["../../../../../../../../test/unittests/front_end/panels/elements/ElementsPanel_test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,KAAK,IAAI,MAAM,4CAA4C,CAAC;AACnE,OAAO,EAAC,0BAA0B,EAAC,MAAM,iCAAiC,CAAC;AAC3E,OAAO,EAAC,wBAAwB,EAAC,MAAM,oDAAoD,CAAC;AAC5F,OAAO,EAAC,sBAAsB,EAAC,MAAM,qCAAqC,CAAC;AAE3E,MAAM,EAAC,MAAM,EAAC,GAAG,IAAI,CAAC;AAEtB,0BAA0B,CAAC,eAAe,EAAE,GAAG,EAAE;IAC/C,IAAI,QAA+B,CAAC;IACpC,MAAM,CAAC,KAAK,IAAI,EAAE;QAChB,QAAQ,GAAG,MAAM,MAAM,CAAC,sDAAsD,CAAC,CAAC;IAClF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gEAAgE,EAAE,GAAG,EAAE;QACxE,8FAA8F;QAC9F,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;QAC9D,wBAAwB,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;QAChD,MAAM,UAAU,GAAG,KAAK,CAAC,eAAe,CAAC,UAAU,EAAE,CAAC;QAEtD,UAAU,CAAC,SAAS,2BAAkD,CAAC;QACvE,MAAM,CAAC,MAAM,CACT,sBAAsB,CAClB,IAAI,CAAC,wBAAwB,CAAC,mBAAmB,CAAC,gBAAgB,EAClE,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAC/C,+CAA+C,CAAC,CAAC;QACrD,MAAM,CAAC,OAAO,CACV,sBAAsB,CAClB,IAAI,CAAC,wBAAwB,CAAC,mBAAmB,CAAC,gBAAgB,EAClE,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAC7C,iDAAiD,CAAC,CAAC;QAEvD,UAAU,CAAC,SAAS,uBAAgD,CAAC;QACrE,MAAM,CAAC,MAAM,CACT,sBAAsB,CAClB,IAAI,CAAC,wBAAwB,CAAC,mBAAmB,CAAC,gBAAgB,EAClE,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAC7C,6CAA6C,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as ElementsModule from '../../../../../front_end/panels/elements/elements.js';\nimport * as Host from '../../../../../front_end/core/host/host.js';\nimport {describeWithRealConnection} from '../../helpers/RealConnection.js';\nimport {assertNotNullOrUndefined} from '../../../../../front_end/core/platform/platform.js';\nimport {recordedMetricsContain} from '../../helpers/UserMetricsHelpers.js';\n\nconst {assert} = chai;\n\ndescribeWithRealConnection('ElementsPanel', () => {\n  let Elements: typeof ElementsModule;\n  before(async () => {\n    Elements = await import('../../../../../front_end/panels/elements/elements.js');\n  });\n\n  it('records metrics when the styles and computed tabs are selected', () => {\n    // We need to use the global instance, as some auxiliary code always uses the global instance.\n    const panel = Elements.ElementsPanel.ElementsPanel.instance();\n    assertNotNullOrUndefined(panel.sidebarPaneView);\n    const tabbedPane = panel.sidebarPaneView.tabbedPane();\n\n    tabbedPane.selectTab(Elements.ElementsPanel.SidebarPaneTabId.Computed);\n    assert.isTrue(\n        recordedMetricsContain(\n            Host.InspectorFrontendHostAPI.EnumeratedHistogram.SidebarPaneShown,\n            Host.UserMetrics.SidebarPaneCodes.Computed),\n        'Expected \"Computed\" tab to show up in metrics');\n    assert.isFalse(\n        recordedMetricsContain(\n            Host.InspectorFrontendHostAPI.EnumeratedHistogram.SidebarPaneShown,\n            Host.UserMetrics.SidebarPaneCodes.Styles),\n        'Expected \"Styles\" tab to not show up in metrics');\n\n    tabbedPane.selectTab(Elements.ElementsPanel.SidebarPaneTabId.Styles);\n    assert.isTrue(\n        recordedMetricsContain(\n            Host.InspectorFrontendHostAPI.EnumeratedHistogram.SidebarPaneShown,\n            Host.UserMetrics.SidebarPaneCodes.Styles),\n        'Expected \"Styles\" tab to show up in metrics');\n  });\n});\n"]}