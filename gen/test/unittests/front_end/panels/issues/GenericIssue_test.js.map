{"version":3,"file":"GenericIssue_test.js","sourceRoot":"","sources":["../../../../../../../../test/unittests/front_end/panels/issues/GenericIssue_test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,MAAM,EAAC,MAAM,EAAC,GAAG,IAAI,CAAC;AAEtB,OAAO,KAAK,aAAa,MAAM,kEAAkE,CAAC;AAElG,OAAO,EAAC,eAAe,EAAC,MAAM,gDAAgD,CAAC;AAE/E,OAAO,EAAC,kBAAkB,EAAC,MAAM,qCAAqC,CAAC;AAEvE,kBAAkB,CAAC,cAAc,EAAE,KAAK,IAAI,EAAE;IAC5C,MAAM,SAAS,GAAG,IAAI,eAAe,CAAC,EAAE,CAA2C,CAAC;IAEpF,SAAS,iCAAiC;QACxC,OAAO;YACL,IAAI,mCAAiD;YACrD,OAAO,EAAE,EAAE;SACZ,CAAC;IACJ,CAAC;IAED,SAAS,8BAA8B,CAAC,mBAAwD;QAE9F,OAAO;YACL,IAAI,mCAAiD;YACrD,OAAO,EAAE,EAAC,mBAAmB,EAAC;SAC/B,CAAC;IACJ,CAAC;IAED,EAAE,CAAC,kEAAkE,EAAE,GAAG,EAAE;QAC1E,MAAM,YAAY,GAAG;YACnB,SAAS,6EAAyE;YAClF,OAAO,EAAE,MAA+B;SACzC,CAAC;QACF,MAAM,KAAK,GAAG,8BAA8B,CAAC,YAAY,CAAC,CAAC;QAE3D,MAAM,aAAa,GAAG,aAAa,CAAC,YAAY,CAAC,YAAY,CAAC,kBAAkB,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QACnG,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QAC5C,MAAM,YAAY,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;QAEtC,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,WAAW,EAAE,EAAE,aAAa,CAAC,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAC1F,MAAM,CAAC,WAAW,CACd,YAAY,CAAC,UAAU,EAAE,EACzB,oDAAoD,MAA+B,GAAG,CAAC,CAAC;QAC5F,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,OAAO,EAAE,EAAE,aAAa,CAAC,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QACtF,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+DAA+D,EAAE,GAAG,EAAE;QACvE,MAAM,mCAAmC,GAAG,iCAAiC,EAAE,CAAC;QAChF,MAAM,aAAa,GACf,aAAa,CAAC,YAAY,CAAC,YAAY,CAAC,kBAAkB,CAAC,SAAS,EAAE,mCAAmC,CAAC,CAAC;QAE/G,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nconst {assert} = chai;\n\nimport * as IssuesManager from '../../../../../front_end/models/issues_manager/issues_manager.js';\nimport type * as SDK from '../../../../../front_end/core/sdk/sdk.js';\nimport {MockIssuesModel} from '../../models/issues_manager/MockIssuesModel.js';\nimport * as Protocol from '../../../../../front_end/generated/protocol.js';\nimport {describeWithLocale} from '../../helpers/EnvironmentHelpers.js';\n\ndescribeWithLocale('GenericIssue', async () => {\n  const mockModel = new MockIssuesModel([]) as unknown as SDK.IssuesModel.IssuesModel;\n\n  function createProtocolIssueWithoutDetails(): Protocol.Audits.InspectorIssue {\n    return {\n      code: Protocol.Audits.InspectorIssueCode.GenericIssue,\n      details: {},\n    };\n  }\n\n  function createProtocolIssueWithDetails(genericIssueDetails: Protocol.Audits.GenericIssueDetails):\n      Protocol.Audits.InspectorIssue {\n    return {\n      code: Protocol.Audits.InspectorIssueCode.GenericIssue,\n      details: {genericIssueDetails},\n    };\n  }\n\n  it('adds a cross origin portal post message issue with valid details', () => {\n    const issueDetails = {\n      errorType: Protocol.Audits.GenericIssueErrorType.CrossOriginPortalPostMessageError,\n      frameId: 'main' as Protocol.Page.FrameId,\n    };\n    const issue = createProtocolIssueWithDetails(issueDetails);\n\n    const genericIssues = IssuesManager.GenericIssue.GenericIssue.fromInspectorIssue(mockModel, issue);\n    assert.strictEqual(genericIssues.length, 1);\n    const genericIssue = genericIssues[0];\n\n    assert.strictEqual(genericIssue.getCategory(), IssuesManager.Issue.IssueCategory.Generic);\n    assert.strictEqual(\n        genericIssue.primaryKey(),\n        `GenericIssue::CrossOriginPortalPostMessageError-(${'main' as Protocol.Page.FrameId})`);\n    assert.strictEqual(genericIssue.getKind(), IssuesManager.Issue.IssueKind.Improvement);\n    assert.isNotNull(genericIssue.getDescription());\n  });\n\n  it('adds a cross origin portal post message issue without details', () => {\n    const inspectorIssueWithoutGenericDetails = createProtocolIssueWithoutDetails();\n    const genericIssues =\n        IssuesManager.GenericIssue.GenericIssue.fromInspectorIssue(mockModel, inspectorIssueWithoutGenericDetails);\n\n    assert.isEmpty(genericIssues);\n  });\n});\n"]}