{"version":3,"file":"ErrorStackParser_test.js","sourceRoot":"","sources":["../../../../../../../../test/unittests/front_end/panels/console/ErrorStackParser_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assertNotNullOrUndefined} from '../../../../../front_end/core/platform/platform.js';\nimport * as SDK from '../../../../../front_end/core/sdk/sdk.js';\nimport * as Console from '../../../../../front_end/panels/console/console.js';\nimport type * as Platform from '../../../../../front_end/core/platform/platform.js';\nimport type * as Protocol from '../../../../../front_end/generated/protocol.js';\n\nconst {assert} = chai;\nconst {parseSourcePositionsFromErrorStack} = Console.ErrorStackParser;\n\ndescribe('ErrorStackParser', () => {\n  let runtimeModel;\n  let parseErrorStack: (stack: string) => Console.ErrorStackParser.ParsedErrorFrame[] | null;\n  const fileTestingUrl = 'file:///testing.js' as Platform.DevToolsPath.UrlString;\n\n  beforeEach(() => {\n    // TODO(crbug/1280141): Remove complicated stubbing code once `parseSourcePositionsFromErrorStack`\n    //                      no longer needs a RuntimeModel.\n    runtimeModel = sinon.createStubInstance(SDK.RuntimeModel.RuntimeModel, {\n      target: sinon.createStubInstance(SDK.Target.Target, {\n        inspectedURL: 'http://www.example.org' as Platform.DevToolsPath.UrlString,\n      }),\n      debuggerModel: sinon.createStubInstance(SDK.DebuggerModel.DebuggerModel, {\n        scriptsForSourceURL: [],\n      }),\n    });\n    parseErrorStack = parseSourcePositionsFromErrorStack.bind(null, runtimeModel);\n  });\n\n  it('returns null for invalid strings', () => {\n    assert.isNull(parseErrorStack(''));\n    assert.isNull(parseErrorStack('foobar'));\n  });\n\n  it('returns null if the first word does not end in \"Error\"', () => {\n    assert.isNull(parseErrorStack('CustomFoo: bar'));\n  });\n\n  it('accepts stacks with any \"*Error\" as its first word', () => {\n    assert.isNotNull(parseErrorStack('Error: standard error'));\n    assert.isNotNull(parseErrorStack('ReferenceError: unknown variable'));\n    assert.isNotNull(parseErrorStack('CustomError: foobar'));\n  });\n\n  it('omits position information for frames it cannot parse', () => {\n    const frames = parseErrorStack(`Error: standard error\n        not a valid line\n        at file:///testing.js:42:5`);\n\n    assertNotNullOrUndefined(frames);\n    assert.strictEqual(frames[1].line, '        not a valid line');\n    assert.isUndefined(frames[1].link);\n  });\n\n  it('returns null when encountering an invalid frame after a valid one', () => {\n    const frames = parseErrorStack(`Error: standard error\n        at foo (file:///testing.js:20:3)\n        not a valid line\n        at file:///testing.js:42:5`);\n\n    assert.isNull(frames);\n  });\n\n  it('returns null for invalid frame URLs', () => {\n    const frames = parseErrorStack(`Error: standard error\n        at foo (schemeWithColon::20:3)`);\n\n    assert.isNull(frames);\n  });\n\n  it('omits position information for anonymous scripts', () => {\n    const frames = parseErrorStack(`Error: standard error\n        at foo (<anonymous>:10:3)`);\n\n    assertNotNullOrUndefined(frames);\n    assert.strictEqual(frames[1].line, '        at foo (<anonymous>:10:3)');\n    assert.isUndefined(frames[1].link);\n  });\n\n  it('detects URLs with line and column information in braces', () => {\n    const frames = parseErrorStack(`Error: standard error\n        at foo (file:///testing.js:10:3)`);\n\n    assertNotNullOrUndefined(frames);\n    assert.deepStrictEqual(frames[1].link, {\n      url: fileTestingUrl,\n      prefix: '        at foo (',\n      suffix: ')',\n      lineNumber: 9,    // 0-based.\n      columnNumber: 2,  // 0-based.\n      enclosedInBraces: true,\n    });\n  });\n\n  it('detects URLs without line or column information in braces', () => {\n    const frames = parseErrorStack(`Error: standard error\n        at foo (file:///testing.js)`);\n\n    assertNotNullOrUndefined(frames);\n    assert.deepStrictEqual(frames[1].link, {\n      url: fileTestingUrl,\n      prefix: '        at foo (',\n      suffix: ')',\n      lineNumber: undefined,\n      columnNumber: undefined,\n      enclosedInBraces: true,\n    });\n  });\n\n  it('detects URLs with line and column information without braces', () => {\n    const frames = parseErrorStack(`Error: standard error\n        at file:///testing.js:42:3`);\n\n    assertNotNullOrUndefined(frames);\n    assert.deepStrictEqual(frames[1].link, {\n      url: fileTestingUrl,\n      prefix: '        at ',\n      suffix: '',\n      lineNumber: 41,   // 0-based.\n      columnNumber: 2,  // 0-based.\n      enclosedInBraces: false,\n    });\n  });\n\n  it('detects URLs without braces with the \"async\" keyword present', () => {\n    const frames = parseErrorStack(`Error: standard error\n        at async file:///testing.js:42:3`);\n\n    assertNotNullOrUndefined(frames);\n    assert.deepStrictEqual(frames[1].link, {\n      url: fileTestingUrl,\n      prefix: '        at async ',\n      suffix: '',\n      lineNumber: 41,   // 0-based.\n      columnNumber: 2,  // 0-based.\n      enclosedInBraces: false,\n    });\n  });\n\n  it('uses the inspected target URL to complete relative URLs', () => {\n    const frames = parseErrorStack(`Error: standard error\n        at foo (testing.js:10:3)`);\n\n    assertNotNullOrUndefined(frames);\n    assert.strictEqual(frames[1].link?.url, 'http://www.example.org/testing.js' as Platform.DevToolsPath.UrlString);\n  });\n\n  describe('augmentErrorStackWithScriptIds', () => {\n    const sid = (id: string) => id as Protocol.Runtime.ScriptId;\n\n    it('sets the scriptId for matching frames', () => {\n      const parsedFrames = parseErrorStack(`Error: some error\n          at foo (http://example.com/a.js:6:3)\n          at bar (http://example.com/b.js:43:14)`);\n      assertNotNullOrUndefined(parsedFrames);\n      const protocolFrames: Protocol.Runtime.CallFrame[] = [\n        {\n          url: 'http://example.com/a.js',\n          scriptId: sid('25'),\n          lineNumber: 5,\n          columnNumber: 2,\n          functionName: 'foo',\n        },\n        {\n          url: 'http://example.com/b.js',\n          scriptId: sid('30'),\n          lineNumber: 42,\n          columnNumber: 13,\n          functionName: 'bar',\n        },\n      ];\n\n      Console.ErrorStackParser.augmentErrorStackWithScriptIds(parsedFrames, {callFrames: protocolFrames});\n\n      assert.strictEqual(parsedFrames[1].link?.scriptId, sid('25'));\n      assert.strictEqual(parsedFrames[2].link?.scriptId, sid('30'));\n    });\n\n    it('omits the scriptId for non-matching frames', () => {\n      const parsedFrames = parseErrorStack(`Error: some error\n        at http://example.com/a.js:6:3`);\n      assertNotNullOrUndefined(parsedFrames);\n      const protocolFrames: Protocol.Runtime.CallFrame[] = [{\n        url: 'http://example.com/a.js',\n        scriptId: sid('25'),\n        lineNumber: 10,\n        columnNumber: 4,\n        functionName: 'foo',\n      }];\n\n      Console.ErrorStackParser.augmentErrorStackWithScriptIds(parsedFrames, {callFrames: protocolFrames});\n\n      assertNotNullOrUndefined(parsedFrames[1].link);\n      assert.isUndefined(parsedFrames[1].link.scriptId);\n    });\n\n    it('handles different number or frames', () => {\n      const parsedFrames = parseErrorStack(`Error: some error\n        at foo (http://example.com/a.js:6:3)\n        at Array.forEach (<anonymous>)\n        at bar (http://example.com/b.js:43:14)`);\n      assertNotNullOrUndefined(parsedFrames);\n      const protocolFrames: Protocol.Runtime.CallFrame[] = [\n        {\n          url: 'http://example.com/a.js',\n          scriptId: sid('25'),\n          lineNumber: 5,\n          columnNumber: 2,\n          functionName: 'foo',\n        },\n        {\n          url: 'http://example.com/b.js',\n          scriptId: sid('30'),\n          lineNumber: 42,\n          columnNumber: 13,\n          functionName: 'bar',\n        },\n      ];\n\n      Console.ErrorStackParser.augmentErrorStackWithScriptIds(parsedFrames, {callFrames: protocolFrames});\n\n      assert.strictEqual(parsedFrames[1].link?.scriptId, sid('25'));\n      assert.isUndefined(parsedFrames[2].link);\n      assert.strictEqual(parsedFrames[3].link?.scriptId, sid('30'));\n    });\n  });\n});\n"]}