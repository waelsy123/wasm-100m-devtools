{"version":3,"file":"ConsoleView_test.js","sourceRoot":"","sources":["../../../../../../../../test/unittests/front_end/panels/console/ConsoleView_test.ts"],"names":[],"mappings":"AAAA,gEAAgE;AAChE,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,OAAO,MAAM,oDAAoD,CAAC;AAC9E,OAAO,KAAK,EAAE,MAAM,8CAA8C,CAAC;AACnE,OAAO,EAAC,uBAAuB,EAAC,MAAM,qCAAqC,CAAC;AAG5E,MAAM,EAAC,MAAM,EAAC,GAAG,IAAI,CAAC;AAEtB,uBAAuB,CAAC,aAAa,EAAE,GAAG,EAAE;IAC1C,MAAM,CAAC,GAAG,EAAE;QACV,EAAE,CAAC,kBAAkB,CAAC,0BAA0B,CAAC,eAAe,CAAC,CAAC;QAClE,EAAE,CAAC,kBAAkB,CAAC,0BAA0B,CAAC,oBAAoB,CAAC,CAAC;QACvE,EAAE,CAAC,kBAAkB,CAAC,uBAAuB,CAAC;YAC5C,QAAQ,EAAE,eAAe;YACzB,QAAQ,EAAE,EAAE,CAAC,kBAAkB,CAAC,cAAc,CAAC,OAAO;YACtD,KAAK,EAAE,GAAsC,EAAE,CAAC,MAA2C;SAC5F,CAAC,CAAC;QACH,EAAE,CAAC,kBAAkB,CAAC,uBAAuB,CAAC;YAC5C,QAAQ,EAAE,oBAAoB;YAC9B,QAAQ,EAAE,EAAE,CAAC,kBAAkB,CAAC,cAAc,CAAC,OAAO;YACtD,KAAK,EAAE,GAAsC,EAAE,CAAC,MAA2C;SAC5F,CAAC,CAAC;QACH,MAAM,sBAAsB,GAAG,EAAE,CAAC,cAAc,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QAC3F,EAAE,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAE,cAAc,EAAE,sBAAsB,EAAC,CAAC,CAAC;IAC1G,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,GAAG,EAAE;QACT,EAAE,CAAC,kBAAkB,CAAC,0BAA0B,CAAC,eAAe,CAAC,CAAC;QAClE,EAAE,CAAC,kBAAkB,CAAC,0BAA0B,CAAC,oBAAoB,CAAC,CAAC;IACzE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2DAA2D,EAAE,KAAK,IAAI,EAAE;QACzE,MAAM,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;QAC/D,MAAM,yBAAyB,GAC3B,WAAW,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,UAAU,EAAE,gBAAgB,CAAC,wBAAwB,CAAC,CAAC;QAC1G,IAAI,CAAC,yBAAyB,EAAE;YAC9B,MAAM,CAAC,IAAI,CAAC,uCAAuC,CAAC,CAAC;YACrD,OAAO;SACR;QACD,KAAK,MAAM,QAAQ,IAAI,yBAAyB,EAAE;YAChD,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,EAAE,aAAa,CAAC,mBAAmB,CAAC,EAAE,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;SAC/F;QACD,6EAA6E;QAC7E,iFAAiF;QACjF,qCAAqC;QACrC,MAAM,WAAW,CAAC,iCAAiC,EAAE,CAAC;IACxD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright (c) 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Console from '../../../../../front_end/panels/console/console.js';\nimport * as UI from '../../../../../front_end/ui/legacy/legacy.js';\nimport {describeWithEnvironment} from '../../helpers/EnvironmentHelpers.js';\nimport type * as Platform from '../../../../../front_end/core/platform/platform.js';\n\nconst {assert} = chai;\n\ndescribeWithEnvironment('ConsoleView', () => {\n  before(() => {\n    UI.ActionRegistration.maybeRemoveActionExtension('console.clear');\n    UI.ActionRegistration.maybeRemoveActionExtension('console.create-pin');\n    UI.ActionRegistration.registerActionExtension({\n      actionId: 'console.clear',\n      category: UI.ActionRegistration.ActionCategory.CONSOLE,\n      title: (): Platform.UIString.LocalizedString => 'mock' as Platform.UIString.LocalizedString,\n    });\n    UI.ActionRegistration.registerActionExtension({\n      actionId: 'console.create-pin',\n      category: UI.ActionRegistration.ActionCategory.CONSOLE,\n      title: (): Platform.UIString.LocalizedString => 'mock' as Platform.UIString.LocalizedString,\n    });\n    const actionRegistryInstance = UI.ActionRegistry.ActionRegistry.instance({forceNew: true});\n    UI.ShortcutRegistry.ShortcutRegistry.instance({forceNew: true, actionRegistry: actionRegistryInstance});\n  });\n\n  after(() => {\n    UI.ActionRegistration.maybeRemoveActionExtension('console.clear');\n    UI.ActionRegistration.maybeRemoveActionExtension('console.create-pin');\n  });\n\n  it('adds a title to every checkbox label in the settings view', async () => {\n    const consoleView = Console.ConsoleView.ConsoleView.instance();\n    const consoleSettingsCheckboxes =\n        consoleView.element.querySelector('.toolbar')?.shadowRoot?.querySelectorAll('.toolbar-item.checkbox');\n    if (!consoleSettingsCheckboxes) {\n      assert.fail('No checkbox found in console settings');\n      return;\n    }\n    for (const checkbox of consoleSettingsCheckboxes) {\n      assert.isTrue(checkbox.shadowRoot?.querySelector('.dt-checkbox-text')?.hasAttribute('title'));\n    }\n    // This test transitively schedules a task which may cause errors if the task\n    // is run without the environments set in this test. Thus wait for its completion\n    // before proceding to the next test.\n    await consoleView.getScheduledRefreshPromiseForTest();\n  });\n});\n"]}