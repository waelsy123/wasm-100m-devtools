{"version":3,"file":"RequestHeadersView_test.js","sourceRoot":"","sources":["../../../../../../../../test/unittests/front_end/panels/network/RequestHeadersView_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Protocol from '../../../../../front_end/generated/protocol.js';\nimport * as Network from '../../../../../front_end/panels/network/network.js';\nimport * as SDK from '../../../../../front_end/core/sdk/sdk.js';\nimport {createTarget, deinitializeGlobalVars} from '../../helpers/EnvironmentHelpers.js';\nimport type * as Platform from '../../../../../front_end/core/platform/platform.js';\nimport * as Root from '../../../../../front_end/core/root/root.js';\nimport * as Workspace from '../../../../../front_end/models/workspace/workspace.js';\nimport * as Persistence from '../../../../../front_end/models/persistence/persistence.js';\nimport * as Bindings from '../../../../../front_end/models/bindings/bindings.js';\nimport {assertElement, renderElementIntoDOM} from '../../helpers/DOMHelpers.js';\nimport {describeWithMockConnection} from '../../helpers/MockConnection.js';\nimport {createUISourceCode} from '../../helpers/UISourceCodeHelpers.js';\n\nconst {assert} = chai;\n\nfunction setUpEnvironment() {\n  createTarget();\n  const workspace = Workspace.Workspace.WorkspaceImpl.instance();\n  const targetManager = SDK.TargetManager.TargetManager.instance();\n  const debuggerWorkspaceBinding =\n      Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance({forceNew: true, targetManager, workspace});\n  const breakpointManager = Bindings.BreakpointManager.BreakpointManager.instance(\n      {forceNew: true, targetManager, workspace, debuggerWorkspaceBinding});\n  Persistence.Persistence.PersistenceImpl.instance({forceNew: true, workspace, breakpointManager});\n  Persistence.NetworkPersistenceManager.NetworkPersistenceManager.instance({forceNew: true, workspace});\n}\n\nfunction renderHeadersView(request: SDK.NetworkRequest.NetworkRequest): Network.RequestHeadersView.RequestHeadersView {\n  const component = new Network.RequestHeadersView.RequestHeadersView(request);\n  const div = document.createElement('div');\n  renderElementIntoDOM(div);\n  component.markAsRoot();\n  component.show(div);\n  return component;\n}\n\ndescribeWithMockConnection('RequestHeadersView', () => {\n  beforeEach(async () => {\n    Root.Runtime.experiments.register(Root.Runtime.ExperimentName.HEADER_OVERRIDES, '');\n    Root.Runtime.experiments.enableForTest(Root.Runtime.ExperimentName.HEADER_OVERRIDES);\n  });\n  afterEach(async () => {\n    await deinitializeGlobalVars();\n  });\n\n  it('does not render a link to \\'.headers\\' if that file does not exist', async () => {\n    setUpEnvironment();\n    const request = SDK.NetworkRequest.NetworkRequest.create(\n        'requestId' as Protocol.Network.RequestId,\n        'https://www.example.com/foo.html' as Platform.DevToolsPath.UrlString, '' as Platform.DevToolsPath.UrlString,\n        null, null, null);\n    request.responseHeaders = [{name: 'server', value: 'DevTools Test Server'}];\n    const component = renderHeadersView(request);\n    const headersTitle =\n        component.responseHeadersCategory.treeOutline?.contentElement.querySelector('.headers-title') || null;\n    assertElement(headersTitle, HTMLElement);\n    const button = headersTitle.querySelector('button.headers-link');\n    assert.isNull(button);\n    component.detach();\n  });\n\n  it('renders a link to \\'.headers\\'', async () => {\n    setUpEnvironment();\n    const {project} = createUISourceCode({\n      url: 'file:///path/to/overrides/www.example.com/.headers' as Platform.DevToolsPath.UrlString,\n      mimeType: 'text/plain',\n    });\n\n    // @ts-ignore\n    project.fileSystemPath = () => 'file:///path/to/overrides';\n    // @ts-ignore\n    project.fileSystemBaseURL = 'file:///path/to/overrides';\n    await Persistence.NetworkPersistenceManager.NetworkPersistenceManager.instance().setProject(project);\n\n    const request = SDK.NetworkRequest.NetworkRequest.create(\n        'requestId' as Protocol.Network.RequestId,\n        'https://www.example.com/foo.html' as Platform.DevToolsPath.UrlString, '' as Platform.DevToolsPath.UrlString,\n        null, null, null);\n    request.responseHeaders = [{name: 'server', value: 'DevTools Test Server'}];\n    const component = renderHeadersView(request);\n    const headersTitle =\n        component.responseHeadersCategory.treeOutline?.contentElement.querySelector('.headers-title') || null;\n    assertElement(headersTitle, HTMLElement);\n    const button = headersTitle.querySelector('button.headers-link');\n    assertElement(button, HTMLButtonElement);\n    assert.strictEqual(button.textContent, 'Header overrides');\n    component.detach();\n  });\n\n  it('renders without error when no overrides folder specified (i.e. there is no project)', async () => {\n    createTarget();\n    const workspace = Workspace.Workspace.WorkspaceImpl.instance();\n    const targetManager = SDK.TargetManager.TargetManager.instance();\n    const debuggerWorkspaceBinding =\n        Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance({forceNew: true, targetManager, workspace});\n    const breakpointManager = Bindings.BreakpointManager.BreakpointManager.instance(\n        {forceNew: true, targetManager, workspace, debuggerWorkspaceBinding});\n    Persistence.Persistence.PersistenceImpl.instance({forceNew: true, workspace, breakpointManager});\n    Persistence.NetworkPersistenceManager.NetworkPersistenceManager.instance({forceNew: true, workspace});\n\n    const request = SDK.NetworkRequest.NetworkRequest.create(\n        'requestId' as Protocol.Network.RequestId,\n        'https://www.example.com/foo.html' as Platform.DevToolsPath.UrlString, '' as Platform.DevToolsPath.UrlString,\n        null, null, null);\n    request.responseHeaders = [{name: 'server', value: 'DevTools Test Server'}];\n    const component = renderHeadersView(request);\n    const headersTitle =\n        component.responseHeadersCategory.treeOutline?.contentElement.querySelector('.headers-title') || null;\n    assertElement(headersTitle, HTMLElement);\n    const button = headersTitle.querySelector('button.headers-link');\n    assert.isNull(button);\n    component.detach();\n  });\n});\n"]}