{"version":3,"file":"RequestPreviewView_test.js","sourceRoot":"","sources":["../../../../../../../../test/unittests/front_end/panels/network/RequestPreviewView_test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,KAAK,GAAG,MAAM,0CAA0C,CAAC;AAEhE,OAAO,KAAK,OAAO,MAAM,oDAAoD,CAAC;AAC9E,OAAO,EAAC,oBAAoB,EAAC,MAAM,6BAA6B,CAAC;AACjE,OAAO,EAAC,kBAAkB,EAAC,MAAM,qCAAqC,CAAC;AAEvE,KAAK,UAAU,WAAW;IACxB,MAAM,OAAO,GAAG,oGAAoG,CAAC;IACrH,OAAO,EAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAC,CAAC;AAChD,CAAC;AAED,SAAS,iBAAiB,CAAC,OAA0C;IACnE,MAAM,SAAS,GAAG,IAAI,OAAO,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;IAC7E,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC1C,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAC1B,SAAS,CAAC,UAAU,EAAE,CAAC;IACvB,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACpB,OAAO,SAAS,CAAC;AACnB,CAAC;AAED,kBAAkB,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAC5C,EAAE,CAAC,wDAAwD,EAAE,KAAK,IAAI,EAAE;QACtE,MAAM,OAAO,GAAG,GAAG,CAAC,cAAc,CAAC,cAAc,CAAC,MAAM,CACpD,WAAyC,EACzC,uCAA0E,EAC1E,EAAqC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAC7D,OAAO,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC;QAC5C,OAAO,CAAC,QAAQ,GAAG,GAAG,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC;QACrD,MAAM,SAAS,GAAG,iBAAiB,CAAC,OAAO,CAAC,CAAC;QAC7C,MAAM,MAAM,GAAG,MAAM,SAAS,CAAC,WAAW,EAAE,CAAC;QAC7C,MAAM,KAAK,GAAG,MAAM,CAAC,cAAc,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC5D,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC;QAC7B,MAAM,CAAC,KAAK,EAAE,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QAClE,SAAS,CAAC,MAAM,EAAE,CAAC;IACrB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../../../../front_end/core/platform/platform.js';\nimport * as SDK from '../../../../../front_end/core/sdk/sdk.js';\nimport type * as Protocol from '../../../../../front_end/generated/protocol.js';\nimport * as Network from '../../../../../front_end/panels/network/network.js';\nimport {renderElementIntoDOM} from '../../helpers/DOMHelpers.js';\nimport {describeWithLocale} from '../../helpers/EnvironmentHelpers.js';\n\nasync function contentData(): Promise<SDK.NetworkRequest.ContentData> {\n  const content = '<style> p { color: red; }</style><link rel=\"stylesheet\" ref=\"http://devtools-frontend.test/style\">';\n  return {error: null, content, encoded: false};\n}\n\nfunction renderPreviewView(request: SDK.NetworkRequest.NetworkRequest): Network.RequestPreviewView.RequestPreviewView {\n  const component = new Network.RequestPreviewView.RequestPreviewView(request);\n  const div = document.createElement('div');\n  renderElementIntoDOM(div);\n  component.markAsRoot();\n  component.show(div);\n  return component;\n}\n\ndescribeWithLocale('RequestPreviewView', () => {\n  it('prevents previewed html from making same-site requests', async () => {\n    const request = SDK.NetworkRequest.NetworkRequest.create(\n        'requestId' as Protocol.Network.RequestId,\n        'http://devtools-frontend.test/content' as Platform.DevToolsPath.UrlString,\n        '' as Platform.DevToolsPath.UrlString, null, null, null);\n    request.setContentDataProvider(contentData);\n    request.mimeType = SDK.NetworkRequest.MIME_TYPE.HTML;\n    const component = renderPreviewView(request);\n    const widget = await component.showPreview();\n    const frame = widget.contentElement.querySelector('iframe');\n    expect(frame).to.be.not.null;\n    expect(frame?.getAttribute('csp')).to.eql('default-src \\'none\\'');\n    component.detach();\n  });\n});\n"]}