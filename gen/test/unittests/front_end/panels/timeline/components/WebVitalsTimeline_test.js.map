{"version":3,"file":"WebVitalsTimeline_test.js","sourceRoot":"","sources":["../../../../../../../../../test/unittests/front_end/panels/timeline/components/WebVitalsTimeline_test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,kBAAkB,MAAM,sEAAsE,CAAC;AAC3G,OAAO,EAAC,kBAAkB,EAAC,MAAM,wCAAwC,CAAC;AAE1E,MAAM,EAAC,MAAM,EAAC,GAAG,IAAI,CAAC;AAEtB,kBAAkB,CAAC,mBAAmB,EAAE,GAAG,EAAE;IAC3C,EAAE,CAAC,qCAAqC,EAAE,GAAG,EAAE;QAC7C,MAAM,IAAI,GAAG,IAAI,kBAAkB,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,CAAC;QAC1E,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,kBAAkB,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;IAClF,CAAC,CAAC,CAAC;IAEH,wBAAwB;IACxB,EAAE,CAAC,IAAI,CAAC,2FAA2F,EAAE,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC;IAC/G,wBAAwB;IACxB,EAAE,CAAC,IAAI,CACH,kIAAkI,EAClI,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC;IACd,wBAAwB;IACxB,EAAE,CAAC,IAAI,CAAC,oFAAoF,EAAE,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC;IACxG,wBAAwB;IACxB,EAAE,CAAC,IAAI,CAAC,+FAA+F,EAAE,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC;IACnH,wBAAwB;IACxB,EAAE,CAAC,IAAI,CAAC,uFAAuF,EAAE,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC;IAC3G,wBAAwB;IACxB,EAAE,CAAC,IAAI,CAAC,gGAAgG,EAAE,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC;IACpH,wBAAwB;IACxB,EAAE,CAAC,IAAI,CACH,wGAAwG,EACxG,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as TimelineComponents from '../../../../../../front_end/panels/timeline/components/components.js';\nimport {describeWithLocale} from '../../../helpers/EnvironmentHelpers.js';\n\nconst {assert} = chai;\n\ndescribeWithLocale('WebVitalsTimeline', () => {\n  it('should instantiate without problems', () => {\n    const node = new TimelineComponents.WebVitalsTimeline.WebVitalsTimeline();\n    assert.instanceOf(node, TimelineComponents.WebVitalsTimeline.WebVitalsTimeline);\n  });\n\n  // Not yet implementable\n  it.skip('[crbug.com/1140910] should calculate the timing of events relative to the last navigation', () => {});\n  // Not yet implementable\n  it.skip(\n      '[crbug.com/1140910] should calculate the timing of events relative to the start of the trace if there is no navigation before it',\n      () => {});\n  // Not yet implementable\n  it.skip('[crbug.com/1140910] should render the marker that is selected on top of the others', () => {});\n  // Not yet implementable\n  it.skip('[crbug.com/1140910] should render the marker that is hovered over on top the the selected one', () => {});\n  // Not yet implementable\n  it.skip('[crbug.com/1140910] should not render the label if two markers are too close together', () => {});\n  // Not yet implementable\n  it.skip('[crbug.com/1140910] should only render the timestamp of a marker when hovered over or selected', () => {});\n  // Not yet implementable\n  it.skip(\n      '[crbug.com/1140910] should render different marker symbols based on the time since the last navigation',\n      () => {});\n});\n"]}