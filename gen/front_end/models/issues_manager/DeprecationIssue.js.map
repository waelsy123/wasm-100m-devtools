{"version":3,"file":"DeprecationIssue.js","sourceRoot":"","sources":["../../../../../../front_end/models/issues_manager/DeprecationIssue.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nimport {Issue, IssueCategory, IssueKind} from './Issue.js';\nimport type {MarkdownIssueDescription} from './MarkdownIssueDescription.js';\nimport {resolveLazyDescription} from './MarkdownIssueDescription.js';\n\nconst UIStrings = {\n  /**\n  *@description Title of issue raised when a deprecated feature is used\n  */\n  title: 'Deprecated Feature Used',\n\n  // Store alphabetized messages per DeprecationIssueType in this block.\n\n  /**\n  *@description This message is shown when the example deprecated feature is used\n  */\n  deprecationExample: 'This is an example of a translated deprecation issue message.',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/issues_manager/DeprecationIssue.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nexport class DeprecationIssue extends Issue {\n  #issueDetails: Protocol.Audits.DeprecationIssueDetails;\n\n  constructor(issueDetails: Protocol.Audits.DeprecationIssueDetails, issuesModel: SDK.IssuesModel.IssuesModel) {\n    let type = issueDetails.type;\n    // TODO(crbug.com/1264960): Remove legacy type when issues are translated.\n    if (issueDetails.deprecationType === Protocol.Audits.DeprecationIssueType.Untranslated) {\n      type = issueDetails.deprecationType;\n    }\n    const issueCode = [\n      Protocol.Audits.InspectorIssueCode.DeprecationIssue,\n      type,\n    ].join('::');\n    super({code: issueCode, umaCode: 'DeprecationIssue'}, issuesModel);\n    this.#issueDetails = issueDetails;\n  }\n\n  getCategory(): IssueCategory {\n    return IssueCategory.Other;\n  }\n\n  details(): Protocol.Audits.DeprecationIssueDetails {\n    return this.#issueDetails;\n  }\n\n  getDescription(): MarkdownIssueDescription {\n    let messageFunction = (): string => '';\n    // Keep case statements alphabetized per DeprecationIssueType.\n    switch (this.#issueDetails.type) {\n      case Protocol.Audits.DeprecationIssueType.DeprecationExample:\n        messageFunction = i18nLazyString(UIStrings.deprecationExample);\n        break;\n      // TODO(crbug.com/1264960): Remove legacy type when issues are translated.\n      case Protocol.Audits.DeprecationIssueType.Untranslated:\n        messageFunction = (): string => this.#issueDetails.message ?? '';\n        break;\n    }\n    return resolveLazyDescription({\n      file: 'deprecation.md',\n      substitutions: new Map([\n        ['PLACEHOLDER_title', i18nLazyString(UIStrings.title)],\n        ['PLACEHOLDER_message', messageFunction],\n      ]),\n      links: [],\n    });\n  }\n\n  sources(): Iterable<Protocol.Audits.SourceCodeLocation> {\n    if (this.#issueDetails.sourceCodeLocation) {\n      return [this.#issueDetails.sourceCodeLocation];\n    }\n    return [];\n  }\n\n  primaryKey(): string {\n    return JSON.stringify(this.#issueDetails);\n  }\n\n  getKind(): IssueKind {\n    return IssueKind.BreakingChange;\n  }\n\n  static fromInspectorIssue(issuesModel: SDK.IssuesModel.IssuesModel, inspectorIssue: Protocol.Audits.InspectorIssue):\n      DeprecationIssue[] {\n    const details = inspectorIssue.details.deprecationIssueDetails;\n    if (!details) {\n      console.warn('Deprecation issue without details received.');\n      return [];\n    }\n    if (details.type !== Protocol.Audits.DeprecationIssueType.Untranslated &&\n        (details.deprecationType || details.message)) {\n      console.warn('Translated deprecation issue with malformed details received.');\n      return [];\n    }\n    if (details.type === Protocol.Audits.DeprecationIssueType.Untranslated &&\n        (!details.deprecationType || !details.message)) {\n      console.warn('Untranslated deprecation issue with malformed details received.');\n      return [];\n    }\n    return [new DeprecationIssue(details, issuesModel)];\n  }\n}\n"]}