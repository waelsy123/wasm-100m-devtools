{"version":3,"file":"CSSProperty.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/CSSProperty.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport type * as Common from '../common/common.js';\nimport * as HostModule from '../host/host.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport type {Edit} from './CSSModel.js';\nimport type {CSSStyleDeclaration} from './CSSStyleDeclaration.js';\n\nexport class CSSProperty {\n  ownerStyle: CSSStyleDeclaration;\n  index: number;\n  name: string;\n  value: string;\n  important: boolean;\n  disabled: boolean;\n  parsedOk: boolean;\n  implicit: boolean;\n  text: string|null|undefined;\n  range: TextUtils.TextRange.TextRange|null;\n  #active: boolean;\n  #nameRangeInternal: TextUtils.TextRange.TextRange|null;\n  #valueRangeInternal: TextUtils.TextRange.TextRange|null;\n  #invalidString?: Common.UIString.LocalizedString;\n\n  constructor(\n      ownerStyle: CSSStyleDeclaration, index: number, name: string, value: string, important: boolean,\n      disabled: boolean, parsedOk: boolean, implicit: boolean, text?: string|null, range?: Protocol.CSS.SourceRange) {\n    this.ownerStyle = ownerStyle;\n    this.index = index;\n    this.name = name;\n    this.value = value;\n    this.important = important;\n    this.disabled = disabled;\n    this.parsedOk = parsedOk;\n    this.implicit = implicit;  // A longhand, implicitly set by missing values of shorthand.\n    this.text = text;\n    this.range = range ? TextUtils.TextRange.TextRange.fromObject(range) : null;\n    this.#active = true;\n    this.#nameRangeInternal = null;\n    this.#valueRangeInternal = null;\n  }\n\n  static parsePayload(ownerStyle: CSSStyleDeclaration, index: number, payload: Protocol.CSS.CSSProperty): CSSProperty {\n    // The following default field values are used in the payload:\n    // important: false\n    // parsedOk: true\n    // implicit: false\n    // disabled: false\n    const result = new CSSProperty(\n        ownerStyle, index, payload.name, payload.value, payload.important || false, payload.disabled || false,\n        ('parsedOk' in payload) ? Boolean(payload.parsedOk) : true, Boolean(payload.implicit), payload.text,\n        payload.range);\n    return result;\n  }\n\n  private ensureRanges(): void {\n    if (this.#nameRangeInternal && this.#valueRangeInternal) {\n      return;\n    }\n    const range = this.range;\n    const text = this.text ? new TextUtils.Text.Text(this.text) : null;\n    if (!range || !text) {\n      return;\n    }\n\n    const nameIndex = text.value().indexOf(this.name);\n    const valueIndex = text.value().lastIndexOf(this.value);\n    if (nameIndex === -1 || valueIndex === -1 || nameIndex > valueIndex) {\n      return;\n    }\n\n    const nameSourceRange = new TextUtils.TextRange.SourceRange(nameIndex, this.name.length);\n    const valueSourceRange = new TextUtils.TextRange.SourceRange(valueIndex, this.value.length);\n\n    this.#nameRangeInternal = rebase(text.toTextRange(nameSourceRange), range.startLine, range.startColumn);\n    this.#valueRangeInternal = rebase(text.toTextRange(valueSourceRange), range.startLine, range.startColumn);\n\n    function rebase(oneLineRange: TextUtils.TextRange.TextRange, lineOffset: number, columnOffset: number):\n        TextUtils.TextRange.TextRange {\n      if (oneLineRange.startLine === 0) {\n        oneLineRange.startColumn += columnOffset;\n        oneLineRange.endColumn += columnOffset;\n      }\n      oneLineRange.startLine += lineOffset;\n      oneLineRange.endLine += lineOffset;\n      return oneLineRange;\n    }\n  }\n\n  nameRange(): TextUtils.TextRange.TextRange|null {\n    this.ensureRanges();\n    return this.#nameRangeInternal;\n  }\n\n  valueRange(): TextUtils.TextRange.TextRange|null {\n    this.ensureRanges();\n    return this.#valueRangeInternal;\n  }\n\n  rebase(edit: Edit): void {\n    if (this.ownerStyle.styleSheetId !== edit.styleSheetId) {\n      return;\n    }\n    if (this.range) {\n      this.range = this.range.rebaseAfterTextEdit(edit.oldRange, edit.newRange);\n    }\n  }\n\n  setActive(active: boolean): void {\n    this.#active = active;\n  }\n\n  get propertyText(): string|null {\n    if (this.text !== undefined) {\n      return this.text;\n    }\n\n    if (this.name === '') {\n      return '';\n    }\n    return this.name + ': ' + this.value + (this.important ? ' !important' : '') + ';';\n  }\n\n  activeInStyle(): boolean {\n    return this.#active;\n  }\n\n  trimmedValueWithoutImportant(): string {\n    const important = '!important';\n    return this.value.endsWith(important) ? this.value.slice(0, -important.length).trim() : this.value.trim();\n  }\n\n  async setText(propertyText: string, majorChange: boolean, overwrite?: boolean): Promise<boolean> {\n    if (!this.ownerStyle) {\n      throw new Error('No ownerStyle for property');\n    }\n\n    if (!this.ownerStyle.styleSheetId) {\n      throw new Error('No owner style id');\n    }\n\n    if (!this.range || !this.ownerStyle.range) {\n      throw new Error('Style not editable');\n    }\n\n    if (majorChange) {\n      HostModule.userMetrics.actionTaken(HostModule.UserMetrics.Action.StyleRuleEdited);\n      if (this.name.startsWith('--')) {\n        HostModule.userMetrics.actionTaken(HostModule.UserMetrics.Action.CustomPropertyEdited);\n      }\n    }\n\n    if (overwrite && propertyText === this.propertyText) {\n      this.ownerStyle.cssModel().domModel().markUndoableState(!majorChange);\n      return true;\n    }\n\n    const range = this.range.relativeTo(this.ownerStyle.range.startLine, this.ownerStyle.range.startColumn);\n    const text = new TextUtils.Text.Text(this.ownerStyle.cssText || '');\n    const textBeforeInsertion =\n        text.extract(new TextUtils.TextRange.TextRange(0, 0, range.startLine, range.startColumn));\n    // If we are appending after the last property and that property doesn't have a semicolon at the end\n    // (which is only legal in the last position), then add the semicolon in front of the new text to avoid\n    // CSS parsing errors. However, we shouldn't prepend semicolons on the first line or after a comment.\n    if (textBeforeInsertion.trim().length && !/[;{\\/]\\s*$/.test(textBeforeInsertion)) {\n      propertyText = ';' + propertyText;\n    }\n    const newStyleText = text.replaceRange(range, propertyText);\n    return this.ownerStyle.setText(newStyleText, majorChange);\n  }\n\n  setValue(newValue: string, majorChange: boolean, overwrite: boolean, userCallback?: ((arg0: boolean) => void)): void {\n    const text = this.name + ': ' + newValue + (this.important ? ' !important' : '') + ';';\n    void this.setText(text, majorChange, overwrite).then(userCallback);\n  }\n\n  async setDisabled(disabled: boolean): Promise<boolean> {\n    if (!this.ownerStyle) {\n      return false;\n    }\n    if (disabled === this.disabled) {\n      return true;\n    }\n    if (!this.text) {\n      return true;\n    }\n    const propertyText = this.text.trim();\n    // Ensure that if we try to enable/disable a property that has no semicolon (which is only legal\n    // in the last position of a css rule), we add it. This ensures that if we then later try\n    // to re-enable/-disable the rule, we end up with legal syntax (if the user adds more properties\n    // after the disabled rule).\n    const appendSemicolonIfMissing = (propertyText: string): string =>\n        propertyText + (propertyText.endsWith(';') ? '' : ';');\n    let text: string;\n    if (disabled) {\n      text = '/* ' + appendSemicolonIfMissing(propertyText) + ' */';\n    } else {\n      text = appendSemicolonIfMissing(this.text.substring(2, propertyText.length - 2).trim());\n    }\n    return this.setText(text, true, true);\n  }\n\n  /**\n   * This stores the warning string when a CSS Property is improperly parsed.\n   */\n  setDisplayedStringForInvalidProperty(invalidString: Common.UIString.LocalizedString): void {\n    this.#invalidString = invalidString;\n  }\n\n  /**\n   * Retrieve the warning string for a screen reader to announce when editing the property.\n   */\n  getInvalidStringForInvalidProperty(): Common.UIString.LocalizedString|undefined {\n    return this.#invalidString;\n  }\n}\n"]}