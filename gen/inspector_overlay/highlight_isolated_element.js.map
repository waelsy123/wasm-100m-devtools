{"version":3,"file":"highlight_isolated_element.js","sourceRoot":"","sources":["../../../../inspector_overlay/highlight_isolated_element.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,EAAC,SAAS,EAAE,WAAW,EAAE,oBAAoB,EAAC,MAAM,uBAAuB,CAAC;AAkBnF,MAAM,UAAU,4BAA4B,CACxC,SAAmC,EAAE,OAAiC,EAAE,WAAmB,EAAE,YAAoB,EACjH,oBAA4B;IAC9B,MAAM,EAAC,QAAQ,EAAE,QAAQ,EAAE,YAAY,EAAE,aAAa,EAAE,cAAc,EAAC,GAAG,SAAS,CAAC;IACpF,iDAAiD;IACjD,OAAO,CAAC,IAAI,EAAE,CAAC;IACf,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC,4BAA4B,CAAC,SAAS,CAAC;IACrE,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;IAClD,OAAO,CAAC,SAAS,CAAC,QAAQ,EAAE,QAAQ,EAAE,YAAY,EAAE,aAAa,CAAC,CAAC;IACnE,OAAO,CAAC,OAAO,EAAE,CAAC;IAElB,2CAA2C;IAC3C,MAAM,MAAM,GAAG,WAAW,EAAE,CAAC;IAC7B,MAAM,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,kBAAkB,EAAE,MAAM,EAAE,oBAAoB,CAAC,CAAC;IACxF,oBAAoB,CAAC,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,CAAC,CAAC,WAAW,EAAE;QAC9D,SAAS,EAAE,SAAS,CAAC,4BAA4B,CAAC,YAAY;KAC/D,CAAC,CAAC;IAEH,4CAA4C;IAC5C,MAAM,UAAU,GAAG,SAAS,CAAC,SAAS,CAAC,mBAAmB,EAAE,MAAM,EAAE,oBAAoB,CAAC,CAAC;IAC1F,oBAAoB,CAAC,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC,CAAC,WAAW,EAAE;QAC/D,SAAS,EAAE,SAAS,CAAC,4BAA4B,CAAC,YAAY;KAC/D,CAAC,CAAC;IAEH,iDAAiD;IACjD,MAAM,eAAe,GAAG,SAAS,CAAC,SAAS,CAAC,wBAAwB,EAAE,MAAM,EAAE,oBAAoB,CAAC,CAAC;IACpG,oBAAoB,CAAC,OAAO,EAAE,eAAe,EAAE,MAAM,EAAE,CAAC,CAAC,WAAW,EAAE;QACpE,SAAS,EAAE,SAAS,CAAC,4BAA4B,CAAC,YAAY;KAC/D,CAAC,CAAC;IAEH,OAAO;QACL,SAAS;QACT,UAAU;QACV,eAAe;QACf,YAAY;QACZ,aAAa;QACb,cAAc;KACf,CAAC;AACJ,CAAC","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type {PathCommands} from './common.js';\nimport {buildPath, emptyBounds, fillPathWithBoxStyle} from './highlight_common.js';\n\nexport interface IsolatedElementHighlight {\n  widthResizerBorder: PathCommands;\n  heightResizerBorder: PathCommands;\n  bidirectionResizerBorder: PathCommands;\n  currentX: number;\n  currentY: number;\n  currentWidth: number;\n  currentHeight: number;\n  highlightIndex: number;\n  isolationModeHighlightConfig: {\n    resizerColor: string,\n    resizerHandleColor: string,\n    maskColor: string,\n  };\n}\n\nexport function drawIsolatedElementHighlight(\n    highlight: IsolatedElementHighlight, context: CanvasRenderingContext2D, canvasWidth: number, canvasHeight: number,\n    emulationScaleFactor: number) {\n  const {currentX, currentY, currentWidth, currentHeight, highlightIndex} = highlight;\n  // Draw a mask covering other area of the canvas.\n  context.save();\n  context.fillStyle = highlight.isolationModeHighlightConfig.maskColor;\n  context.fillRect(0, 0, canvasWidth, canvasHeight);\n  context.clearRect(currentX, currentY, currentWidth, currentHeight);\n  context.restore();\n\n  // Draw the width resizer with handle bars.\n  const bounds = emptyBounds();\n  const widthPath = buildPath(highlight.widthResizerBorder, bounds, emulationScaleFactor);\n  fillPathWithBoxStyle(context, widthPath, bounds, 0 /* angle */, {\n    fillColor: highlight.isolationModeHighlightConfig.resizerColor,\n  });\n\n  // Draw the height resizer with handle bars.\n  const heightPath = buildPath(highlight.heightResizerBorder, bounds, emulationScaleFactor);\n  fillPathWithBoxStyle(context, heightPath, bounds, 0 /* angle */, {\n    fillColor: highlight.isolationModeHighlightConfig.resizerColor,\n  });\n\n  // Draw the bidirection resizer with handle bars.\n  const bidirectionPath = buildPath(highlight.bidirectionResizerBorder, bounds, emulationScaleFactor);\n  fillPathWithBoxStyle(context, bidirectionPath, bounds, 0 /* angle */, {\n    fillColor: highlight.isolationModeHighlightConfig.resizerColor,\n  });\n\n  return {\n    widthPath,\n    heightPath,\n    bidirectionPath,\n    currentWidth,\n    currentHeight,\n    highlightIndex,\n  };\n}\n"]}