{"version":3,"file":"highlight_flex_common.js","sourceRoot":"","sources":["../../../../inspector_overlay/highlight_flex_common.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type {PathCommands, Position, Quad} from './common.js';\nimport type {BoxStyle, LineStyle} from './highlight_common.js';\nimport {buildPath, createPathForQuad, drawPathWithLineStyle, emptyBounds, fillPathWithBoxStyle, hatchFillPath} from './highlight_common.js';\n\ntype FlexLinesData = FlexItemData[][];\n\ninterface FlexItemData {\n  itemBorder: PathCommands;\n  baseline: number;\n}\nexport interface FlexContainerHighlight {\n  containerBorder: PathCommands;\n  lines: FlexLinesData;\n  isHorizontalFlow: boolean;\n  isReverse: boolean;\n  alignItemsStyle: string;\n  mainGap: number;\n  crossGap: number;\n  flexContainerHighlightConfig: {\n    containerBorder?: LineStyle,\n    lineSeparator?: LineStyle,\n    itemSeparator?: LineStyle,\n    mainDistributedSpace?: BoxStyle,\n    crossDistributedSpace?: BoxStyle,\n    rowGapSpace?: BoxStyle,\n    columnGapSpace?: BoxStyle,\n    crossAlignment?: LineStyle,\n  };\n}\n\nexport interface FlexItemHighlight {\n  baseSize: number;\n  isHorizontalFlow: boolean;\n  flexItemHighlightConfig: {baseSizeBox?: BoxStyle, baseSizeBorder?: LineStyle, flexibilityArrow?: LineStyle};\n  boxSizing: 'content'|'border';\n}\n\ninterface LineQuads {\n  quad: Quad;\n  items: Quad[];\n  extendedItems: Quad[];\n}\n\ninterface GapQuads {\n  mainGaps: Quad[][];\n  crossGaps: Quad[];\n}\n\nconst ALIGNMENT_LINE_THICKNESS = 2;\nconst ALIGNMENT_ARROW_BODY_HEIGHT = 5;\nconst ALIGNMENT_ARROW_BODY_WIDTH = 5;\nconst ALIGNMENT_ARROW_TIP_HEIGHT = 6;\nconst ALIGNMENT_ARROW_TIP_WIDTH = 11;\nconst ALIGNMENT_ARROW_DISTANCE_FROM_LINE = 2;\nconst FLEXIBILITY_ARROW_THICKNESS = 1;\nconst FLEXIBILITY_ARROW_TIP_SIZE = 5;\n\nexport function drawLayoutFlexItemHighlight(\n    highlight: FlexItemHighlight, itemPath: PathCommands, context: CanvasRenderingContext2D, deviceScaleFactor: number,\n    canvasWidth: number, canvasHeight: number, emulationScaleFactor: number) {\n  const {baseSize, isHorizontalFlow} = highlight;\n\n  const itemQuad = rectPathToQuad(itemPath);\n  const baseSizeQuad = isHorizontalFlow ? {\n    p1: itemQuad.p1,\n    p2: getColinearPointAtDistance(itemQuad.p1, itemQuad.p2, baseSize),\n    p3: getColinearPointAtDistance(itemQuad.p4, itemQuad.p3, baseSize),\n    p4: itemQuad.p4,\n  } :\n                                          {\n                                            p1: itemQuad.p1,\n                                            p2: itemQuad.p2,\n                                            p3: getColinearPointAtDistance(itemQuad.p2, itemQuad.p3, baseSize),\n                                            p4: getColinearPointAtDistance(itemQuad.p1, itemQuad.p4, baseSize),\n                                          };\n\n  drawItemBaseSize(highlight, itemQuad, baseSizeQuad, context, emulationScaleFactor);\n  drawFlexibilityArrow(highlight, itemQuad, baseSizeQuad, context, emulationScaleFactor);\n}\n\nfunction drawItemBaseSize(\n    highlight: FlexItemHighlight, itemQuad: Quad, baseSizeQuad: Quad, context: CanvasRenderingContext2D,\n    emulationScaleFactor: number) {\n  const config = highlight.flexItemHighlightConfig;\n\n  const bounds = emptyBounds();\n  const path = buildPath(quadToPath(baseSizeQuad), bounds, emulationScaleFactor);\n\n  // Fill the base size box.\n  const angle = Math.atan2(itemQuad.p4.y - itemQuad.p1.y, itemQuad.p4.x - itemQuad.p1.x) + (Math.PI * 45 / 180);\n  fillPathWithBoxStyle(context, path, bounds, angle, config.baseSizeBox);\n\n  // Draw the base size border.\n  drawPathWithLineStyle(context, path, config.baseSizeBorder);\n}\n\nfunction drawFlexibilityArrow(\n    highlight: FlexItemHighlight, itemQuad: Quad, baseSizeQuad: Quad, context: CanvasRenderingContext2D,\n    emulationScaleFactor: number) {\n  const {isHorizontalFlow} = highlight;\n  const config = highlight.flexItemHighlightConfig;\n\n  if (!config.flexibilityArrow) {\n    return;\n  }\n\n  // Figure out where the arrow should start and end.\n  const from = isHorizontalFlow ? {\n    x: (baseSizeQuad.p2.x + baseSizeQuad.p3.x) / 2,\n    y: (baseSizeQuad.p2.y + baseSizeQuad.p3.y) / 2,\n  } :\n                                  {\n                                    x: (baseSizeQuad.p4.x + baseSizeQuad.p3.x) / 2,\n                                    y: (baseSizeQuad.p4.y + baseSizeQuad.p3.y) / 2,\n                                  };\n\n  const to = isHorizontalFlow ? {\n    x: (itemQuad.p2.x + itemQuad.p3.x) / 2,\n    y: (itemQuad.p2.y + itemQuad.p3.y) / 2,\n  } :\n                                {\n                                  x: (itemQuad.p4.x + itemQuad.p3.x) / 2,\n                                  y: (itemQuad.p4.y + itemQuad.p3.y) / 2,\n                                };\n\n  if (to.x === from.x && to.y === from.y) {\n    return;\n  }\n  // Draw the arrow line.\n  const path = segmentToPath([from, to]);\n  drawPathWithLineStyle(\n      context, buildPath(path, emptyBounds(), emulationScaleFactor), config.flexibilityArrow,\n      FLEXIBILITY_ARROW_THICKNESS);\n\n  if (!config.flexibilityArrow.color) {\n    return;\n  }\n\n  // Draw the tip of the arrow.\n  const tipPath = buildPath(\n      [\n        'M',\n        to.x - FLEXIBILITY_ARROW_TIP_SIZE,\n        to.y - FLEXIBILITY_ARROW_TIP_SIZE,\n        'L',\n        to.x,\n        to.y,\n        'L',\n        to.x - FLEXIBILITY_ARROW_TIP_SIZE,\n        to.y + FLEXIBILITY_ARROW_TIP_SIZE,\n      ],\n      emptyBounds(), emulationScaleFactor);\n\n  const angle = Math.atan2(to.y - from.y, to.x - from.x);\n  context.save();\n  context.translate(to.x + .5, to.y + .5);\n  context.rotate(angle);\n  context.translate(-to.x - .5, -to.y - .5);\n\n  drawPathWithLineStyle(context, tipPath, config.flexibilityArrow, FLEXIBILITY_ARROW_THICKNESS);\n\n  context.restore();\n}\n\nexport function drawLayoutFlexContainerHighlight(\n    highlight: FlexContainerHighlight, context: CanvasRenderingContext2D, deviceScaleFactor: number,\n    canvasWidth: number, canvasHeight: number, emulationScaleFactor: number) {\n  const config = highlight.flexContainerHighlightConfig;\n  const bounds = emptyBounds();\n  const borderPath = buildPath(highlight.containerBorder, bounds, emulationScaleFactor);\n  const {isHorizontalFlow, isReverse, lines} = highlight;\n  drawPathWithLineStyle(context, borderPath, config.containerBorder);\n\n  // If there are no lines, bail out now.\n  if (!lines || !lines.length) {\n    return;\n  }\n\n  // Process the item paths we received from the backend into quads we can use to draw what we need.\n  const lineQuads = getLinesAndItemsQuads(highlight.containerBorder, lines, isHorizontalFlow, isReverse);\n\n  // Draw lines and items.\n  drawFlexLinesAndItems(highlight, context, emulationScaleFactor, lineQuads, isHorizontalFlow);\n\n  // Draw the hatching pattern outside of items.\n  drawFlexSpace(highlight, context, emulationScaleFactor, highlight.containerBorder, lineQuads);\n\n  // Draw the self-alignment lines and arrows.\n  drawFlexAlignment(\n      highlight, context, emulationScaleFactor, lineQuads, lines.map(line => line.map(item => item.baseline)));\n}\n\nfunction drawFlexLinesAndItems(\n    highlight: FlexContainerHighlight, context: CanvasRenderingContext2D, emulationScaleFactor: number,\n    lineQuads: LineQuads[], isHorizontalFlow: boolean) {\n  const config = highlight.flexContainerHighlightConfig;\n\n  const paths = lineQuads.map((line, lineIndex) => {\n    const nextLineQuad = lineQuads[lineIndex + 1] && lineQuads[lineIndex + 1].quad;\n    return {\n      path: isHorizontalFlow ? quadToHorizontalLinesPath(line.quad, nextLineQuad) :\n                               quadToVerticalLinesPath(line.quad, nextLineQuad),\n      items: line.extendedItems.map((item, itemIndex) => {\n        const nextItemQuad = line.extendedItems[itemIndex + 1] && line.extendedItems[itemIndex + 1];\n        return isHorizontalFlow ? quadToVerticalLinesPath(item, nextItemQuad) :\n                                  quadToHorizontalLinesPath(item, nextItemQuad);\n      }),\n    };\n  });\n\n  // Only draw lines when there's more than 1.\n  const drawLines = paths.length > 1;\n\n  for (const {path, items} of paths) {\n    for (const itemPath of items) {\n      drawPathWithLineStyle(context, buildPath(itemPath, emptyBounds(), emulationScaleFactor), config.itemSeparator);\n    }\n    if (drawLines) {\n      drawPathWithLineStyle(context, buildPath(path, emptyBounds(), emulationScaleFactor), config.lineSeparator);\n    }\n  }\n}\n\n/**\n * Draw the hatching pattern in all of the empty space between items and lines (either due to gaps or content\n * distribution).\n * Space created by content distribution along the cross axis (align-content) appears between flex lines.\n * Space created by content distribution along the main axis (justify-content) appears between flex items.\n * Space created by gap along the cross axis appears between flex lines.\n * Space created by gap along the main axis appears between flex items.\n */\nfunction drawFlexSpace(\n    highlight: FlexContainerHighlight, context: CanvasRenderingContext2D, emulationScaleFactor: number,\n    container: PathCommands, lineQuads: LineQuads[]) {\n  const {isHorizontalFlow} = highlight;\n  const {mainDistributedSpace, crossDistributedSpace, rowGapSpace, columnGapSpace} =\n      highlight.flexContainerHighlightConfig;\n  const mainGapSpace = isHorizontalFlow ? columnGapSpace : rowGapSpace;\n  const crossGapSpace = isHorizontalFlow ? rowGapSpace : columnGapSpace;\n\n  const drawMainSpace =\n      mainDistributedSpace && Boolean(mainDistributedSpace.fillColor || mainDistributedSpace.hatchColor);\n  const drawCrossSpace = lineQuads.length > 1 && crossDistributedSpace &&\n      Boolean(crossDistributedSpace.fillColor || crossDistributedSpace.hatchColor);\n  const drawMainGapSpace = mainGapSpace && Boolean(mainGapSpace.fillColor || mainGapSpace.hatchColor);\n  const drawCrossGapSpace =\n      lineQuads.length > 1 && crossGapSpace && Boolean(crossGapSpace.fillColor || crossGapSpace.hatchColor);\n\n  const isSameStyle = mainDistributedSpace && crossDistributedSpace && mainGapSpace && crossGapSpace &&\n      mainDistributedSpace.fillColor === crossDistributedSpace.fillColor &&\n      mainDistributedSpace.hatchColor === crossDistributedSpace.hatchColor &&\n      mainDistributedSpace.fillColor === mainGapSpace.fillColor &&\n      mainDistributedSpace.hatchColor === mainGapSpace.hatchColor &&\n      mainDistributedSpace.fillColor === crossGapSpace.fillColor &&\n      mainDistributedSpace.hatchColor === crossGapSpace.hatchColor;\n\n  const containerQuad = rectPathToQuad(container);\n\n  // Start with the case where we want to draw all types of space, with the same style. This is important because it's\n  // a common case that we can optimize by drawing in one go, and therefore avoiding having visual offsets between\n  // mutliple hatch patterns.\n  if (isSameStyle) {\n    // Draw in one go by constructing a path that covers the entire container but punches holes where items are.\n    const allItemQuads = lineQuads.map(line => line.extendedItems).flat().map(item => item);\n    drawFlexSpaceInQuad(containerQuad, allItemQuads, mainDistributedSpace, context, emulationScaleFactor);\n    return;\n  }\n\n  // Compute quads for the gaps between lines and items, if any. This will be useful when drawing the flex space.\n  const gapQuads = getGapQuads(highlight, lineQuads);\n\n  if (drawCrossSpace) {\n    // For cross-space we draw a path that covers everything.\n    const quadsToClip = [\n      // But we clip holes where lines are.\n      ...lineQuads.map(line => line.quad),\n      // And also clip holds where gaps are, if those are also drawn.\n      ...(drawCrossGapSpace ? gapQuads.crossGaps : []),\n    ];\n    drawFlexSpaceInQuad(containerQuad, quadsToClip, crossDistributedSpace, context, emulationScaleFactor);\n  }\n\n  if (drawMainSpace) {\n    // Main space is draw per flex line.\n    for (const [index, line] of lineQuads.entries()) {\n      // For main-space, we draw a path that covers each line.\n      const quadsToClip = [\n        // But we clip holes were items on the lines are.\n        ...line.extendedItems,\n        // And where gaps are, if those are also drawn.\n        ...(drawMainGapSpace ? gapQuads.mainGaps[index] : []),\n      ];\n      drawFlexSpaceInQuad(line.quad, quadsToClip, mainDistributedSpace, context, emulationScaleFactor);\n    }\n  }\n\n  if (drawCrossGapSpace) {\n    for (const quad of gapQuads.crossGaps) {\n      drawFlexSpaceInQuad(quad, [], crossGapSpace, context, emulationScaleFactor);\n    }\n  }\n\n  if (drawMainGapSpace) {\n    for (const line of gapQuads.mainGaps) {\n      for (const quad of line) {\n        drawFlexSpaceInQuad(quad, [], mainGapSpace, context, emulationScaleFactor);\n      }\n    }\n  }\n}\n\nfunction drawFlexAlignment(\n    highlight: FlexContainerHighlight, context: CanvasRenderingContext2D, emulationScaleFactor: number,\n    lineQuads: LineQuads[], itemBaselines: number[][]) {\n  lineQuads.forEach(({quad, items}, i) => {\n    drawFlexAlignmentForLine(highlight, context, emulationScaleFactor, quad, items, itemBaselines[i]);\n  });\n}\n\nfunction drawFlexAlignmentForLine(\n    highlight: FlexContainerHighlight, context: CanvasRenderingContext2D, emulationScaleFactor: number, lineQuad: Quad,\n    itemQuads: Quad[], itemBaselines: number[]) {\n  const {alignItemsStyle, isHorizontalFlow} = highlight;\n  const {crossAlignment} = highlight.flexContainerHighlightConfig;\n  if (!crossAlignment || !crossAlignment.color) {\n    return;\n  }\n\n  // Note that the order of the 2 points in the array matters as it is used to determine where the arrow will be drawn.\n  //\n  // first                second\n  // point                point\n  //   o--------------------o\n  //             ^\n  //             |\n  //           arrow\n  //\n  //\n  //           arrow\n  // second      |        first\n  // point       V        point\n  //   o--------------------o\n  const linesToDraw: [Position, Position][] = [];\n\n  switch (alignItemsStyle) {\n    case 'flex-start':\n      linesToDraw.push([\n        isHorizontalFlow ? lineQuad.p1 : lineQuad.p4,\n        isHorizontalFlow ? lineQuad.p2 : lineQuad.p1,\n      ]);\n      break;\n    case 'flex-end':\n      linesToDraw.push([\n        isHorizontalFlow ? lineQuad.p3 : lineQuad.p2,\n        isHorizontalFlow ? lineQuad.p4 : lineQuad.p3,\n      ]);\n      break;\n    case 'center':\n      if (isHorizontalFlow) {\n        linesToDraw.push([\n          {\n            x: (lineQuad.p1.x + lineQuad.p4.x) / 2,\n            y: (lineQuad.p1.y + lineQuad.p4.y) / 2,\n          },\n          {\n            x: (lineQuad.p2.x + lineQuad.p3.x) / 2,\n            y: (lineQuad.p2.y + lineQuad.p3.y) / 2,\n          },\n        ]);\n        linesToDraw.push([\n          {\n            x: (lineQuad.p2.x + lineQuad.p3.x) / 2,\n            y: (lineQuad.p2.y + lineQuad.p3.y) / 2,\n          },\n          {\n            x: (lineQuad.p1.x + lineQuad.p4.x) / 2,\n            y: (lineQuad.p1.y + lineQuad.p4.y) / 2,\n          },\n        ]);\n      } else {\n        linesToDraw.push([\n          {\n            x: (lineQuad.p1.x + lineQuad.p2.x) / 2,\n            y: (lineQuad.p1.y + lineQuad.p2.y) / 2,\n          },\n          {\n            x: (lineQuad.p3.x + lineQuad.p4.x) / 2,\n            y: (lineQuad.p3.y + lineQuad.p4.y) / 2,\n          },\n        ]);\n        linesToDraw.push([\n          {\n            x: (lineQuad.p3.x + lineQuad.p4.x) / 2,\n            y: (lineQuad.p3.y + lineQuad.p4.y) / 2,\n          },\n          {\n            x: (lineQuad.p1.x + lineQuad.p2.x) / 2,\n            y: (lineQuad.p1.y + lineQuad.p2.y) / 2,\n          },\n        ]);\n      }\n      break;\n    case 'stretch':\n    case 'normal':\n      linesToDraw.push([\n        isHorizontalFlow ? lineQuad.p1 : lineQuad.p4,\n        isHorizontalFlow ? lineQuad.p2 : lineQuad.p1,\n      ]);\n      linesToDraw.push([\n        isHorizontalFlow ? lineQuad.p3 : lineQuad.p2,\n        isHorizontalFlow ? lineQuad.p4 : lineQuad.p3,\n      ]);\n      break;\n    case 'baseline':\n      // Baseline alignment only works in horizontal direction.\n      if (isHorizontalFlow) {\n        // We know the baseline for each item, it's an offset value from the top of the item's quad box.\n        // If align-items:baseline is applied to the container, then all of the items' baselines are aligned and we can\n        // just use the first item's baseline to draw the alignment line we need.\n        // Any item may, however, override its own self-alignment with align-self. We don't know if some items are\n        // aligned differently, or if no items at all inherit from the container's align-items:baseline property, so in\n        // theory, drawing the alignment line is impossible.\n        // That said, in situations where align-items:baseline is used, it is safe to assume that most (if not all) of\n        // the items are actually using this alignment value.\n        // Given this, we still draw the alignment line using the first item's baseline value.\n        const itemQuad = itemQuads[0];\n\n        const start = intersectSegments([itemQuad.p1, itemQuad.p2], [lineQuad.p2, lineQuad.p3]);\n        const end = intersectSegments([itemQuad.p1, itemQuad.p2], [lineQuad.p1, lineQuad.p4]);\n\n        const baseline = itemBaselines[0];\n        const angle = Math.atan2(itemQuad.p4.y - itemQuad.p1.y, itemQuad.p4.x - itemQuad.p1.x);\n\n        linesToDraw.push([\n          {\n            x: start.x + (baseline * Math.cos(angle)),\n            y: start.y + (baseline * Math.sin(angle)),\n          },\n          {\n            x: end.x + (baseline * Math.cos(angle)),\n            y: end.y + (baseline * Math.sin(angle)),\n          },\n        ]);\n      }\n      break;\n  }\n\n  for (const points of linesToDraw) {\n    const path = segmentToPath(points);\n    drawPathWithLineStyle(\n        context, buildPath(path, emptyBounds(), emulationScaleFactor), crossAlignment, ALIGNMENT_LINE_THICKNESS);\n    drawAlignmentArrow(highlight, context, emulationScaleFactor, points[0], points[1]);\n  }\n}\n\n/**\n * Draw an arrow pointed at the middle of a segment. The segment isn't necessarily vertical or horizontal.\n *\n * start          C             end\n *  o-------------x--------------o\n *               / \\\n *              /   \\\n *             /_   _\\\n *               | |\n *               |_|\n */\nfunction drawAlignmentArrow(\n    highlight: FlexContainerHighlight, context: CanvasRenderingContext2D, emulationScaleFactor: number,\n    startPoint: Position, endPoint: Position) {\n  const {crossAlignment} = highlight.flexContainerHighlightConfig;\n  if (!crossAlignment || !crossAlignment.color) {\n    return;\n  }\n\n  // The angle of the segment.\n  const angle = Math.atan2(endPoint.y - startPoint.y, endPoint.x - startPoint.x);\n\n  // Where the tip of the arrow meets the segment, plus some offset so they don't overlap.\n  const C = {\n    x: (-ALIGNMENT_ARROW_DISTANCE_FROM_LINE * Math.cos(angle - .5 * Math.PI)) + ((startPoint.x + endPoint.x) / 2),\n    y: (-ALIGNMENT_ARROW_DISTANCE_FROM_LINE * Math.sin(angle - .5 * Math.PI)) + ((startPoint.y + endPoint.y) / 2),\n  };\n\n  const path = buildPath(\n      [\n        'M',\n        C.x,\n        C.y,\n        'L',\n        C.x + (ALIGNMENT_ARROW_TIP_WIDTH / 2),\n        C.y + ALIGNMENT_ARROW_TIP_HEIGHT,\n        'L',\n        C.x + (ALIGNMENT_ARROW_BODY_WIDTH / 2),\n        C.y + ALIGNMENT_ARROW_TIP_HEIGHT,\n        'L',\n        C.x + (ALIGNMENT_ARROW_BODY_WIDTH / 2),\n        C.y + ALIGNMENT_ARROW_TIP_HEIGHT + ALIGNMENT_ARROW_BODY_HEIGHT,\n        'L',\n        C.x - (ALIGNMENT_ARROW_BODY_WIDTH / 2),\n        C.y + ALIGNMENT_ARROW_TIP_HEIGHT + ALIGNMENT_ARROW_BODY_HEIGHT,\n        'L',\n        C.x - (ALIGNMENT_ARROW_BODY_WIDTH / 2),\n        C.y + ALIGNMENT_ARROW_TIP_HEIGHT,\n        'L',\n        C.x - (ALIGNMENT_ARROW_TIP_WIDTH / 2),\n        C.y + ALIGNMENT_ARROW_TIP_HEIGHT,\n        'Z',\n      ],\n      emptyBounds(), emulationScaleFactor);\n\n  context.save();\n  context.translate(C.x, C.y);\n  context.rotate(angle);\n  context.translate(-C.x, -C.y);\n\n  context.fillStyle = crossAlignment.color;\n  context.fill(path);\n\n  context.lineWidth = 1;\n  context.strokeStyle = 'white';\n  context.stroke(path);\n\n  context.restore();\n}\n\nfunction drawFlexSpaceInQuad(\n    outerQuad: Quad, quadsToClip: Quad[], boxStyle: BoxStyle|undefined, context: CanvasRenderingContext2D,\n    emulationScaleFactor: number) {\n  if (!boxStyle) {\n    return;\n  }\n\n  if (boxStyle.fillColor) {\n    const bounds = emptyBounds();\n    const path = createPathForQuad(outerQuad, quadsToClip, bounds, emulationScaleFactor);\n    context.fillStyle = boxStyle.fillColor;\n    context.fill(path);\n  }\n\n  if (boxStyle.hatchColor) {\n    const angle = Math.atan2(outerQuad.p2.y - outerQuad.p1.y, outerQuad.p2.x - outerQuad.p1.x) * 180 / Math.PI;\n    const bounds = emptyBounds();\n    const path = createPathForQuad(outerQuad, quadsToClip, bounds, emulationScaleFactor);\n    hatchFillPath(context, path, bounds, 10, boxStyle.hatchColor, angle, false);\n  }\n}\n\n/**\n * We get a list of paths for each flex item from the backend. From this list, we compute the resulting paths for each\n * flex line too (making it span the entire container size (in the main direction)). We also process the item path so\n * they span the entire flex line size (in the cross direction).\n *\n * @param container\n * @param lines\n * @param isHorizontalFlow\n */\nexport function getLinesAndItemsQuads(\n    container: PathCommands, lines: FlexLinesData, isHorizontalFlow: boolean, isReverse: boolean): LineQuads[] {\n  const containerQuad = rectPathToQuad(container);\n\n  // Create a quad for each line that's as big as the items it contains and extends to the edges of the container in the\n  // main direction.\n  const lineQuads: LineQuads[] = [];\n  for (const line of lines) {\n    if (!line.length) {\n      continue;\n    }\n\n    let lineQuad = rectPathToQuad(line[0].itemBorder);\n    const itemQuads: Quad[] = [];\n    for (const {itemBorder} of line) {\n      const itemQuad = rectPathToQuad(itemBorder);\n      lineQuad = !lineQuad ? itemQuad : uniteQuads(lineQuad, itemQuad, isHorizontalFlow, isReverse);\n      itemQuads.push(itemQuad);\n    }\n\n    const extendedLineQuad =\n        lines.length === 1 ? containerQuad : growQuadToEdgesOf(lineQuad, containerQuad, isHorizontalFlow);\n    const extendItemQuads = itemQuads.map(itemQuad => growQuadToEdgesOf(itemQuad, extendedLineQuad, !isHorizontalFlow));\n\n    lineQuads.push({\n      quad: extendedLineQuad,\n      items: itemQuads,\n      extendedItems: extendItemQuads,\n    });\n  }\n\n  return lineQuads;\n}\n\nexport function getGapQuads(\n    highlight: Pick<FlexContainerHighlight, 'crossGap'|'mainGap'|'isHorizontalFlow'|'isReverse'>,\n    lineQuads: LineQuads[]): GapQuads {\n  const {crossGap, mainGap, isHorizontalFlow, isReverse} = highlight;\n  const mainGaps: Quad[][] = [];\n  const crossGaps: Quad[] = [];\n\n  if (crossGap && lineQuads.length > 1) {\n    for (let i = 0, j = i + 1; i < lineQuads.length - 1; i++, j = i + 1) {\n      const line1 = lineQuads[i].quad;\n      const line2 = lineQuads[j].quad;\n\n      crossGaps.push(getGapQuadBetweenQuads(line1, line2, crossGap, isHorizontalFlow));\n    }\n  }\n\n  for (const {extendedItems} of lineQuads) {\n    const lineGapQuads = [];\n    if (mainGap) {\n      for (let i = 0, j = i + 1; i < extendedItems.length - 1; i++, j = i + 1) {\n        const item1 = extendedItems[i];\n        const item2 = extendedItems[j];\n\n        lineGapQuads.push(getGapQuadBetweenQuads(item1, item2, mainGap, !isHorizontalFlow, isReverse));\n      }\n    }\n    mainGaps.push(lineGapQuads);\n  }\n\n  return {mainGaps, crossGaps};\n}\n\n/**\n * Create a quad for the gap that exists between 2 quads.\n *\n * +-------+   +-+   +-------+\n * | quad1 |   |/|   | quad2 |\n * +-------+   +-+   +-------+\n *           gap quad\n *\n * @param quad1\n * @param quad2\n * @param size The size of the gap between the 2 quads\n * @param vertically whether the 2 quads are stacked vertically (quad1 above quad2), or horizontally (quad1 left of\n * quad2)\n * @param isReverse whether the direction is reversed (quad1 below quad2 or quad1 right of quad2)\n */\nexport function getGapQuadBetweenQuads(\n    quad1: Quad, quad2: Quad, size: number, vertically: boolean, isReverse?: boolean) {\n  if (isReverse) {\n    [quad1, quad2] = [quad2, quad1];\n  }\n  const angle = vertically ? Math.atan2(quad1.p4.y - quad1.p1.y, quad1.p4.x - quad1.p1.x) :\n                             Math.atan2(quad1.p2.y - quad1.p1.y, quad1.p2.x - quad1.p1.x);\n  const d = vertically ? distance(quad1.p4, quad2.p1) : distance(quad1.p2, quad2.p1);\n  const startOffset = (d / 2) - (size / 2);\n  const endOffset = (d / 2) + (size / 2);\n\n  return vertically ? {\n    p1: {\n      x: Math.round(quad1.p4.x + (startOffset * Math.cos(angle))),\n      y: Math.round(quad1.p4.y + (startOffset * Math.sin(angle))),\n    },\n    p2: {\n      x: Math.round(quad1.p3.x + (startOffset * Math.cos(angle))),\n      y: Math.round(quad1.p3.y + (startOffset * Math.sin(angle))),\n    },\n    p3: {\n      x: Math.round(quad1.p3.x + (endOffset * Math.cos(angle))),\n      y: Math.round(quad1.p3.y + (endOffset * Math.sin(angle))),\n    },\n    p4: {\n      x: Math.round(quad1.p4.x + (endOffset * Math.cos(angle))),\n      y: Math.round(quad1.p4.y + (endOffset * Math.sin(angle))),\n    },\n  } :\n                      {\n                        p1: {\n                          x: Math.round(quad1.p2.x + (startOffset * Math.cos(angle))),\n                          y: Math.round(quad1.p2.y + (startOffset * Math.sin(angle))),\n                        },\n                        p2: {\n                          x: Math.round(quad1.p2.x + (endOffset * Math.cos(angle))),\n                          y: Math.round(quad1.p2.y + (endOffset * Math.sin(angle))),\n                        },\n                        p3: {\n                          x: Math.round(quad1.p3.x + (endOffset * Math.cos(angle))),\n                          y: Math.round(quad1.p3.y + (endOffset * Math.sin(angle))),\n                        },\n                        p4: {\n                          x: Math.round(quad1.p3.x + (startOffset * Math.cos(angle))),\n                          y: Math.round(quad1.p3.y + (startOffset * Math.sin(angle))),\n                        },\n                      };\n}\n\nfunction quadToHorizontalLinesPath(quad: Quad, nextQuad: Quad|undefined): PathCommands {\n  const skipEndLine = nextQuad && quad.p4.y === nextQuad.p1.y;\n  const startLine = ['M', quad.p1.x, quad.p1.y, 'L', quad.p2.x, quad.p2.y];\n  return skipEndLine ? startLine : [...startLine, 'M', quad.p3.x, quad.p3.y, 'L', quad.p4.x, quad.p4.y];\n}\n\nfunction quadToVerticalLinesPath(quad: Quad, nextQuad: Quad|undefined): PathCommands {\n  const skipEndLine = nextQuad && quad.p2.x === nextQuad.p1.x;\n  const startLine = ['M', quad.p1.x, quad.p1.y, 'L', quad.p4.x, quad.p4.y];\n  return skipEndLine ? startLine : [...startLine, 'M', quad.p3.x, quad.p3.y, 'L', quad.p2.x, quad.p2.y];\n}\n\nfunction quadToPath(quad: Quad): PathCommands {\n  return [\n    'M',\n    quad.p1.x,\n    quad.p1.y,\n    'L',\n    quad.p2.x,\n    quad.p2.y,\n    'L',\n    quad.p3.x,\n    quad.p3.y,\n    'L',\n    quad.p4.x,\n    quad.p4.y,\n    'Z',\n  ];\n}\n\nfunction segmentToPath(segment: [Position, Position]): PathCommands {\n  return ['M', segment[0].x, segment[0].y, 'L', segment[1].x, segment[1].y];\n}\n\n/**\n * Transform a path array (as returned by the backend) that corresponds to a rectangle into a quad.\n * @param commands\n * @return The quad object\n */\nfunction rectPathToQuad(commands: PathCommands): Quad {\n  return {\n    p1: {x: commands[1] as number, y: commands[2] as number},\n    p2: {x: commands[4] as number, y: commands[5] as number},\n    p3: {x: commands[7] as number, y: commands[8] as number},\n    p4: {x: commands[10] as number, y: commands[11] as number},\n  };\n}\n\n/**\n * Get a quad that bounds the provided 2 quads.\n * This only works if both quads have their respective sides parallel to eachother.\n * Note that it is more complicated because rectangles can be transformed (i.e. their sides aren't necessarily parallel\n * to the x and y axes).\n * @param quad1\n * @param quad2\n * @param isHorizontalFlow\n * @param isReverse\n */\nexport function uniteQuads(quad1: Quad, quad2: Quad, isHorizontalFlow: boolean, isReverse: boolean): Quad {\n  if (isReverse) {\n    [quad1, quad2] = [quad2, quad1];\n  }\n\n  const mainStartSegment = isHorizontalFlow ? [quad1.p1, quad1.p4] : [quad1.p1, quad1.p2];\n  const mainEndSegment = isHorizontalFlow ? [quad2.p2, quad2.p3] : [quad2.p4, quad2.p3];\n\n  const crossStartSegment1 = isHorizontalFlow ? [quad1.p1, quad1.p2] : [quad1.p1, quad1.p4];\n  const crossEndSegment1 = isHorizontalFlow ? [quad1.p4, quad1.p3] : [quad1.p2, quad1.p3];\n\n  const crossStartSegment2 = isHorizontalFlow ? [quad2.p1, quad2.p2] : [quad2.p1, quad2.p4];\n  const crossEndSegment2 = isHorizontalFlow ? [quad2.p4, quad2.p3] : [quad2.p2, quad2.p3];\n\n  let p1, p2, p3, p4;\n\n  if (isHorizontalFlow) {\n    p1 = intersectSegments(mainStartSegment, crossStartSegment2);\n    if (segmentContains(mainStartSegment, p1)) {\n      p1 = quad1.p1;\n    }\n\n    p2 = intersectSegments(mainEndSegment, crossStartSegment1);\n    if (segmentContains(mainEndSegment, p2)) {\n      p2 = quad2.p2;\n    }\n\n    p3 = intersectSegments(mainEndSegment, crossEndSegment1);\n    if (segmentContains(mainEndSegment, p3)) {\n      p3 = quad2.p3;\n    }\n\n    p4 = intersectSegments(mainStartSegment, crossEndSegment2);\n    if (segmentContains(mainStartSegment, p4)) {\n      p4 = quad1.p4;\n    }\n  } else {\n    p1 = intersectSegments(mainStartSegment, crossStartSegment2);\n    if (segmentContains(mainStartSegment, p1)) {\n      p1 = quad1.p1;\n    }\n\n    p2 = intersectSegments(mainStartSegment, crossEndSegment2);\n    if (segmentContains(mainStartSegment, p2)) {\n      p2 = quad1.p2;\n    }\n\n    p3 = intersectSegments(mainEndSegment, crossEndSegment1);\n    if (segmentContains(mainEndSegment, p3)) {\n      p3 = quad2.p3;\n    }\n\n    p4 = intersectSegments(mainEndSegment, crossStartSegment1);\n    if (segmentContains(mainEndSegment, p4)) {\n      p4 = quad2.p4;\n    }\n  }\n\n  return {p1, p2, p3, p4};\n}\n\n/**\n * Given 2 quads, with one being contained inside the other, grow the inner one, along one direction, so it ends up\n * flush aginst the outer one.\n * @param innerQuad\n * @param outerQuad\n * @param horizontally The direction to grow the inner quad along\n */\nexport function growQuadToEdgesOf(innerQuad: Quad, outerQuad: Quad, horizontally: boolean): Quad {\n  return {\n    p1: horizontally ? intersectSegments([outerQuad.p1, outerQuad.p4], [innerQuad.p1, innerQuad.p2]) :\n                       intersectSegments([outerQuad.p1, outerQuad.p2], [innerQuad.p1, innerQuad.p4]),\n    p2: horizontally ? intersectSegments([outerQuad.p2, outerQuad.p3], [innerQuad.p1, innerQuad.p2]) :\n                       intersectSegments([outerQuad.p1, outerQuad.p2], [innerQuad.p2, innerQuad.p3]),\n    p3: horizontally ? intersectSegments([outerQuad.p2, outerQuad.p3], [innerQuad.p3, innerQuad.p4]) :\n                       intersectSegments([outerQuad.p3, outerQuad.p4], [innerQuad.p2, innerQuad.p3]),\n    p4: horizontally ? intersectSegments([outerQuad.p1, outerQuad.p4], [innerQuad.p3, innerQuad.p4]) :\n                       intersectSegments([outerQuad.p3, outerQuad.p4], [innerQuad.p1, innerQuad.p4]),\n  };\n}\n\n/**\n * Return the x/y intersection of the 2 segments\n * @param segment1\n * @param segment2\n * @return the point where the segments intersect\n */\nexport function intersectSegments([p1, p2]: Position[], [p3, p4]: Position[]): Position {\n  const x = (((p1.x * p2.y - p1.y * p2.x) * (p3.x - p4.x)) - ((p1.x - p2.x) * (p3.x * p4.y - p3.y * p4.x))) /\n      (((p1.x - p2.x) * (p3.y - p4.y)) - (p1.y - p2.y) * (p3.x - p4.x));\n  const y = (((p1.x * p2.y - p1.y * p2.x) * (p3.y - p4.y)) - ((p1.y - p2.y) * (p3.x * p4.y - p3.y * p4.x))) /\n      (((p1.x - p2.x) * (p3.y - p4.y)) - (p1.y - p2.y) * (p3.x - p4.x));\n\n  return {\n    x: Object.is(x, -0) ? 0 : x,\n    y: Object.is(y, -0) ? 0 : y,\n  };\n}\n\n/**\n * Does the provided segment contain the provided point\n * @param segment\n * @param point\n */\nexport function segmentContains([p1, p2]: Position[], point: Position): boolean {\n  if (p1.x < p2.x && (point.x < p1.x || point.x > p2.x)) {\n    return false;\n  }\n\n  if (p1.x > p2.x && (point.x > p1.x || point.x < p2.x)) {\n    return false;\n  }\n\n  if (p1.y < p2.y && (point.y < p1.y || point.y > p2.y)) {\n    return false;\n  }\n\n  if (p1.y > p2.y && (point.y > p1.y || point.y < p2.y)) {\n    return false;\n  }\n\n  return (point.y - p1.y) * (p2.x - p1.x) === (p2.y - p1.y) * (point.x - p1.x);\n}\n\nexport function distance(p1: Position, p2: Position) {\n  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n}\n\nexport function getColinearPointAtDistance(p1: Position, p2: Position, distance: number): Position {\n  const slope = (p2.y - p1.y) / (p2.x - p1.x);\n  const angle = Math.atan(slope);\n  return {\n    x: p1.x + distance * Math.cos(angle),\n    y: p1.y + distance * Math.sin(angle),\n  };\n}\n"]}