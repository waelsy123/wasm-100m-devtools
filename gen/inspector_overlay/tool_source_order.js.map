{"version":3,"file":"tool_source_order.js","sourceRoot":"","sources":["../../../../inspector_overlay/tool_source_order.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n//  Copyright (C) 2012 Google Inc. All rights reserved.\n\n//  Redistribution and use in source and binary forms, with or without\n//  modification, are permitted provided that the following conditions\n//  are met:\n\n//  1.  Redistributions of source code must retain the above copyright\n//      notice, this list of conditions and the following disclaimer.\n//  2.  Redistributions in binary form must reproduce the above copyright\n//      notice, this list of conditions and the following disclaimer in the\n//      documentation and/or other materials provided with the distribution.\n//  3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n//      its contributors may be used to endorse or promote products derived\n//      from this software without specific prior written permission.\n\n//  THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n//  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n//  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n//  DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n//  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n//  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n//  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n//  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n//  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport type {Bounds, ResetData} from './common.js';\nimport {createChild, Overlay} from './common.js';\nimport type {PathBounds} from './highlight_common.js';\nimport {buildPath, emptyBounds} from './highlight_common.js';\n\ninterface Path {\n  path: Array<string|number>;\n  outlineColor: string;\n  name: string;\n}\n\ninterface SourceOrderHighlight {\n  sourceOrder: number;\n  paths: Path[];\n}\n\nexport class SourceOrderOverlay extends Overlay {\n  private sourceOrderContainer!: HTMLElement;\n\n  reset(resetData: ResetData) {\n    super.reset(resetData);\n    this.sourceOrderContainer.textContent = '';\n  }\n\n  install() {\n    this.document.body.classList.add('fill');\n\n    const canvas = this.document.createElement('canvas');\n    canvas.id = 'canvas';\n    canvas.classList.add('fill');\n    this.document.body.append(canvas);\n\n    const sourceOrderContainer = this.document.createElement('div');\n    sourceOrderContainer.id = 'source-order-container';\n    this.document.body.append(sourceOrderContainer);\n    this.sourceOrderContainer = sourceOrderContainer;\n\n    this.setCanvas(canvas);\n\n    super.install();\n  }\n\n  uninstall() {\n    this.document.body.classList.remove('fill');\n    this.document.body.innerHTML = '';\n    super.uninstall();\n  }\n\n  drawSourceOrder(highlight: SourceOrderHighlight) {\n    const sourceOrder = highlight.sourceOrder || 0;\n    const path = highlight.paths.slice().pop();\n\n    if (!path) {\n      throw new Error('No path provided');\n    }\n\n    this.context.save();\n    const bounds = emptyBounds();\n    const outlineColor = path.outlineColor;\n\n    this.context.save();\n    drawPath(this.context, path.path, outlineColor, Boolean(sourceOrder), bounds, this.emulationScaleFactor);\n    this.context.restore();\n\n    this.context.save();\n    if (Boolean(sourceOrder)) {\n      this.drawSourceOrderLabel(sourceOrder, outlineColor, bounds);\n    }\n    this.context.restore();\n\n    return {bounds: bounds};\n  }\n\n  private drawSourceOrderLabel(sourceOrder: number, color: string, bounds: PathBounds) {\n    const sourceOrderContainer = this.sourceOrderContainer;\n    const otherLabels = sourceOrderContainer.children;\n    const labelContainer = createChild(sourceOrderContainer, 'div', 'source-order-label-container');\n    labelContainer.style.color = color;\n    labelContainer.textContent = String(sourceOrder);\n\n    const labelHeight = labelContainer.offsetHeight;\n    const labelWidth = labelContainer.offsetWidth;\n    const labelType =\n        getLabelType(bounds, labelHeight, labelWidth, otherLabels as HTMLCollectionOf<HTMLElement>, this.canvasHeight);\n    const labelPosition = getPositionFromLabelType(labelType, bounds, labelHeight);\n\n    labelContainer.classList.add(labelType);\n    labelContainer.style.top = labelPosition.contentTop + 'px';\n    labelContainer.style.left = labelPosition.contentLeft + 'px';\n  }\n}\n\n// If there is a large number of child elements, labels will be placed in the top\n// corner in order to keep the overlay rendering quick\nconst MAX_CHILD_ELEMENTS_THRESHOLD = 300;\n\n/**\n * There are 8 types of labels.\n *\n * There are 4 positions a label can have on the y axis, relative to the element:\n * - topCorner, bottomCorner: placed inside of the element, in its left corners\n * - aboveElement, belowElement: placed outside of the element, aligned on the\n *   left edge of the element\n *\n * The label position is determined as follows:\n * 1. Top corner if the element is wider and taller than the element\n * 2. Above element if the label is wider or taller than the element\n * 3. Below element if the label would be placed above the element, but this would\n *    cause it to overlap with another label or intersect the top of the window\n * 4. Bottom corner if the label would be placed below the element, but this would\n *    cause it to intersect the bottom of the window\n * On the x axis, the label is always aligned with its element's leftmost edge.\n *\n * The label may need additional styles if it is taller or wider than the element,\n * to make sure all borders that don't touch the element's outline are rounded\n * - Wider: right corners are rounded\n * - Taller: top corners are rounded\n *\n * Examples: (E = element, L = label)\n *             ______\n *            |_L_|  | (the bottom right corner of the label will be rounded)\n * topCorner: |      |\n *            |___E__|\n *                     ___\n *                    |_L_| (the bottom right corner of the label will be rounded)\n * aboveElementWider: | |\n *                    |E|\n *                    |_|\n *                      ______\n * bottomCornerTaller: |  L   |_____\n *                     |______|__E__|\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const LabelTypes = {\n  topCorner: 'top-corner',\n  aboveElement: 'above-element',\n  belowElement: 'below-element',\n  aboveElementWider: 'above-element-wider',\n  belowElementWider: 'below-element-wider',\n  bottomCornerWider: 'bottom-corner-wider',\n  bottomCornerTaller: 'bottom-corner-taller',\n  bottomCornerWiderTaller: 'bottom-corner-wider-taller',\n};\n\n/**\n * Calculates the coordinates to place the label based on position type\n */\nexport function getPositionFromLabelType(positionType: string, bounds: Omit<Bounds, 'allPoints'>, labelHeight: number):\n    {contentTop: number, contentLeft: number} {\n  let contentTop = 0;\n  switch (positionType) {\n    case LabelTypes.topCorner:\n      contentTop = bounds.minY;\n      break;\n    case LabelTypes.aboveElement:\n    case LabelTypes.aboveElementWider:\n      contentTop = bounds.minY - labelHeight;\n      break;\n    case LabelTypes.belowElement:\n    case LabelTypes.belowElementWider:\n      contentTop = bounds.maxY;\n      break;\n    case LabelTypes.bottomCornerWider:\n    case LabelTypes.bottomCornerTaller:\n    case LabelTypes.bottomCornerWiderTaller:\n      contentTop = bounds.maxY - labelHeight;\n      break;\n  }\n  return {\n    contentTop,\n    contentLeft: bounds.minX,\n  };\n}\n\n/**\n * Determines the position type of the label based on the element it's associated\n * with, avoiding overlaps between other labels\n */\nexport function getLabelType(\n    bounds: Omit<Bounds, 'allPoints'>, labelHeight: number, labelWidth: number,\n    otherLabels: HTMLCollectionOf<HTMLElement>, canvasHeight: number): string {\n  let labelType;\n  // Label goes in the top left corner if the element is bigger than the label\n  // or if there are too many child nodes\n  const widerThanElement = bounds.minX + labelWidth > bounds.maxX;\n  const tallerThanElement = bounds.minY + labelHeight > bounds.maxY;\n  if ((!widerThanElement && !tallerThanElement) || otherLabels.length >= MAX_CHILD_ELEMENTS_THRESHOLD) {\n    return LabelTypes.topCorner;\n  }\n\n  // Check if the new label would overlap with an existing label if placed above\n  // its element\n  let overlaps = false;\n  for (let i = 0; i < otherLabels.length; i++) {\n    const currentLabel = otherLabels[i];\n    const rect = currentLabel.getBoundingClientRect();\n    // Skip the newly created/appended element that is currently being placed\n    if (currentLabel.style.top === '' && currentLabel.style.left === '') {\n      continue;\n    }\n    const topOverlaps = bounds.minY - labelHeight <= rect.top + rect.height && bounds.minY - labelHeight >= rect.top;\n    const bottomOverlaps = bounds.minY <= rect.top + rect.height && bounds.minY >= rect.top;\n    const leftOverlaps = bounds.minX >= rect.left && bounds.minX <= rect.left + rect.width;\n    const rightOverlaps = bounds.minX + labelWidth >= rect.left && bounds.minX + labelWidth <= rect.left + rect.width;\n    const sideOverlaps = leftOverlaps || rightOverlaps;\n    if (sideOverlaps && (topOverlaps || bottomOverlaps)) {\n      overlaps = true;\n      break;\n    }\n  }\n  // Label goes on top of the element if the element is too small\n  if (bounds.minY - labelHeight > 0 && !overlaps) {\n    labelType = LabelTypes.aboveElement;\n    if (widerThanElement) {\n      labelType = LabelTypes.aboveElementWider;\n    }\n    // Label goes below the element if would go off the screen/overlap with another label\n  } else if (bounds.maxY + labelHeight < canvasHeight) {\n    labelType = LabelTypes.belowElement;\n    if (widerThanElement) {\n      labelType = LabelTypes.belowElementWider;\n    }\n    // Label goes in the bottom left corner of the element if putting it below the element would make it go off the screen\n  } else {\n    if (widerThanElement && tallerThanElement) {\n      labelType = LabelTypes.bottomCornerWiderTaller;\n    } else if (widerThanElement) {\n      labelType = LabelTypes.bottomCornerWider;\n    } else {\n      labelType = LabelTypes.bottomCornerTaller;\n    }\n  }\n  return labelType;\n}\n\nfunction drawPath(\n    context: CanvasRenderingContext2D, commands: Array<string|number>, outlineColor: string|undefined, isChild: boolean,\n    bounds: PathBounds, emulationScaleFactor: number): Path2D {\n  context.save();\n  const path = buildPath(commands, bounds, emulationScaleFactor);\n  if (outlineColor) {\n    context.strokeStyle = outlineColor;\n    context.lineWidth = 2;\n    if (!isChild) {\n      context.setLineDash([3, 3]);\n    }\n    context.stroke(path);\n  }\n  context.restore();\n  return path;\n}\n"]}