{"version":3,"file":"tool_distances.js","sourceRoot":"","sources":["../../../../inspector_overlay/tool_distances.ts"],"names":[],"mappings":"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","sourcesContent":["//  Copyright 2019 The Chromium Authors. All rights reserved.\n//  Use of this source code is governed by a BSD-style license that can be\n//  found in the LICENSE file.\n\nimport {Overlay} from './common.js';\n\ninterface Style {\n  'background-color': string;\n  'background-image': string;\n  'border-left-width': string;\n  'border-left-style': string;\n  'border-left-color': string;\n  'border-right-width': string;\n  'border-right-style': string;\n  'border-right-color': string;\n  'border-top-width': string;\n  'border-top-style': string;\n  'border-top-color': string;\n  'border-bottom-width': string;\n  'border-bottom-style': string;\n  'border-bottom-color': string;\n  'outline-width': string;\n  'outline-style': string;\n  'outline-color': string;\n  'box-shadow': string;\n}\n\ntype StyleKey = keyof Style;\ntype Quad = number[];\n\ninterface DistanceInfo {\n  style: Style;\n  border: Quad;\n  padding: Quad;\n  content: Quad;\n  boxes: number[][];\n}\n\nexport class DistancesOverlay extends Overlay {\n  drawDistances({distanceInfo}: {distanceInfo: DistanceInfo}) {\n    if (!distanceInfo) {\n      return;\n    }\n    const rect = quadToRect(getVisualQuad(distanceInfo));\n    this.context.save();\n    this.context.strokeStyle = '#ccc';\n    for (const box of distanceInfo.boxes) {\n      this.context.strokeRect(box[0], box[1], box[2], box[3]);\n    }\n    this.context.strokeStyle = '#f00';\n    this.context.lineWidth = 1;\n    this.context.rect(rect.x - 0.5, rect.y - 0.5, rect.w + 1, rect.h + 1);\n    this.context.stroke();\n    this.context.restore();\n  }\n\n  install() {\n    this.document.body.classList.add('fill');\n\n    const canvas = this.document.createElement('canvas');\n    canvas.id = 'canvas';\n    canvas.classList.add('fill');\n    this.document.body.append(canvas);\n\n    this.setCanvas(canvas);\n\n    super.install();\n  }\n\n  uninstall() {\n    this.document.body.classList.remove('fill');\n    this.document.body.innerHTML = '';\n    super.uninstall();\n  }\n}\n\nfunction getVisualQuad(data: DistanceInfo): Quad {\n  const style = data['style'];\n  if (shouldUseVisualBorder(style)) {\n    return data['border'];\n  }\n  if (shouldUseVisualPadding(style)) {\n    return data['padding'];\n  }\n  return data['content'];\n\n  function shouldUseVisualBorder(style: Style): boolean {\n    const sides = ['top', 'right', 'bottom', 'left'];\n    for (const side of sides) {\n      const borderWidth = style[`border-${side}-width` as StyleKey];\n      const borderStyle = style[`border-${side}-style` as StyleKey];\n      const borderColor = style[`border-${side}-color` as StyleKey];\n      if (borderWidth !== '0px' && borderStyle !== 'none' && !borderColor.endsWith('00')) {\n        return true;\n      }\n    }\n    const outlineWidth = style['outline-width'];\n    const outlineStyle = style['outline-style'];\n    const outlineColor = style['outline-color'];\n    if (outlineWidth !== '0px' && outlineStyle !== 'none' && !outlineColor.endsWith('00')) {\n      return true;\n    }\n    const boxShadow = style['box-shadow'];\n    if (boxShadow !== 'none') {\n      return true;\n    }\n    return false;\n  }\n\n  function shouldUseVisualPadding(style: Style): boolean {\n    const bgColor = style['background-color'];\n    const bgImage = style['background-image'];\n    if (!bgColor.startsWith('#FFFFFF') && !bgColor.endsWith('00')) {\n      return true;\n    }\n    if (bgImage !== 'none') {\n      return true;\n    }\n    return false;\n  }\n}\n\nfunction quadToRect(quad: Quad): {x: number, y: number, w: number, h: number} {\n  return {x: quad[0], y: quad[1], w: quad[4] - quad[0], h: quad[5] - quad[1]};\n}\n"]}