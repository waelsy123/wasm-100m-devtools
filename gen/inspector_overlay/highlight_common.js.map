{"version":3,"file":"highlight_common.js","sourceRoot":"","sources":["../../../../inspector_overlay/highlight_common.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n//  Copyright (C) 2012 Google Inc. All rights reserved.\n\n//  Redistribution and use in source and binary forms, with or without\n//  modification, are permitted provided that the following conditions\n//  are met:\n\n//  1.  Redistributions of source code must retain the above copyright\n//      notice, this list of conditions and the following disclaimer.\n//  2.  Redistributions in binary form must reproduce the above copyright\n//      notice, this list of conditions and the following disclaimer in the\n//      documentation and/or other materials provided with the distribution.\n//  3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n//      its contributors may be used to endorse or promote products derived\n//      from this software without specific prior written permission.\n\n//  THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n//  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n//  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n//  DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n//  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n//  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n//  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n//  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n//  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {rgbaToHsla, rgbaToHwba} from '../front_end/core/common/ColorUtils.js';  // eslint-disable-line rulesdir/es_modules_import\n\nimport type {Bounds, PathCommands, Quad} from './common.js';\n\nexport type PathBounds = Bounds&{\n  leftmostXForY: {[key: string]: number},\n  rightmostXForY: {[key: string]: number},\n  topmostYForX: {[key: string]: number},\n  bottommostYForX: {[key: string]: number},\n};\n\nexport interface LineStyle {\n  color?: string;\n  pattern?: LinePattern;\n}\n\nexport interface BoxStyle {\n  fillColor?: string;\n  hatchColor?: string;\n}\n\nexport const enum LinePattern {\n  Solid = 'solid',\n  Dotted = 'dotted',\n  Dashed = 'dashed',\n}\n\nexport function drawPathWithLineStyle(\n    context: CanvasRenderingContext2D, path: Path2D, lineStyle?: LineStyle, lineWidth: number = 1) {\n  if (lineStyle && lineStyle.color) {\n    context.save();\n    context.translate(0.5, 0.5);\n    context.lineWidth = lineWidth;\n    if (lineStyle.pattern === LinePattern.Dashed) {\n      context.setLineDash([3, 3]);\n    }\n    if (lineStyle.pattern === LinePattern.Dotted) {\n      context.setLineDash([2, 2]);\n    }\n    context.strokeStyle = lineStyle.color;\n    context.stroke(path);\n    context.restore();\n  }\n}\n\nexport function fillPathWithBoxStyle(\n    context: CanvasRenderingContext2D, path: Path2D, bounds: PathBounds, angle: number, boxStyle?: BoxStyle) {\n  if (!boxStyle) {\n    return;\n  }\n\n  context.save();\n  if (boxStyle.fillColor) {\n    context.fillStyle = boxStyle.fillColor;\n    context.fill(path);\n  }\n  if (boxStyle.hatchColor) {\n    hatchFillPath(context, path, bounds, 10, boxStyle.hatchColor, angle, false);\n  }\n  context.restore();\n}\n\nexport function buildPath(commands: Array<string|number>, bounds: PathBounds, emulationScaleFactor: number): Path2D {\n  let commandsIndex = 0;\n\n  function extractPoints(count: number): number[] {\n    const points = [];\n\n    for (let i = 0; i < count; ++i) {\n      const x = Math.round(commands[commandsIndex++] as number * emulationScaleFactor);\n      bounds.maxX = Math.max(bounds.maxX, x);\n      bounds.minX = Math.min(bounds.minX, x);\n\n      const y = Math.round(commands[commandsIndex++] as number * emulationScaleFactor);\n      bounds.maxY = Math.max(bounds.maxY, y);\n      bounds.minY = Math.min(bounds.minY, y);\n\n      bounds.leftmostXForY[y] = Math.min(bounds.leftmostXForY[y] || Number.MAX_VALUE, x);\n      bounds.rightmostXForY[y] = Math.max(bounds.rightmostXForY[y] || Number.MIN_VALUE, x);\n      bounds.topmostYForX[x] = Math.min(bounds.topmostYForX[x] || Number.MAX_VALUE, y);\n      bounds.bottommostYForX[x] = Math.max(bounds.bottommostYForX[x] || Number.MIN_VALUE, y);\n\n      bounds.allPoints.push({x, y});\n\n      points.push(x, y);\n    }\n\n    return points;\n  }\n\n  const commandsLength = commands.length;\n  const path = new Path2D();\n  while (commandsIndex < commandsLength) {\n    switch (commands[commandsIndex++]) {\n      case 'M':\n        path.moveTo.apply(path, extractPoints(1) as [number, number]);\n        break;\n      case 'L':\n        path.lineTo.apply(path, extractPoints(1) as [number, number]);\n        break;\n      case 'C':\n        path.bezierCurveTo.apply(path, extractPoints(3) as [number, number, number, number, number, number]);\n        break;\n      case 'Q':\n        path.quadraticCurveTo.apply(path, extractPoints(2) as [number, number, number, number]);\n        break;\n      case 'Z':\n        path.closePath();\n        break;\n    }\n  }\n\n  return path;\n}\n\nexport function emptyBounds(): PathBounds {\n  const bounds = {\n    minX: Number.MAX_VALUE,\n    minY: Number.MAX_VALUE,\n    maxX: -Number.MAX_VALUE,\n    maxY: -Number.MAX_VALUE,\n    leftmostXForY: {},\n    rightmostXForY: {},\n    topmostYForX: {},\n    bottommostYForX: {},\n    allPoints: [],\n  };\n  return bounds;\n}\n\nexport function applyMatrixToPoint(point: {x: number, y: number}, matrix: DOMMatrix): {x: number, y: number} {\n  let domPoint = new DOMPoint(point.x, point.y);\n  domPoint = domPoint.matrixTransform(matrix);\n  return {x: domPoint.x, y: domPoint.y};\n}\n\nconst HATCH_LINE_LENGTH = 5;\nconst HATCH_LINE_GAP = 3;\nlet hatchLinePattern: CanvasPattern;\nlet hatchLineColor: string = '';\n\n/**\n * Draw line hatching at a 45 degree angle for a given\n * path.\n *   __________\n *   |\\  \\  \\ |\n *   | \\  \\  \\|\n *   |  \\  \\  |\n *   |\\  \\  \\ |\n *   **********\n */\nexport function hatchFillPath(\n    context: CanvasRenderingContext2D, path: Path2D, bounds: Bounds, delta: number, color: string,\n    rotationAngle: number, flipDirection: boolean|undefined) {\n  // Make the bounds be at most the canvas size if it is bigger in any direction.\n  // Making the bounds bigger than the canvas is useless as what's drawn there won't be visible.\n  if (context.canvas.width < bounds.maxX - bounds.minX || context.canvas.height < bounds.maxY - bounds.minY) {\n    bounds = {\n      minX: 0,\n      maxX: context.canvas.width,\n      minY: 0,\n      maxY: context.canvas.height,\n      allPoints: [],\n    };\n  }\n\n  // If we haven't done it yet, initialize an offscreen canvas used to create the dashed line repeated pattern.\n  if (!hatchLinePattern || color !== hatchLineColor) {\n    hatchLineColor = color;\n\n    const offscreenCanvas = document.createElement('canvas');\n    offscreenCanvas.width = delta;\n    offscreenCanvas.height = HATCH_LINE_LENGTH + HATCH_LINE_GAP;\n\n    const offscreenCtx = offscreenCanvas.getContext('2d') as CanvasRenderingContext2D;\n    offscreenCtx.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n    offscreenCtx.rect(0, 0, 1, HATCH_LINE_LENGTH);\n    offscreenCtx.fillStyle = color;\n    offscreenCtx.fill();\n\n    hatchLinePattern = context.createPattern(offscreenCanvas, 'repeat') as CanvasPattern;\n  }\n\n  context.save();\n\n  const matrix = new DOMMatrix();\n  hatchLinePattern.setTransform(matrix.scale(flipDirection ? -1 : 1, 1).rotate(0, 0, -45 + rotationAngle));\n\n  context.fillStyle = hatchLinePattern;\n  context.fill(path);\n\n  context.restore();\n}\n\n/**\n * Given a quad, create the corresponding path object. This also accepts a list of quads to clip from the resulting\n * path.\n */\nexport function createPathForQuad(\n    outerQuad: Quad, quadsToClip: Quad[], bounds: PathBounds, emulationScaleFactor: number) {\n  let commands = [\n    'M',\n    outerQuad.p1.x,\n    outerQuad.p1.y,\n    'L',\n    outerQuad.p2.x,\n    outerQuad.p2.y,\n    'L',\n    outerQuad.p3.x,\n    outerQuad.p3.y,\n    'L',\n    outerQuad.p4.x,\n    outerQuad.p4.y,\n  ];\n  for (const quad of quadsToClip) {\n    commands = [\n      ...commands,    'L', quad.p4.x, quad.p4.y, 'L', quad.p3.x, quad.p3.y, 'L', quad.p2.x,\n      quad.p2.y,      'L', quad.p1.x, quad.p1.y, 'L', quad.p4.x, quad.p4.y, 'L', outerQuad.p4.x,\n      outerQuad.p4.y,\n    ];\n  }\n  commands.push('Z');\n\n  return buildPath(commands, bounds, emulationScaleFactor);\n}\n\nexport function parseHexa(hexa: string): Array<number> {\n  return (hexa.match(/#(\\w\\w)(\\w\\w)(\\w\\w)(\\w\\w)/) || []).slice(1).map(c => parseInt(c, 16) / 255);\n}\n\nexport function formatRgba(rgba: number[], colorFormat: 'rgb'|'hsl'|'hwb'): string {\n  if (colorFormat === 'rgb') {\n    const [r, g, b, a] = rgba;\n    // rgb(r g b [ / a])\n    return `rgb(${(r * 255).toFixed()} ${(g * 255).toFixed()} ${(b * 255).toFixed()}${\n        a === 1 ? '' : ' / ' + Math.round(a * 100) / 100})`;\n  }\n\n  if (colorFormat === 'hsl') {\n    const [h, s, l, a] = rgbaToHsla(rgba);\n    // hsl(hdeg s l [ / a])\n    return `hsl(${Math.round(h * 360)}deg ${Math.round(s * 100)} ${Math.round(l * 100)}${\n        a === 1 ? '' : ' / ' + Math.round(a * 100) / 100})`;\n  }\n\n  if (colorFormat === 'hwb') {\n    const [h, w, b, a] = rgbaToHwba(rgba);\n    // hwb(hdeg w b [ / a])\n    return `hwb(${Math.round(h * 360)}deg ${Math.round(w * 100)} ${Math.round(b * 100)}${\n        a === 1 ? '' : ' / ' + Math.round(a * 100) / 100})`;\n  }\n\n  throw new Error('NOT_REACHED');\n}\n\nexport function formatColor(hexa: string, colorFormat: string): string {\n  if (colorFormat === 'rgb' || colorFormat === 'hsl' || colorFormat === 'hwb') {\n    return formatRgba(parseHexa(hexa), colorFormat);\n  }\n\n  if (hexa.endsWith('FF')) {\n    // short hex if no alpha\n    return hexa.substr(0, 7);\n  }\n\n  return hexa;\n}\n\nexport function drawPath(\n    context: CanvasRenderingContext2D, commands: PathCommands, fillColor: string|undefined,\n    outlineColor: string|undefined, outlinePattern: LinePattern|undefined, bounds: PathBounds,\n    emulationScaleFactor: number) {\n  context.save();\n  const path = buildPath(commands, bounds, emulationScaleFactor);\n  if (fillColor) {\n    context.fillStyle = fillColor;\n    context.fill(path);\n  }\n  if (outlineColor) {\n    if (outlinePattern === LinePattern.Dashed) {\n      context.setLineDash([3, 3]);\n    }\n    if (outlinePattern === LinePattern.Dotted) {\n      context.setLineDash([2, 2]);\n    }\n    context.lineWidth = 2;\n    context.strokeStyle = outlineColor;\n    context.stroke(path);\n  }\n  context.restore();\n  return path;\n}\n"]}