{"version":3,"file":"tool_viewport_size.js","sourceRoot":"","sources":["../../../../inspector_overlay/tool_viewport_size.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EAAC,OAAO,EAAC,MAAM,aAAa,CAAC;AAEpC,MAAM,aAAa,GAAG,mBAAmB,CAAC;AAC1C,MAAM,mBAAmB,GAAG,yBAAyB,CAAC;AAEtD,SAAS,YAAY,CAAC,CAAS;IAC7B,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC;AAED,MAAM,OAAO,mBAAoB,SAAQ,OAAO;IAC9C,OAAO;QACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACzC,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QACrD,MAAM,CAAC,EAAE,GAAG,QAAQ,CAAC;QACrB,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAClC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACvB,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IAED,SAAS;QACP,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC5C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QAClC,KAAK,CAAC,SAAS,EAAE,CAAC;IACpB,CAAC;IAED,YAAY;QACV,MAAM,YAAY,GAAG,IAAI,CAAC,2BAA2B,IAAI,IAAI,CAAC,YAAY,CAAC;QAC3E,MAAM,IAAI,GAAG,GAAG,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,WAAW,YAAY,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC;QACjG,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,IAAI,CAAC,CAAC;QAC1C,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,QAAQ,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,CAAC;QACrF,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;QACvD,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,mBAAmB,CAAC;QAC7C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,GAAG,SAAS,GAAG,EAAE,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,CAAC,CAAC;QACxE,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,aAAa,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,WAAW,GAAG,SAAS,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;QAC7D,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IACzB,CAAC;CACF","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {Overlay} from './common.js';\n\nconst darkGridColor = 'rgba(0 0 0 / 0.7)';\nconst gridBackgroundColor = 'rgba(255 255 255 / 0.8)';\n\nfunction formatNumber(n: number): string {\n  return n % 1 ? n.toFixed(2) : String(n);\n}\n\nexport class ViewportSizeOverlay extends Overlay {\n  install() {\n    this.document.body.classList.add('fill');\n    const canvas = this.document.createElement('canvas');\n    canvas.id = 'canvas';\n    canvas.classList.add('fill');\n    this.document.body.append(canvas);\n    this.setCanvas(canvas);\n    super.install();\n  }\n\n  uninstall() {\n    this.document.body.classList.remove('fill');\n    this.document.body.innerHTML = '';\n    super.uninstall();\n  }\n\n  drawViewSize() {\n    const viewportSize = this.viewportSizeForMediaQueries || this.viewportSize;\n    const text = `${formatNumber(viewportSize.width)}px \\xD7 ${formatNumber(viewportSize.height)}px`;\n    const canvasWidth = this.canvasWidth || 0;\n    this.context.save();\n    this.context.font = `14px ${this.window.getComputedStyle(document.body).fontFamily}`;\n    const textWidth = this.context.measureText(text).width;\n    this.context.fillStyle = gridBackgroundColor;\n    this.context.fillRect(canvasWidth - textWidth - 12, 0, canvasWidth, 25);\n    this.context.fillStyle = darkGridColor;\n    this.context.fillText(text, canvasWidth - textWidth - 6, 18);\n    this.context.restore();\n  }\n}\n"]}