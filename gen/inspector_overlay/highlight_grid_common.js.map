{"version":3,"file":"highlight_grid_common.js","sourceRoot":"","sources":["../../../../inspector_overlay/highlight_grid_common.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n//  Copyright (C) 2012 Google Inc. All rights reserved.\n\n//  Redistribution and use in source and binary forms, with or without\n//  modification, are permitted provided that the following conditions\n//  are met:\n\n//  1.  Redistributions of source code must retain the above copyright\n//      notice, this list of conditions and the following disclaimer.\n//  2.  Redistributions in binary form must reproduce the above copyright\n//      notice, this list of conditions and the following disclaimer in the\n//      documentation and/or other materials provided with the distribution.\n//  3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n//      its contributors may be used to endorse or promote products derived\n//      from this software without specific prior written permission.\n\n//  THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n//  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n//  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n//  DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n//  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n//  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n//  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n//  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n//  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport type {AreaBounds, Bounds} from './common.js';\nimport type {GridLabelState} from './css_grid_label_helpers.js';\nimport {drawGridLabels} from './css_grid_label_helpers.js';\nimport {applyMatrixToPoint, buildPath, emptyBounds, hatchFillPath} from './highlight_common.js';\n\n// TODO(alexrudenko): Grid label unit tests depend on this style so it cannot be extracted yet.\nexport const gridStyle = `\n/* Grid row and column labels */\n.grid-label-content {\n  position: absolute;\n  -webkit-user-select: none;\n  padding: 2px;\n  font-family: Menlo, monospace;\n  font-size: 10px;\n  min-width: 17px;\n  min-height: 15px;\n  border-radius: 2px;\n  box-sizing: border-box;\n  z-index: 1;\n  background-clip: padding-box;\n  pointer-events: none;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.grid-label-content[data-direction=row] {\n  background-color: var(--row-label-color, #1A73E8);\n  color: var(--row-label-text-color, #121212);\n}\n\n.grid-label-content[data-direction=column] {\n  background-color: var(--column-label-color, #1A73E8);\n  color: var(--column-label-text-color,#121212);\n}\n\n.line-names ul,\n.line-names .line-name {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\n.line-names .line-name {\n  max-width: 100px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.line-names .grid-label-content,\n.line-numbers .grid-label-content,\n.track-sizes .grid-label-content {\n  border: 1px solid white;\n  --inner-corner-avoid-distance: 15px;\n}\n\n.grid-label-content.top-left.inner-shared-corner,\n.grid-label-content.top-right.inner-shared-corner {\n  transform: translateY(var(--inner-corner-avoid-distance));\n}\n\n.grid-label-content.bottom-left.inner-shared-corner,\n.grid-label-content.bottom-right.inner-shared-corner {\n  transform: translateY(calc(var(--inner-corner-avoid-distance) * -1));\n}\n\n.grid-label-content.left-top.inner-shared-corner,\n.grid-label-content.left-bottom.inner-shared-corner {\n  transform: translateX(var(--inner-corner-avoid-distance));\n}\n\n.grid-label-content.right-top.inner-shared-corner,\n.grid-label-content.right-bottom.inner-shared-corner {\n  transform: translateX(calc(var(--inner-corner-avoid-distance) * -1));\n}\n\n.line-names .grid-label-content::before,\n.line-numbers .grid-label-content::before,\n.track-sizes .grid-label-content::before {\n  position: absolute;\n  z-index: 1;\n  pointer-events: none;\n  content: \"\";\n  width: 3px;\n  height: 3px;\n  border: 1px solid white;\n  border-width: 0 1px 1px 0;\n}\n\n.line-names .grid-label-content[data-direction=row]::before,\n.line-numbers .grid-label-content[data-direction=row]::before,\n.track-sizes .grid-label-content[data-direction=row]::before {\n  background: var(--row-label-color, #1A73E8);\n}\n\n.line-names .grid-label-content[data-direction=column]::before,\n.line-numbers .grid-label-content[data-direction=column]::before,\n.track-sizes .grid-label-content[data-direction=column]::before {\n  background: var(--column-label-color, #1A73E8);\n}\n\n.grid-label-content.bottom-mid::before {\n  transform: translateY(-1px) rotate(45deg);\n  top: 100%;\n}\n\n.grid-label-content.top-mid::before {\n  transform: translateY(-3px) rotate(-135deg);\n  top: 0%;\n}\n\n.grid-label-content.left-mid::before {\n  transform: translateX(-3px) rotate(135deg);\n  left: 0%\n}\n\n.grid-label-content.right-mid::before {\n  transform: translateX(3px) rotate(-45deg);\n  right: 0%;\n}\n\n.grid-label-content.right-top::before {\n  transform: translateX(3px) translateY(-1px) rotate(-90deg) skewY(30deg);\n  right: 0%;\n  top: 0%;\n}\n\n.grid-label-content.right-bottom::before {\n  transform: translateX(3px) translateY(-3px) skewX(30deg);\n  right: 0%;\n  top: 100%;\n}\n\n.grid-label-content.bottom-right::before {\n  transform:  translateX(1px) translateY(-1px) skewY(30deg);\n  right: 0%;\n  top: 100%;\n}\n\n.grid-label-content.bottom-left::before {\n  transform:  translateX(-1px) translateY(-1px) rotate(90deg) skewX(30deg);\n  left: 0%;\n  top: 100%;\n}\n\n.grid-label-content.left-top::before {\n  transform: translateX(-3px) translateY(-1px) rotate(180deg) skewX(30deg);\n  left: 0%;\n  top: 0%;\n}\n\n.grid-label-content.left-bottom::before {\n  transform: translateX(-3px) translateY(-3px) rotate(90deg) skewY(30deg);\n  left: 0%;\n  top: 100%;\n}\n\n.grid-label-content.top-right::before {\n  transform:  translateX(1px) translateY(-3px) rotate(-90deg) skewX(30deg);\n  right: 0%;\n  top: 0%;\n}\n\n.grid-label-content.top-left::before {\n  transform:  translateX(-1px) translateY(-3px) rotate(180deg) skewY(30deg);\n  left: 0%;\n  top: 0%;\n}\n\n@media (forced-colors: active) {\n  .grid-label-content {\n      border-color: Highlight;\n      background-color: Canvas;\n      color: Text;\n      forced-color-adjust: none;\n  }\n  .grid-label-content::before {\n    background-color: Canvas;\n    border-color: Highlight;\n  }\n}`;\n\nexport interface GridHighlight {\n  gridBorder: Array<string|number>;\n  writingMode: string;\n  rowGaps: Array<string|number>;\n  rotationAngle: number;\n  columnGaps: Array<string|number>;\n  rows: Array<string|number>;\n  columns: Array<string|number>;\n  areaNames: {[key: string]: Array<string|number>};\n  gridHighlightConfig: {\n    gridBackgroundColor?: string,\n    gridBorderColor?: string,\n    rowGapColor?: string,\n    columnGapColor?: string,\n    areaBorderColor?: string,\n                   gridBorderDash: boolean,\n                   rowLineDash: boolean,\n                   columnLineDash: boolean,\n                   showGridExtensionLines: boolean,\n                   showPositiveLineNumbers: boolean,\n                   showNegativeLineNumbers: boolean,\n                   rowLineColor: string,\n                   columnLineColor: string,\n                   rowHatchColor: string,\n                   columnHatchColor: string,\n                   showLineNames: boolean,\n  };\n}\n\nexport function drawLayoutGridHighlight(\n    highlight: GridHighlight, context: CanvasRenderingContext2D, deviceScaleFactor: number, canvasWidth: number,\n    canvasHeight: number, emulationScaleFactor: number, labelState: GridLabelState) {\n  const gridBounds = emptyBounds();\n  const gridPath = buildPath(highlight.gridBorder, gridBounds, emulationScaleFactor);\n\n  // Transform the context to match the current writing-mode.\n  context.save();\n  applyWritingModeTransformation(highlight.writingMode, gridBounds, context);\n\n  // Draw grid background\n  if (highlight.gridHighlightConfig.gridBackgroundColor) {\n    context.fillStyle = highlight.gridHighlightConfig.gridBackgroundColor;\n    context.fill(gridPath);\n  }\n\n  // Draw Grid border\n  if (highlight.gridHighlightConfig.gridBorderColor) {\n    context.save();\n    context.translate(0.5, 0.5);\n    context.lineWidth = 0;\n    if (highlight.gridHighlightConfig.gridBorderDash) {\n      context.setLineDash([3, 3]);\n    }\n    context.strokeStyle = highlight.gridHighlightConfig.gridBorderColor;\n    context.stroke(gridPath);\n    context.restore();\n  }\n\n  // Draw grid lines\n  const rowBounds = drawGridLines(context, highlight, 'row', emulationScaleFactor);\n  const columnBounds = drawGridLines(context, highlight, 'column', emulationScaleFactor);\n\n  // Draw gaps\n  drawGridGap(\n      context, highlight.rowGaps, highlight.gridHighlightConfig.rowGapColor,\n      highlight.gridHighlightConfig.rowHatchColor, highlight.rotationAngle, emulationScaleFactor,\n      /* flipDirection */ true);\n  drawGridGap(\n      context, highlight.columnGaps, highlight.gridHighlightConfig.columnGapColor,\n      highlight.gridHighlightConfig.columnHatchColor, highlight.rotationAngle, emulationScaleFactor,\n      /* flipDirection */ false);\n\n  // Draw named grid areas\n  const areaBounds =\n      drawGridAreas(context, highlight.areaNames, highlight.gridHighlightConfig.areaBorderColor, emulationScaleFactor);\n\n  // The rest of the overlay is drawn without the writing-mode transformation, but we keep the matrix to transform relevant points.\n  const writingModeMatrix = context.getTransform();\n  writingModeMatrix.scaleSelf(1 / deviceScaleFactor);\n  context.restore();\n\n  if (highlight.gridHighlightConfig.showGridExtensionLines) {\n    if (rowBounds) {\n      drawExtendedGridLines(\n          context, rowBounds, highlight.gridHighlightConfig.rowLineColor, highlight.gridHighlightConfig.rowLineDash,\n          writingModeMatrix, canvasWidth, canvasHeight);\n    }\n    if (columnBounds) {\n      drawExtendedGridLines(\n          context, columnBounds, highlight.gridHighlightConfig.columnLineColor,\n          highlight.gridHighlightConfig.columnLineDash, writingModeMatrix, canvasWidth, canvasHeight);\n    }\n  }\n\n  // Draw all the labels\n  drawGridLabels(\n      highlight, gridBounds, areaBounds, {canvasWidth, canvasHeight}, labelState, emulationScaleFactor,\n      writingModeMatrix);\n}\n\nfunction applyWritingModeTransformation(writingMode: string, gridBounds: Bounds, context: CanvasRenderingContext2D) {\n  if (writingMode !== 'vertical-rl' && writingMode !== 'vertical-lr') {\n    return;\n  }\n\n  const topLeft = gridBounds.allPoints[0];\n  const bottomLeft = gridBounds.allPoints[3];\n\n  // Move to the top-left corner to do all transformations there.\n  context.translate(topLeft.x, topLeft.y);\n\n  if (writingMode === 'vertical-rl') {\n    context.rotate(90 * Math.PI / 180);\n    context.translate(0, -1 * (bottomLeft.y - topLeft.y));\n  }\n\n  if (writingMode === 'vertical-lr') {\n    context.rotate(90 * Math.PI / 180);\n    context.scale(1, -1);\n  }\n\n  // Move back to the original point.\n  context.translate(topLeft.x * -1, topLeft.y * -1);\n}\n\nfunction drawGridLines(\n    context: CanvasRenderingContext2D, highlight: GridHighlight, direction: 'row'|'column',\n    emulationScaleFactor: number) {\n  const tracks = highlight[`${direction}s` as 'rows' | 'columns'];\n  const color = highlight.gridHighlightConfig[`${direction}LineColor` as 'rowLineColor' | 'columnLineColor'];\n  const dash = highlight.gridHighlightConfig[`${direction}LineDash` as 'rowLineDash' | 'columnLineDash'];\n\n  if (!color) {\n    return null;\n  }\n\n  const bounds = emptyBounds();\n  const path = buildPath(tracks, bounds, emulationScaleFactor);\n\n  context.save();\n  context.translate(0.5, 0.5);\n  if (dash) {\n    context.setLineDash([3, 3]);\n  }\n  context.lineWidth = 0;\n  context.strokeStyle = color;\n\n  context.save();\n  context.stroke(path);\n  context.restore();\n\n  context.restore();\n\n  return bounds;\n}\n\nfunction drawExtendedGridLines(\n    context: CanvasRenderingContext2D, bounds: Bounds, color: string, dash: boolean|undefined,\n    writingModeMatrix: DOMMatrix, canvasWidth: number, canvasHeight: number) {\n  context.save();\n  context.strokeStyle = color;\n  context.lineWidth = 1;\n  context.translate(0.5, 0.5);\n  if (dash) {\n    context.setLineDash([3, 3]);\n  }\n\n  // A grid track path is a list of lines defined by 2 points.\n  // Here we're going through the list of all points 2 by 2, so we can draw the extensions at the edges of each line.\n  for (let i = 0; i < bounds.allPoints.length; i += 2) {\n    let point1 = applyMatrixToPoint(bounds.allPoints[i], writingModeMatrix);\n    let point2 = applyMatrixToPoint(bounds.allPoints[i + 1], writingModeMatrix);\n    let edgePoint1;\n    let edgePoint2;\n\n    if (point1.x === point2.x) {\n      // Special case for a vertical line.\n      edgePoint1 = {x: point1.x, y: 0};\n      edgePoint2 = {x: point1.x, y: canvasHeight};\n      if (point2.y < point1.y) {\n        [point1, point2] = [point2, point1];\n      }\n    } else if (point1.y === point2.y) {\n      // Special case for a horizontal line.\n      edgePoint1 = {x: 0, y: point1.y};\n      edgePoint2 = {x: canvasWidth, y: point1.y};\n      if (point2.x < point1.x) {\n        [point1, point2] = [point2, point1];\n      }\n    } else {\n      // When the line isn't straight, we need to do some maths.\n      const a = (point2.y - point1.y) / (point2.x - point1.x);\n      const b = (point1.y * point2.x - point2.y * point1.x) / (point2.x - point1.x);\n\n      edgePoint1 = {x: 0, y: b};\n      edgePoint2 = {x: canvasWidth, y: (canvasWidth * a) + b};\n\n      if (point2.x < point1.x) {\n        [point1, point2] = [point2, point1];\n      }\n    }\n\n    context.beginPath();\n    context.moveTo(edgePoint1.x, edgePoint1.y);\n    context.lineTo(point1.x, point1.y);\n    context.moveTo(point2.x, point2.y);\n    context.lineTo(edgePoint2.x, edgePoint2.y);\n    context.stroke();\n  }\n\n  context.restore();\n}\n\n/**\n * Draw all of the named grid area paths. This does not draw the labels, as\n * placing labels in and around the grid for various things is handled later.\n */\nfunction drawGridAreas(\n    context: CanvasRenderingContext2D, areas: {[key: string]: Array<string|number>}, borderColor: string|undefined,\n    emulationScaleFactor: number): AreaBounds[] {\n  if (!areas || !Object.keys(areas).length) {\n    return [];\n  }\n\n  context.save();\n  if (borderColor) {\n    context.strokeStyle = borderColor;\n  }\n  context.lineWidth = 2;\n\n  const areaBounds = [];\n\n  for (const name in areas) {\n    const areaCommands = areas[name];\n\n    const bounds = emptyBounds();\n    const path = buildPath(areaCommands, bounds, emulationScaleFactor);\n\n    context.stroke(path);\n\n    areaBounds.push({name, bounds});\n  }\n\n  context.restore();\n\n  return areaBounds;\n}\n\nfunction drawGridGap(\n    context: CanvasRenderingContext2D, gapCommands: Array<number|string>, gapColor: string|undefined,\n    hatchColor: string|undefined, rotationAngle: number, emulationScaleFactor: number,\n    flipDirection: boolean|undefined) {\n  if (!gapColor && !hatchColor) {\n    return;\n  }\n\n  context.save();\n  context.translate(0.5, 0.5);\n  context.lineWidth = 0;\n\n  const bounds = emptyBounds();\n  const path = buildPath(gapCommands, bounds, emulationScaleFactor);\n\n  // Fill the gap background if needed.\n  if (gapColor) {\n    context.fillStyle = gapColor;\n    context.fill(path);\n  }\n\n  // And draw the hatch pattern if needed.\n  if (hatchColor) {\n    hatchFillPath(context, path, bounds, /* delta */ 10, hatchColor, rotationAngle, flipDirection);\n  }\n  context.restore();\n}\n"]}